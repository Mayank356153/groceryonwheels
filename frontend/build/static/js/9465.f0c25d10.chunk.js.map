{"version":3,"file":"static/js/9465.f0c25d10.chunk.js","mappings":"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","sources":["Loading.jsx","components/Stock/TransferDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport Navbar   from \"../Navbar\";\nimport Sidebar  from \"../Sidebar\";\nimport Loading  from \"../../Loading\";\n\nconst API = \"\";\n\nexport default function TransferDetails() {\n  const { id } = useParams();\n  const nav    = useNavigate();\n  const [data, setData] = useState(null);\n  const [side, setSide] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const token = localStorage.getItem(\"token\");\n      const { data } = await axios.get(`${API}/api/stock-transfers/${id}`, {\n        headers:{ Authorization:`Bearer ${token}` }\n      });\n      setData(data.data);\n    })();\n  }, [id]);\n\n  const downloadPdf = () => {\n    if (!data) return;\n    const doc = new jsPDF();\n    doc.text(`Stock Transfer #${data._id}`, 14, 18);\n    doc.setFontSize(10);\n    doc.text(`Date: ${new Date(data.transferDate).toDateString()}`, 14, 26);\n    doc.text(`From: ${data.fromWarehouse.warehouseName}`, 14, 32);\n    doc.text(`To:   ${data.toWarehouse.warehouseName}`, 14, 38);\n\n    autoTable(doc, {\n      startY: 45,\n      head: [[\"Item Code\",\"Item Name\",\"Qty\"]],\n      body: data.items.map(l => [\n        l.item.itemCode,\n        l.item.itemName + (l.variant?.variantName ? ` / ${l.variant.variantName}` : \"\"),\n        l.quantity\n      ])\n    });\n\n    doc.save(`transfer-${data._id}.pdf`);\n  };\n\n  if (!data) return <Loading/>;\n\n  return (\n    <div className=\"flex h-screen flex-col\">\n      <Navbar isSidebarOpen={side} setSidebarOpen={setSide}/>\n      <div className=\"flex flex-grow\">\n        <Sidebar isSidebarOpen={side}/>\n        <main className=\"flex-1 p-4 space-y-4 overflow-y-auto\">\n\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-xl font-semibold\">Stock Transfer Details</h1>\n            <button onClick={downloadPdf}\n                    className=\"px-4 py-2 text-white bg-cyan-600 rounded\">\n              Download PDF\n            </button>\n          </div>\n\n          <div className=\"p-4 bg-white rounded shadow\">\n            <p><b>Date:</b> {new Date(data.transferDate).toDateString()}</p>\n            <p><b>From:</b> {data.fromWarehouse.warehouseName}</p>\n            <p><b>To&nbsp;&nbsp;:</b> {data.toWarehouse.warehouseName}</p>\n            <p><b>Details:</b> {data.details || \"—\"}</p>\n            <p><b>Note:</b> {data.note || \"—\"}</p>\n          </div>\n\n          <div className=\"overflow-x-auto bg-white rounded shadow\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-gray-100 text-left\">\n                  <th className=\"p-2\">Item Code</th>\n                  <th className=\"p-2\">Item Name</th>\n                  <th className=\"p-2 w-24 text-right\">Qty</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.items.map(l => (\n                  <tr key={l._id} className=\"border-t\">\n                    <td className=\"p-2\">{l.item.itemCode}</td>\n                    <td className=\"p-2\">\n                      {l.item.itemName}\n                      {l.variant?.variantName && ` / ${l.variant.variantName}`}\n                    </td>\n                    <td className=\"p-2 text-right\">{l.quantity}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <button onClick={() => nav(-1)}\n                  className=\"px-4 py-2 text-white bg-gray-500 rounded\">\n            Back\n          </button>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","API","TransferDetails","id","useParams","nav","useNavigate","data","setData","side","setSide","useEffect","token","localStorage","getItem","axios","get","headers","Authorization","onClick","downloadPdf","doc","jsPDF","text","_id","setFontSize","Date","transferDate","toDateString","fromWarehouse","warehouseName","toWarehouse","autoTable","startY","head","body","items","map","l","_l$variant","item","itemCode","itemName","variant","variantName","quantity","save","details","note","_l$variant2","Loading"],"sourceRoot":""}