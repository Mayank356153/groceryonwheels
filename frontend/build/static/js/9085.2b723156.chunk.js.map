{"version":3,"file":"static/js/9085.2b723156.chunk.js","mappings":"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","sources":["components/contact/Input.jsx","components/contact/Button.jsx","components/contact/AddressManager.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport { FaTachometerAlt } from 'react-icons/fa';\nimport Navbar from '../Navbar';\nimport Sidebar from '../Sidebar';\nimport Input from './Input';\nimport Button from './Button';\n\n/* ─────── Axios instance ─────── */\nconst api = axios.create({ baseURL: '/vps/api' });\napi.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\nexport default function AddressManager() {\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const [form, setForm] = useState({\n    label: '', street: '', area: '', city: '', state: '', country: '',\n    postalCode: '', isDefault: false, lat: '', lng: ''   // ← new fields\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError]     = useState(null);\n\n  /* handle changes */\n  const handleChange = e => {\n    const { name, value, type, checked } = e.target;\n    setForm(prev => ({ ...prev, [name]: type==='checkbox' ? checked : value }));\n  };\n\n  /* submit */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      /* only send lat/lng if both provided */\n      const payload = { ...form };\n      if (!payload.lat || !payload.lng) { delete payload.lat; delete payload.lng; }\n      await api.post('/addresses', payload);\n      setForm({ label:'', street:'', area:'', city:'', state:'', country:'', postalCode:'', isDefault:false, lat:'', lng:'' });\n      alert('Address saved');\n    } catch {\n      setError('Failed to save address. Please check your input.');\n    } finally { setLoading(false); }\n  };\n\n  const handleReset = () => { setForm({ label:'', street:'', area:'', city:'', state:'', country:'', postalCode:'', isDefault:false, lat:'', lng:'' }); setError(null); };\n\n  /* ─────── UI ─────── */\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n      <div className=\"flex flex-1\">\n        <Sidebar isSidebarOpen={isSidebarOpen} />\n        <main className=\"flex-1 p-6 bg-gray-100 overflow-auto\">\n          <div className=\"flex justify-between items-end mb-6\">\n            <div>\n              <h1 className=\"text-2xl font-semibold\">Add Address</h1>\n              <p className=\"text-sm text-gray-600\">Enter address & optional coordinates</p>\n            </div>\n            <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:underline\"><FaTachometerAlt className=\"mr-1\"/>Home</NavLink>\n          </div>\n\n          <div className=\"bg-white p-6 rounded shadow-md max-w-3xl mx-auto\">\n            {error && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">{error}</div>}\n\n            <form onSubmit={handleSubmit} onReset={handleReset}>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {/* basic fields */}\n                {[\n                  ['label','Label','text',true], ['street','Street','text',true], ['area','Area (opt.)','text',false],\n                  ['city','City','text',true], ['state','State','text',true], ['country','Country','text',true],\n                  ['postalCode','Postal Code','text',true]\n                ].map(([name,label,type,req])=> (\n                  <Input key={name} name={name} label={label} type={type}\n                         value={form[name]} onChange={handleChange} required={req}\n                         className=\"block w-full p-2 border border-gray-300 rounded\" />\n                ))}\n\n                {/* coordinates */}\n                <Input name=\"lat\" label=\"Latitude (opt.)\" type=\"number\" step=\"any\"\n                       value={form.lat} onChange={handleChange}\n                       className=\"block w-full p-2 border border-gray-300 rounded\" />\n                <Input name=\"lng\" label=\"Longitude (opt.)\" type=\"number\" step=\"any\"\n                       value={form.lng} onChange={handleChange}\n                       className=\"block w-full p-2 border border-gray-300 rounded\" />\n\n                <div className=\"flex items-center col-span-full\">\n                  <label className=\"flex items-center text-sm font-medium text-gray-700\">\n                    <input type=\"checkbox\" name=\"isDefault\" checked={form.isDefault} onChange={handleChange}\n                           className=\"mr-2 h-4 w-4 text-blue-600 border-gray-300 rounded\" /> Set as default\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"flex justify-center gap-4 mt-6\">\n                <Button type=\"submit\" text={loading?'Saving…':'Add'} disabled={loading}\n                        className=\"px-10 py-2 text-white bg-green-500 rounded hover:bg-green-600 disabled:opacity-50\" />\n                <Button type=\"reset\" text=\"Reset\" className=\"px-10 py-2 text-white bg-orange-500 rounded hover:bg-orange-600\" />\n              </div>\n            </form>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["Input","_ref","id","type","label_class","label","className","placeholder","div_class","props","ID","useId","_jsxs","children","_jsx","htmlFor","Button","text","api","axios","create","baseURL","AddressManager","isSidebarOpen","setSidebarOpen","useState","form","setForm","street","area","city","state","country","postalCode","isDefault","lat","lng","loading","setLoading","error","setError","handleChange","e","name","value","checked","target","prev","Navbar","Sidebar","NavLink","to","FaTachometerAlt","onSubmit","async","preventDefault","payload","post","alert","onReset","handleReset","map","req","onChange","required","step","disabled","interceptors","request","use","cfg","t","localStorage","getItem","headers","Authorization"],"sourceRoot":""}