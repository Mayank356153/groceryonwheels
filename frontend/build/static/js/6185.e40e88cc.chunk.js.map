{"version":3,"file":"static/js/6185.e40e88cc.chunk.js","mappings":"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","sources":["components/Places/AddCountry.jsx","Loading.jsx"],"sourcesContent":["// src/components/Countries/AddCountry.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Navigate, useNavigate, useParams, NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\nfunction AddCountry() {\r\n  // Hooks\r\n  const { countryId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    countryName: \"\",\r\n    countryCode: \"\",\r\n    status: \"active\",\r\n  });\r\n\r\n  // Sidebar collapse on small screens\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // Fetch country if editing\r\n  useEffect(() => {\r\n    if (!countryId) return;\r\n    const fetchCountry = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const res = await axios.get(\r\n          `api/countries/${countryId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        const data = res.data.data;\r\n        setFormData({\r\n          countryName: data.countryName || \"\",\r\n          countryCode: data.countryCode || \"\",\r\n          status: data.status || \"active\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching country:\", error);\r\n        alert(\"Error fetching country data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchCountry();\r\n  }, [countryId]);\r\n\r\n  // Admin guard\r\n  const role = localStorage.getItem(\"role\");\r\n  if (role !== \"admin\") {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // Form handlers\r\n  const handleChange = (e) =>\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      if (countryId) {\r\n        await axios.put(\r\n          `api/countries/${countryId}`,\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"Country updated successfully!\");\r\n      } else {\r\n        await axios.post(\r\n          `api/countries`,\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"Country created successfully!\");\r\n      }\r\n      navigate(\"/country-list\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting country:\", error);\r\n      alert(\"Error submitting country.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => navigate(\"/country-list\");\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className=\"flex-grow p-4 transition-all duration-300 w-full\">\r\n          <h1 className=\"mb-2 text-2xl font-bold\">\r\n            {countryId ? \"Edit Country\" : \"Add Country\"}\r\n          </h1>\r\n          <nav className=\"flex items-center text-xs text-gray-500 mb-4\">\r\n            <NavLink\r\n              to=\"/dashboard\"\r\n              className=\"flex items-center no-underline hover:text-cyan-600\"\r\n            >\r\n              <FaTachometerAlt className=\"mr-2\" /> Home\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/country-list\"\r\n              className=\"flex items-center no-underline hover:text-cyan-600 mx-2\"\r\n            >\r\n              <BiChevronRight className=\"text-gray-400 mt-1.5\" />\r\n              Country List\r\n            </NavLink>\r\n            <BiChevronRight className=\"mx-2 text-gray-400 mt-1.5\" />\r\n            <span>{countryId ? \"Edit Country\" : \"Add Country\"}</span>\r\n          </nav>\r\n          <div className=\"p-6 bg-white rounded shadow-md\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">\r\n                  Country Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"countryName\"\r\n                  value={formData.countryName}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">\r\n                  Country Code\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"countryCode\"\r\n                  value={formData.countryCode}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">Status</label>\r\n                <select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                >\r\n                  <option value=\"active\">Active</option>\r\n                  <option value=\"inactive\">Inactive</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white bg-green-500 rounded hover:bg-green-600\"\r\n                >\r\n                  {countryId ? \"Update Country\" : \"Create Country\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-4 py-2 text-white bg-orange-500 rounded hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCountry;\r\n","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  "],"names":["countryId","useParams","navigate","useNavigate","isSidebarOpen","setSidebarOpen","useState","loading","setLoading","formData","setFormData","countryName","countryCode","status","useEffect","window","innerWidth","async","token","localStorage","getItem","data","axios","get","headers","Authorization","error","console","alert","fetchCountry","_jsx","Navigate","to","replace","handleChange","e","prev","target","name","value","LoadingScreen","_jsxs","className","children","Navbar","Sidebar","NavLink","FaTachometerAlt","BiChevronRight","onSubmit","preventDefault","put","post","type","onChange","required","onClick","handleClose"],"sourceRoot":""}