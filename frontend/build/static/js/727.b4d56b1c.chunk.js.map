{"version":3,"file":"static/js/727.b4d56b1c.chunk.js","mappings":"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","sources":["components/Reports/StockReport.jsx"],"sourcesContent":["import React ,{useState,useEffect,useRef}from 'react'\r\nimport Sidebar from '../Sidebar';\r\nimport Navbar from '../Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport { CameraIcon } from \"@heroicons/react/solid\";\r\nimport Select from 'react-select'\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\n\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nexport default function StockReport() {\r\n  const [showExportDropdown, setShowExportDropdown] = useState(false)\r\n   const[isSidebarOpen,setSidebarOpen]=useState(true)\r\n   const[loading,setLoading]=useState(true)\r\n   const[options,setOptions]=useState({\r\n    warehouses:[],\r\n    categories:[],\r\n    brands:[],\r\n   })\r\n   useEffect(()=>{\r\n    if(window.innerWidth<768){\r\n      setSidebarOpen(false)\r\n    }\r\n   },[])\r\n\r\n   const[SelectedWarehouse,setSelectedWarehouse]=useState(\"all\")\r\n   const[selectedCategory,setSelectedCategory]=useState(\"all\")\r\n   const[selectedBrand,setSelectedBrand]=useState(\"all\")\r\n    \r\n  const [sale, setSales] = useState([]); \r\n  const[total,setTotal]=useState(0)\r\n  const[allItems,setAllItems]=useState([])\r\n   const fetchWarehouses=async()=>{\r\n    try {\r\n      const response = await axios.get('api/warehouses', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     \r\n  \r\n     const warehouses =response.data.data.map((warehouse)=>({\r\n      label:warehouse.warehouseName,\r\n      value:warehouse._id\r\n     }))\r\n       setOptions((prev)=>({\r\n        ...prev,\r\n        warehouses:[{label:\"All\",value:\"all\"},...warehouses]\r\n       }))\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n   \r\n   const fetchCategories=async()=>{\r\n    try {\r\n      const response = await axios.get('api/categories', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     \r\n  \r\n     const category =response.data.data.map((warehouse)=>({\r\n      label:warehouse.name,\r\n      value:warehouse._id\r\n     }))\r\n       setOptions((prev)=>({\r\n        ...prev,\r\n        categories:[{label:\"All\",value:\"all\"},...category]\r\n       }))\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n   \r\n   \r\n\r\n   \r\n   const fetchItems=async()=>{\r\n    try {\r\n      const response = await axios.get('api/items', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     console.log(response.data)\r\n     setAllItems(response.data.data)\r\n    \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n  \r\n   const fetchBrands=async()=>{\r\n    try {\r\n      const response = await axios.get('api/brands', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     \r\n     console.log(response.data);\r\n     const brand =response.data.data.map((warehouse)=>({\r\n      label:warehouse.brandName,\r\n      value:warehouse._id\r\n     }))\r\n       setOptions((prev)=>({\r\n        ...prev,\r\n        brands:[{label:\"All\",value:\"all\"},...brand]\r\n       }))\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n\r\n   useEffect(()=>{\r\n    fetchWarehouses();\r\n    fetchCategories();\r\n     fetchItems();\r\n    fetchBrands();\r\n   },[])\r\n\r\n   const filteredTransfers = allItems.filter((transfer) => {\r\n    const {\r\n      warehouse,\r\n      category,\r\n      brand\r\n    } = transfer;\r\n    \r\n    // Warehouse match\r\n    const warehouseMatch = \r\n      SelectedWarehouse === \"all\" || \r\n      (warehouse && warehouse._id === SelectedWarehouse);\r\n    \r\n    // Category match\r\n    const categoryMatch =\r\n      selectedCategory === \"all\" ||\r\n      (category && category._id === selectedCategory);\r\n    \r\n    // Brand match\r\n    const brandMatch =\r\n      selectedBrand === \"all\" ||\r\n      (brand && brand._id === selectedBrand);\r\n      \r\n    return warehouseMatch && categoryMatch && brandMatch;\r\n  });\r\n \r\n  \r\n \r\n  \r\n  // Export to Excel\r\n  const exportToExcel = () => {\r\n    const excelData = filteredTransfers.map((item, index) => ({\r\n      '#': index + 1,\r\n      'Item Code': item.itemCode || '',\r\n      'Item Name': item.itemName || '',\r\n      'Brand': item.brand?.brandName || '',\r\n      'Category': item.category?.name || '',\r\n      'MRP': item.mrp || 0,\r\n      'Seller Points': item.sellerPoints || 0,\r\n      'Barcode': item.barcode || '',\r\n      'Unit Price': item.priceWithoutTax || 0,\r\n      'Tax': item.tax?.taxName || '',\r\n      'Purchase Cost': item.purchasePrice || 0,\r\n      'Sales Price': item.salesPrice || 0,\r\n      'Current Stock': item.openingStock || 0,\r\n      'Stock Value (Sale)': (item.openingStock || 0) * (item.salesPrice || 0),\r\n      'Stock Value (Purchase)': (item.openingStock || 0) * (item.purchasePrice || 0)\r\n    }));\r\n  \r\n    const worksheet = XLSX.utils.json_to_sheet(excelData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Inventory Report');\r\n    XLSX.writeFile(workbook, 'Inventory_Report.xlsx');\r\n  };\r\n  \r\n  // Export to PDF\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF({\r\n      orientation: 'landscape'\r\n    });\r\n  \r\n    // Add title\r\n    doc.text('Inventory Report', 14, 15);\r\n  \r\n    // Prepare data for PDF\r\n    const pdfData = filteredTransfers.map((item, index) => [\r\n      index + 1,\r\n      item.itemCode || 'N/A',\r\n      item.itemName || 'N/A',\r\n      item.brand?.brandName || 'N/A',\r\n      item.category?.name || 'N/A',\r\n      item.mrp?.toFixed(2) || '0.00',\r\n      item.sellerPoints || '0',\r\n      item.barcode || 'N/A',\r\n      item.priceWithoutTax?.toFixed(2) || '0.00',\r\n      item.tax?.taxName || 'N/A',\r\n      item.purchasePrice?.toFixed(2) || '0.00',\r\n      item.salesPrice?.toFixed(2) || '0.00',\r\n      item.openingStock || '0',\r\n      ((item.openingStock || 0) * (item.salesPrice || 0)).toFixed(2),\r\n      ((item.openingStock || 0) * (item.purchasePrice || 0)).toFixed(2)\r\n    ]);\r\n  \r\n    // Add table to PDF\r\n    autoTable(doc, {\r\n      head: [\r\n        ['#', 'Item Code', 'Item Name', 'Brand', 'Category', 'MRP', \r\n         'Seller Points', 'Barcode', 'Unit Price', 'Tax', 'Purchase Cost',\r\n         'Sales Price', 'Current Stock', 'Stock Value (Sale)', 'Stock Value (Purchase)']\r\n      ],\r\n      body: pdfData,\r\n      startY: 20,\r\n      styles: {\r\n        fontSize: 7,\r\n        cellPadding: 1,\r\n        overflow: 'linebreak'\r\n      },\r\n      headStyles: {\r\n        fillColor: [33, 150, 243], // Blue header\r\n        textColor: 255 // White text\r\n      },\r\n      columnStyles: {\r\n        0: { cellWidth: 8 },\r\n        1: { cellWidth: 15 },\r\n        2: { cellWidth: 25 },\r\n        3: { cellWidth: 15 },\r\n        4: { cellWidth: 15 },\r\n        5: { cellWidth: 12 },\r\n        6: { cellWidth: 15 },\r\n        7: { cellWidth: 20 },\r\n        8: { cellWidth: 12 },\r\n        9: { cellWidth: 12 },\r\n        10: { cellWidth: 15 },\r\n        11: { cellWidth: 12 },\r\n        12: { cellWidth: 15 },\r\n        13: { cellWidth: 20 },\r\n        14: { cellWidth: 20 }\r\n      }\r\n    });\r\n  \r\n    doc.save('Inventory_Report.pdf');\r\n  };\r\n           \r\n          \r\n\r\n  useEffect(()=>console.log(filteredTransfers),[filteredTransfers])\r\n  useEffect(()=>console.log(\"sale\"),[sale])\r\n\r\n  \r\n    return (\r\n      <div className=\"flex flex-col h-screen\">\r\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n        <div className=\"flex flex-grow\">\r\n            <div>\r\n                \r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n            </div>\r\n    \r\n          {/* Main Content */}\r\n          <div className=\"relative flex flex-col flex-grow px-4 py-6 bg-gray-100\">\r\n            {/* Header */}\r\n            <header className=\"flex flex-col items-center justify-between sm:flex-row\">\r\n              <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n                <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Stock Report</h1>\r\n              </div>\r\n              <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n                <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                  <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                </NavLink>\r\n                \r\n                <NavLink to=\"/reports/sale-\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                  &gt; stock Report\r\n                </NavLink>\r\n              </nav>\r\n            </header>\r\n            \r\n            <div className='flex flex-col w-full mx-auto mt-4 bg-white border-t-4 rounded-lg shadow-md border-cyan-600'>\r\n              <div className='w-full h-auto px-2 border-b-2 border-gray-200'>\r\n                <h4 className='text-gray-700'>Please Enter Valid Information</h4>\r\n              </div>\r\n              <div className='py-4 '>\r\n\r\n\r\n                {/* //first row */}\r\n                <div className='flex w-full gap-5 px-4 mb-4'>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">Warehouse</label>\r\n                    <Select className='w-full' options={options.warehouses} onChange={(option)=>setSelectedWarehouse(option.value)} value={options.warehouses.find(option => option.value===SelectedWarehouse)}/>\r\n                  </div>\r\n                  <div className='hidden w-full md:flex '>\r\n                    \r\n                  </div>\r\n                </div>\r\n\r\n                {/* second row */}\r\n                <div className='flex w-full gap-5 px-4 mb-4'>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">Category</label>\r\n                    <Select className='w-full' options={options.categories} onChange={(option)=>setSelectedCategory(option.value)} value={options.categories.find(option => option.value===selectedCategory) || null}/>\r\n                  </div>\r\n                 \r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">Brand</label>\r\n                    <Select className='w-full' options={options.brands} onChange={(option)=>setSelectedBrand(option.value)} value={options.brands.find(option => option.value===selectedBrand) || null}/>\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n\r\n            <div className='flex flex-col w-full mt-5 bg-white border-t-4 border-gray-400'>\r\n              \r\n\r\n            \r\n             <div className='flex w-full px-2 py-2'>\r\n  <div className='w-full'>\r\n    <h4 className='text-gray-700'>Records Table</h4>\r\n  </div>\r\n  <div className=\"relative\">\r\n    <button \r\n      onClick={() => setShowExportDropdown(!showExportDropdown)}\r\n      className=\"flex items-center px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\r\n    >\r\n      <FaBars className=\"mr-2\" />\r\n      Export\r\n      <span className=\"ml-2 text-sm\">▼</span>\r\n    </button>\r\n    \r\n    {/* Dropdown menu - now controlled by state */}\r\n    {showExportDropdown && (\r\n      <div \r\n        className=\"absolute right-0 z-10 w-40 mt-2 bg-white rounded-md shadow-lg\"\r\n        onMouseLeave={() => setShowExportDropdown(false)}\r\n      >\r\n        <div className=\"py-1\">\r\n          <button \r\n            onClick={() => {\r\n              exportToExcel();\r\n              setShowExportDropdown(false);\r\n            }}\r\n            className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            Excel\r\n          </button>\r\n          <button \r\n            onClick={() => {\r\n              exportToPDF();\r\n              setShowExportDropdown(false);\r\n            }}\r\n            className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n            </svg>\r\n            PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n</div>\r\n{/* second row */}\r\n              <div className='flex w-full px-2 py-2'>\r\n                <div className='w-full overflow-x-auto'>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500 \">#</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Item Code</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Brand</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Category</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">MRP</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Seller Points</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Barcode</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Unit Price</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Tax</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Purchase Cost</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Sales Price</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Current Stock</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Stock Value <br /> (By Sale Price)</th>\r\n                        <th className=\"px-2 text-sm text-white bg-blue-500\">Stock Value <br /> (By Purchase Price)</th>\r\n                       \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                      {\r\n                        filteredTransfers.length>0 && filteredTransfers.map((item,index)=>(\r\n                          <tr key={index} className='bg-gray-100 border-2 border-black'>\r\n                            <td className=\"px-2\">{index+1}</td>\r\n                            <td className=\"px-2\">{item.itemCode}</td>\r\n                            <td className=\"px-2\">{item.itemName}</td>\r\n                            <td className=\"px-2 \">{item.brand?.brandName}</td>\r\n                            <td className=\"px-2\">{item.category?.name}</td>\r\n                            <td className=\"px-2 \">{item.mrp}</td>\r\n                            <td className=\"px-2\">{item.sellerPoints}</td>\r\n                            <td className=\"px-2 \">{item.barcode}</td>\r\n                            <td className=\"px-2\">{item.priceWithoutTax}</td>\r\n                            <td className=\"px-2\">{item.tax?.taxName}</td>\r\n                            <td className=\"px-2\">{item.purchasePrice}</td>\r\n                            <td className=\"px-2\">{item.salesPrice}</td>\r\n                            <td className=\"px-2\">{item.openingStock}</td>\r\n                            <td className=\"px-2\">{item.openingStock * item.salesPrice}</td>\r\n                            <td className=\"px-2\">{item.openingStock * item.purchasePrice}</td>\r\n                           \r\n                          </tr>\r\n                        ))\r\n                      }\r\n                      {\r\n                        filteredTransfers.length===0 && (\r\n                          <tr className='bg-gray-100 border-2 border-black' >\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='15'><h5>No Data Found</h5></td>\r\n                        </tr>\r\n                        )\r\n                      }\r\n\r\n                      \r\n                      {/* Repeat for more rows */}\r\n                    </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              \r\n              \r\n            </div>\r\n            \r\n    \r\n        \r\n           \r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n"],"names":["StockReport","showExportDropdown","setShowExportDropdown","useState","isSidebarOpen","setSidebarOpen","loading","setLoading","options","setOptions","warehouses","categories","brands","useEffect","window","innerWidth","SelectedWarehouse","setSelectedWarehouse","selectedCategory","setSelectedCategory","selectedBrand","setSelectedBrand","sale","setSales","total","setTotal","allItems","setAllItems","async","axios","get","headers","Authorization","localStorage","getItem","data","map","warehouse","label","warehouseName","value","_id","prev","err","console","log","message","fetchWarehouses","category","name","fetchCategories","response","fetchItems","brand","brandName","fetchBrands","filteredTransfers","filter","transfer","warehouseMatch","categoryMatch","brandMatch","_jsxs","className","children","_jsx","Navbar","Sidebar","NavLink","to","FaTachometerAlt","htmlFor","Select","onChange","option","find","onClick","FaBars","onMouseLeave","exportToExcel","excelData","item","index","_item$brand","_item$category","_item$tax","itemCode","itemName","mrp","sellerPoints","barcode","priceWithoutTax","tax","taxName","purchasePrice","salesPrice","openingStock","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","exportToPDF","doc","jsPDF","orientation","text","pdfData","_item$brand2","_item$category2","_item$mrp","_item$priceWithoutTax","_item$tax2","_item$purchasePrice","_item$salesPrice","toFixed","autoTable","head","body","startY","styles","fontSize","cellPadding","overflow","headStyles","fillColor","textColor","columnStyles","cellWidth","save","length","_item$brand3","_item$category3","_item$tax3","colSpan"],"sourceRoot":""}