{"version":3,"file":"static/js/3550.eca8253b.chunk.js","mappings":"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","sources":["Loading.jsx","components/Banners/ProductListItem.jsx","components/Banners/ProductListView.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect } from 'react';\r\n\r\nconst ImagePreview = ({ setView, previewUrls }) => {\r\n\r\n \r\n\r\n\r\n\r\n\r\n  useEffect(()=>console.log(previewUrls),[previewUrls])\r\n  // Function to handle removing a video\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: '#fff',\r\n          padding: '30px',\r\n          borderRadius: '12px',\r\n          maxHeight: '80%',\r\n          width: '80%',\r\n          overflowY: 'auto',\r\n          boxShadow: '0 4px 20px rgba(0,0,0,0.3)',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={() => setView(false)}  // Close the preview gallery\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '26px',\r\n            fontWeight: 'bold',\r\n            color: '#444',\r\n            cursor: 'pointer',\r\n          }}\r\n          title=\"Close\"\r\n        >\r\n          ✖\r\n        </button>\r\n\r\n\r\n        {previewUrls.length > 0 ? (\r\n          <div\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\r\n              gap: '15px',\r\n            }}\r\n          >\r\n            {previewUrls.map((file, mediaIndex) => (\r\n              <div\r\n                key={mediaIndex}\r\n                style={{\r\n                  position: 'relative',\r\n                  borderRadius: '10px',\r\n                  overflow: 'hidden',\r\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\r\n                }}\r\n              >\r\n                {/* Check if the file is a video or an image based on its path */}\r\n                {file.match(/\\.(mp4|webm|ogg|mov|avi)$/i) ? (\r\n                  <video\r\n                    controls\r\n                     controlsList=\"nodownload\"\r\n                    src={`uploads/${file}`}  // Use the video path\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '150px',\r\n                      // objectFit: 'cover',\r\n                      // display: 'block',\r\n                    }}\r\n                    \r\n                  />\r\n                ) : file.match(/\\.(jpg|jpeg|png|gif|bmp|svg)$/i) ? (\r\n                  <img\r\n                    src={`uploads/${file}`}  // Use the image path\r\n                    alt={`Image Preview ${mediaIndex + 1}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '150px',\r\n                      objectFit: 'cover',\r\n                      display: 'block',\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <p style={{ color: '#666' }}>Unsupported media type</p>\r\n                )}\r\n\r\n               \r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p style={{ textAlign: 'center', color: '#666' }}>\r\n            No media selected\r\n          </p>\r\n        )}\r\n     \r\n         \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePreview;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaTachometerAlt ,FaEye} from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport Select from 'react-select'\r\nimport ImagePreview from './ProductListItem.jsx';\r\nconst ProductListView = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const[view,setView]=useState(false)\r\n  const[data,setData]=useState([])\r\n  const[Type,setType]=useState(\"\")\r\n  const[currentProduct,setCurrentProduct]=useState([])\r\n \r\n    \r\n  const [dropdownIndex, setDropdownIndex] = useState(null);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[window.innerWidth])\r\n\r\n  \r\n  const toggleDropdown = (id) => {\r\n    setDropdownIndex(dropdownIndex === id ? null : id);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('api/product/all', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n     console.log(response.data)\r\n    setData(response.data)\r\n    } catch (err) {\r\n      console.error(\"Error fetching advance payments:\", err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n \r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Do you want to delete this ?\")) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`api/product/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      alert(\"Deleted Successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting advance payment:\", error.message);\r\n    } finally {\r\n      fetchData();\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(10 / entriesPerPage);\r\n  const currentUsers = data?.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages)\r\n      setCurrentPage(newPage);\r\n  };\r\n\r\n  const handleEntriesChange = (e) => {\r\n    setEntriesPerPage(Number(e.target.value));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Export functions (Copy, Excel, PDF, Print, CSV) remain unchanged...\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"box-border flex\">\r\n        <div className=\"w-auto\">\r\n          \r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n          <header className=\"flex flex-col items-start justify-between p-0 mb-6 md:flex-row md:items-center\">\r\n            <h2 className=\"text-lg font-bold md:text-xl\">Product List</h2>\r\n            <nav className=\"flex flex-wrap gap-2 mt-2 text-sm text-gray-600 md:mt-0\">\r\n             <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                            <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                          </NavLink>     \r\n                          <NavLink to=\"/product/add\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Product List\r\n                          </NavLink>    \r\n            </nav>\r\n          </header>\r\n          {view && <ImagePreview setView={setView} previewUrls={currentProduct} />}\r\n          {/* Filters Section */}\r\n          <div className=\"p-4 mb-4 bg-white border-t-4 rounded shadow border-cyan-500\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold\">Marketing Item List</h3>\r\n              <button className=\"px-4 py-1 mt-2 text-white rounded bg-cyan-400 hover:bg-cyan-600 md:mt-0\" onClick={() => navigate('/product/add')}>\r\n                + Create Product \r\n              </button>\r\n            </div>\r\n\r\n            \r\n            <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 md:flex-row md:space-y-0 md:items-center\">\r\n               \r\n\r\n                <div className='flex flex-col items-baseline gap-2 md:flex-row'>\r\n                <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col gap-2 md:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2'>\r\n                <button \r\n                // onClick={handleCopy}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button \r\n                // onClick={handleExcelDownload}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button\r\n                //  onClick={handlePdfDownload}\r\n                  className=\"px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button \r\n                // onClick={handlePrint}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button \r\n                // onClick={handleCsvDownload}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 \" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n                </div>\r\n             \r\n\r\n              \r\n            </div>\r\n            \r\n\r\n            {/* Advance Payments Table */}\r\n            <div className=\"w-full overflow-x-auto\">\r\n              <table className=\"w-full bg-white border-collapse rounded-md shadow-lg\">\r\n                <thead className=\"text-sm bg-gray-100\">\r\n                  <tr>\r\n                    <th className=\"px-4 py-2 border\">ID</th>\r\n                    <th className=\"px-4 py-2 border\">Product Id</th>\r\n                    <th className=\"px-4 py-2 border\">Date</th>\r\n                    <th className=\"px-4 py-2 border\">Image</th>\r\n                    <th className=\"px-4 py-2 border\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentUsers.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"py-4 text-sm text-center text-gray-500\">No data available in table</td>\r\n                    </tr>\r\n                  ) : (\r\n                    currentUsers.map((transfer) => (\r\n                      <tr key={transfer._id} className=\"border-t\">\r\n                        <td className=\"px-4 py-2 border\">{transfer._id}</td>\r\n                        <td className=\"px-4 py-2 border\">{transfer.productId}</td>\r\n                        <td className=\"px-4 py-2 border\">{new Date(transfer.createdAt).toDateString()}</td>\r\n                        <td className=\"px-4 py-2 border\">\r\n                        <div className='flex-col w-full mt-4'>\r\n              <button\r\n                onClick={() => {setView(true);setCurrentProduct(transfer.media)}}\r\n                className=\"z-50 px-3 py-1 mt-2 ml-2 text-white transition bg-blue-500 rounded-md hover:bg-blue-600\"\r\n              >\r\n            View \r\n              </button>\r\n            </div>\r\n                        </td>\r\n                      \r\n                        \r\n                       \r\n                      <td className=\"relative px-4 py-2 border\">\r\n  <button\r\n    className=\"flex items-center gap-1 px-4 py-1.5 text-sm font-medium text-white bg-cyan-600 rounded hover:bg-cyan-700 transition-colors\"\r\n    onClick={() => toggleDropdown(transfer._id)}\r\n  >\r\n    Action <span className=\"text-xs\">▼</span>\r\n  </button>\r\n\r\n  {dropdownIndex === transfer._id && (\r\n    <div className=\"absolute right-0 z-20 mt-2 bg-white border border-gray-200 shadow-lg w-44 rounded-xl animate-fadeIn\">\r\n      \r\n     \r\n      <button\r\n        className=\"flex items-center w-full gap-2 px-4 py-2 text-sm text-blue-600 transition-colors rounded-t-xl hover:bg-blue-50\"\r\n        onClick={() => {\r\n          navigate(`/marketingitem/add?id=${transfer._id}`)\r\n        }}\r\n      >\r\n        <FaEye />\r\n        Edit\r\n      </button>\r\n\r\n      <button\r\n        className=\"flex items-center w-full gap-2 px-4 py-2 text-sm text-red-600 transition-colors rounded-b-xl hover:bg-red-50\"\r\n        onClick={() => handleDelete(transfer._id)}\r\n      >\r\n        <FaTrash />\r\n        Delete\r\n      </button>\r\n    </div>\r\n  )}\r\n</td>\r\n\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, data.length)} of {data.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === totalPages \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ProductListView;"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","_ref","setView","previewUrls","useEffect","console","log","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","padding","borderRadius","maxHeight","overflowY","boxShadow","onClick","right","background","border","fontSize","fontWeight","color","cursor","title","length","gridTemplateColumns","gap","map","file","mediaIndex","overflow","match","controls","controlsList","src","alt","objectFit","textAlign","ProductListView","searchTerm","setSearchTerm","entriesPerPage","setEntriesPerPage","currentPage","setCurrentPage","loading","setLoading","navigate","useNavigate","view","data","setData","Type","setType","currentProduct","setCurrentProduct","dropdownIndex","setDropdownIndex","window","innerWidth","fetchData","async","response","axios","get","headers","Authorization","localStorage","getItem","err","error","message","indexOfLastItem","indexOfFirstItem","totalPages","Math","ceil","currentUsers","slice","handlePageChange","newPage","NavLink","to","FaTachometerAlt","ImagePreview","value","onChange","e","Number","target","type","placeholder","colSpan","transfer","_id","productId","Date","createdAt","toDateString","media","toggleDropdown","id","FaEye","confirm","delete","alert","handleDelete","FaTrash","min","disabled","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}