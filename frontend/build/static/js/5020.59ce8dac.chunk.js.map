{"version":3,"file":"static/js/5020.59ce8dac.chunk.js","mappings":"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","sources":["Loading.jsx","components/Terminal/TerminalList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport axios from \"axios\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\nconst TerminalList = () => {\r\n  const navigate = useNavigate();\r\n  const [terminals, setTerminals] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [actionMenu, setActionMenu] = useState(null);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // fetch terminal list\r\n  const fetchTerminals = async () => {\r\n    setLoading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      const res = await axios.get(\"api/terminals\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setTerminals(res.data.data || []);\r\n    } catch (err) {\r\n      console.error(\"Error fetching terminals:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTerminals();\r\n  }, []);\r\n\r\n  // delete\r\n  const deleteTerminal = async (id) => {\r\n    if (!window.confirm(\"Delete this terminal?\")) return;\r\n    setLoading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      await axios.delete(`api/terminals/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      fetchTerminals();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Delete failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // filter by tid or warehouse name\r\n  const filtered = terminals.filter((t) =>\r\n    t.tid.toLowerCase().includes(searchTerm.toLowerCase())\r\n    || (t.warehouseName || \"\").toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <main className=\"flex-grow p-4 overflow-auto bg-gray-100\">\r\n          {/* Header */}\r\n          <header className=\"flex justify-between items-center mb-4\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold\">Terminal List</h1>\r\n              <p className=\"text-gray-600 text-sm\">View/Edit terminals</p>\r\n            </div>\r\n            <nav className=\"flex items-center text-gray-500 text-sm\">\r\n              <Link to=\"/dashboard\" className=\"flex items-center\">\r\n                <FaTachometerAlt className=\"mr-1\" /> Home\r\n              </Link>\r\n              <BiChevronRight className=\"mx-2\" />\r\n              <span>Terminals</span>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Top Bar */}\r\n          <div className=\"flex justify-between mb-4\">\r\n            <button\r\n              onClick={() => navigate(\"/create-terminal\")}\r\n              className=\"px-4 py-2 bg-cyan-500 text-white rounded\"\r\n            >\r\n              + New Terminal\r\n            </button>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by TID or warehouse…\"\r\n              className=\"w-1/3 p-2 border rounded\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {/* Table */}\r\n          <div className=\"overflow-x-auto bg-white border rounded\">\r\n            <table className=\"w-full border-collapse\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"p-2 border\">#</th>\r\n                  <th className=\"p-2 border\">TID</th>\r\n                  <th className=\"p-2 border\">Warehouse</th>\r\n                  <th className=\"p-2 border\">QR Code</th>\r\n                  <th className=\"p-2 border\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filtered.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan=\"5\" className=\"p-4 text-center\">\r\n                      No terminals found\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  filtered.map((t, i) => (\r\n                    <tr key={t._id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"p-2 border\">{i + 1}</td>\r\n                      <td className=\"p-2 border\">{t.tid}</td>\r\n                      <td className=\"p-2 border\">\r\n                        {t.warehouse ? t.warehouseName : \"—unassigned—\"}\r\n                      </td>\r\n                      <td className=\"p-2 border\">\r\n                        {t.qrCodePath ? (\r\n                          <img\r\n                            src={t.qrCodePath}\r\n                            alt=\"QR\"\r\n                            className=\"h-8 w-8 object-contain\"\r\n                          />\r\n                        ) : (\r\n                          \"—\"\r\n                        )}\r\n                      </td>\r\n                      <td className=\"p-2 border relative\">\r\n                        <button\r\n                          className=\"px-2 py-1 text-white bg-cyan-600 rounded\"\r\n                          onClick={() =>\r\n                            setActionMenu((prev) =>\r\n                              prev === t._id ? null : t._id\r\n                            )\r\n                          }\r\n                        >\r\n                          Action\r\n                        </button>\r\n                        {actionMenu === t._id && (\r\n                          <div className=\"absolute right-0 mt-1 w-32 bg-white border rounded shadow z-10\">\r\n                            <button\r\n                              className=\"block w-full p-2 text-left hover:bg-gray-100\"\r\n                              onClick={() =>\r\n                                navigate(\r\n                                  `/create-terminal?id=${t._id}`\r\n                                )\r\n                              }\r\n                            >\r\n                              ✏️ Edit\r\n                            </button>\r\n                            <button\r\n                              className=\"block w-full p-2 text-left text-red-600 hover:bg-gray-100\"\r\n                              onClick={() => deleteTerminal(t._id)}\r\n                            >\r\n                              🗑️ Delete\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalList;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","TerminalList","navigate","useNavigate","terminals","setTerminals","loading","setLoading","searchTerm","setSearchTerm","actionMenu","setActionMenu","useEffect","window","innerWidth","fetchTerminals","async","token","localStorage","getItem","res","axios","get","headers","Authorization","data","err","console","error","filtered","filter","t","tid","toLowerCase","includes","warehouseName","Link","to","FaTachometerAlt","BiChevronRight","onClick","type","placeholder","value","onChange","e","target","length","colSpan","map","i","warehouse","qrCodePath","src","alt","prev","_id","confirm","delete","id","alert","deleteTerminal"],"sourceRoot":""}