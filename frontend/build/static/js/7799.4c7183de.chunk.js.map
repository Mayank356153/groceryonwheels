{"version":3,"file":"static/js/7799.4c7183de.chunk.js","mappings":"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","sources":["Loading.jsx","components/Stock/TransferList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { BiChevronRight } from 'react-icons/bi';\r\nimport { FaTachometerAlt, FaEdit, FaTrash, FaEye } from 'react-icons/fa';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst StockTransferList = () => {\r\n  const Navigate = useNavigate();\r\n  const [entries, setEntries] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [transfers, setTransfer] = useState([]);\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [dropdownIndex, setDropdownIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) {\r\n      setSidebarOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchExpenses = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(`api/stock-transfers`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      setTransfer(response.data.data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Sort and filter data\r\n  const filteredData = transfers\r\n    .filter(item => item._id.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // Sort by createdAt descending (latest first)\r\n\r\n  const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentUsers = filteredData.slice((currentPage - 1) * entriesPerPage, currentPage * entriesPerPage);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  const handleEntriesChange = (e) => {\r\n    setEntriesPerPage(Number(e.target.value));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const data = currentUsers.map(transfer => `${new Date(transfer.createdAt).toDateString()},${transfer.fromWarehouse.warehouseName},${transfer.toWarehouse.warehouseName},${transfer.details},${transfer.note},${transfer.createdBy}`).join('\\n');\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"Data copied to clipboard!\");\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filteredData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Transfer list\");\r\n    XLSX.writeFile(wb, \"TransferList.xlsx\");\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent = \"data:text/csv;charset=utf-8,\" + filteredData.map(user => Object.values(user).join(\",\")).join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"stockTransferlist.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Stock_Transfer List\", 20, 20);\r\n    const tableData = filteredData.map(transfer => [\r\n      new Date(transfer.createdAt).toDateString(),\r\n      transfer.fromWarehouse.warehouseName,\r\n      transfer.toWarehouse.warehouseName,\r\n      transfer.details,\r\n      transfer.note,\r\n      transfer.createdBy\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      head: [['Transfer Date', 'From Warehouse', 'To Warehouse', 'Details', 'Note', 'Created By']],\r\n      body: tableData,\r\n    });\r\n\r\n    doc.save(\"advance_list.pdf\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchExpenses();\r\n  }, []);\r\n\r\n  const handledelete = async (e, id) => {\r\n    e.preventDefault();\r\n    const conf = window.confirm(\"Do you want to delete this Expense?\");\r\n    if (!conf) return;\r\n\r\n    try {\r\n      const response = await fetch(`api/stock-transfers/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete supplier\");\r\n      }\r\n\r\n      console.log(\"Purchase deleted successfully!\");\r\n      fetchExpenses();\r\n    } catch (error) {\r\n      console.error(\"Error deleting purchase:\", error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-grow\">\r\n        {/* Sidebar */}\r\n        <div className=\"w-auto\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        {/* Content */}\r\n        <div className={`overflow-x-auto flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n          <header className=\"flex items-center justify-between p-4 mb-2 bg-gray-100 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex flex-col items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Stock Transfer List</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Sold Items</span>\r\n            </div>\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n              <a href=\"#\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"><FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home</a>\r\n              <BiChevronRight className=\"hidden mx-1 sm:mx-2 sm:inline\" />\r\n              <a href=\"#\" className=\"text-gray-700 no-underline hover:text-cyan-600\">Stock Transfer List</a>\r\n            </nav>\r\n          </header>\r\n          <div className=\"p-4 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n            <header className=\"flex items-center justify-between mb-4\">\r\n              <h1 className=\"text-lg font-semibold\">Stock Transfer List</h1>\r\n              <button className=\"px-4 py-2 text-white rounded bg-cyan-500\" onClick={() => Navigate('/stock-transfer')}><span className='font-bold'>+</span> New Transfer</button>\r\n            </header>\r\n\r\n            <div className=\"flex flex-col justify-between w-full mt-4 mb-4 space-y-2 lg:flex-row lg:space-y-0 lg:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entries} onChange={(e) => {\r\n                  setEntries(Number(e.target.value));\r\n                  setCurrentPage(1);\r\n                }}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col justify-around w-full gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-around flex-1 w-full gap-1 px-2'>\r\n                  <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                  <button onClick={handleExcelDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                  <button onClick={handlePdfDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                  <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                  <button onClick={handleCsvDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm md:w-auto\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white border border-gray-300\">\r\n                <thead className=\"bg-gray-200\">\r\n                  <tr>\r\n                    <th className=\"px-3 py-2 text-left border\">Transfer Date</th>\r\n                    <th className=\"px-3 py-2 text-left border\">From Warehouse</th>\r\n                    <th className=\"px-3 py-2 text-left border\">To Warehouse</th>\r\n                    <th className=\"px-3 py-2 text-left border\">Details</th>\r\n                    <th className=\"px-3 py-2 text-left border\">Note</th>\r\n                    <th className=\"px-3 py-2 text-left border\">Created by</th>\r\n                    <th className=\"px-3 py-2 text-left border\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentUsers.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"py-4 text-center\">No data available in table</td>\r\n                    </tr>\r\n                  ) : (\r\n                    currentUsers.map((transfer, index) => (\r\n                      <tr key={transfer._id} className=\"hover:bg-gray-100\">\r\n                        <td className=\"px-3 py-2 border\">{new Date(transfer.createdAt).toDateString()}</td>\r\n                        <td className=\"px-3 py-2 border\">{transfer.fromWarehouse?.warehouseName || \"NA\"}</td>\r\n                        <td className=\"px-3 py-2 border\">{transfer.toWarehouse?.warehouseName || \"NA\"}</td>\r\n                        <td className=\"px-3 py-2 border\">{transfer.details}</td>\r\n                        <td className=\"px-3 py-2 border\">{transfer.note}</td>\r\n                        <td className=\"px-3 py-2 border\">{transfer.createdBy}</td>\r\n                        <td className=\"relative px-3 py-2 border\">\r\n                          <button\r\n                            onClick={() => {\r\n                              setDropdownIndex(dropdownIndex === transfer._id ? null : transfer._id);\r\n                            }}\r\n                            className=\"px-3 py-1 text-white transition rounded bg-cyan-600 hover:bg-cyan-700\"\r\n                          >\r\n                            Action ▼\r\n                          </button>\r\n                          {dropdownIndex === transfer._id && (\r\n                            <div\r\n                              className=\"absolute right-0 z-50 mt-2 bg-white border border-gray-200 rounded-md shadow-lg w-36 animate-fade-in\"\r\n                            >\r\n                              <button\r\n                                className=\"flex items-center w-full px-3 py-2 text-gray-700 hover:bg-gray-100\"\r\n                                onClick={() => Navigate(`/stock-transfer?id=${transfer._id}`)}\r\n                              >\r\n                                <FaEdit className=\"mr-2\" /> Edit\r\n                              </button>\r\n                              <button\r\n                                className=\"flex items-center w-full px-3 py-2 text-red-600 hover:bg-gray-100\"\r\n                                onClick={(e) => handledelete(e, transfer._id)}\r\n                              >\r\n                                <FaTrash className=\"mr-2\" /> Delete\r\n                              </button>\r\n                              <button\r\n                                className=\"flex items-center w-full px-3 py-2 text-gray-700 hover:bg-gray-100\"\r\n                                onClick={() => Navigate(`/transfer-details/${transfer._id}`)}\r\n                              >\r\n                                <FaEye className=\"mr-2\" /> View\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col items-center justify-between mt-4 md:flex-row\">\r\n              <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, transfers.length)} of {transfers.length} entries</span>\r\n              <div>\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  className=\"px-4 py-2 mr-2 text-gray-600 bg-gray-300 disabled:opacity-50\"\r\n                  disabled={currentPage === 1}\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  className=\"px-4 py-2 text-gray-600 bg-gray-300 disabled:opacity-50\"\r\n                  disabled={currentPage === totalPages}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockTransferList;"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","StockTransferList","Navigate","useNavigate","entries","setEntries","currentPage","setCurrentPage","transfers","setTransfer","entriesPerPage","setEntriesPerPage","searchTerm","setSearchTerm","loading","setLoading","dropdownIndex","setDropdownIndex","useEffect","window","innerWidth","fetchExpenses","async","token","localStorage","getItem","response","axios","get","headers","Authorization","console","log","data","err","message","filteredData","filter","item","_id","toLowerCase","includes","sort","a","b","Date","createdAt","totalPages","Math","ceil","length","currentUsers","slice","handlePageChange","newPage","href","FaTachometerAlt","BiChevronRight","onClick","value","onChange","e","Number","target","handleCopy","map","transfer","toDateString","fromWarehouse","warehouseName","toWarehouse","details","note","createdBy","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","user","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","type","placeholder","colSpan","index","_transfer$fromWarehou","_transfer$toWarehouse","FaEdit","id","preventDefault","confirm","fetch","method","ok","Error","error","handledelete","FaTrash","FaEye","min","disabled"],"sourceRoot":""}