{"version":3,"file":"static/js/7388.0fe22cdb.chunk.js","mappings":"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","sources":["Loading.jsx","components/contact/Input.jsx","components/contact/Supplierlist.jsx","components/contact/Button.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Button from './Button'\r\nimport Input from './Input'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Navbar from '../Navbar'\r\nimport Sidebar from '../Sidebar'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {FaTachometerAlt} from \"react-icons/fa\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport LoadingScreen from '../../Loading'\r\nexport default function Supplierlist() {\r\n    // Configuration options for table display\r\n    const entries_options = [10, 20, 30, 40, 50] // Entries per page options\r\n    \r\n    // State management for UI components\r\n    const [Users, setUsers] = useState([]);\r\n      const [loading, setLoading] = useState(true); // Loading state\r\n      const [error, setError] = useState(null);\r\n    const[isSidebarOpen,setSidebarOpen]=useState(true) // Sidebar visibility state\r\n    const[check,setCheckbox]=useState(false) // Checkbox state for bulk actions\r\n    const[previousBalance,setPreviousBalance]=useState(0)\r\n    const[purchaseDue,setpurchaseDue]=useState(0)\r\n    const[previousReturnDue,setPreviousReturnDue]=useState(0)\r\n    const[status,setStatus]=useState([])\r\n    const[singleCheck,setSingleCheck]=useState([])\r\n    // Table control buttons\r\n    const button = [\"Copy\", \"Excel\", \"PDF\", \"Print\", \"CSV\", \"Columns\"] // Export/action buttons\r\n    const Navigate=useNavigate(); // Navigation hook\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n   \r\n    const fetchData = async () => {\r\n        try {\r\n          const response = await  axios.get('api/suppliers', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Get token from localStorage\r\n            }\r\n          }) // Replace with actual API URL\r\n          \r\n          setUsers(response.data.data); // Assuming API returns an array of customers\r\n          console.log(response.data)\r\n         \r\n  \r\n  \r\n  \r\n          \r\n        } catch (err) {\r\n          setError(err.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n\r\n    \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n  \r\n\r\n    // Pagination and filtering states\r\n    const[currentPage,setCurrentPage]=useState(1) // Current page number\r\n    const[entriesPerPage,setEntriesPerPage]=useState(10) // Items per page\r\n    const[search,setSearch]=useState('') // Search filter input\r\n\r\n    // Filter data based on search query\r\n    const filteredData = Users.filter(item => \r\n        item.supplierName?.toLowerCase().includes(search.toLowerCase()) || \r\n        item._id.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n   \r\n    // Pagination control handler\r\n    const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentUsers = filteredData.slice((currentPage-1)*entriesPerPage, currentPage* entriesPerPage);\r\n  const calculate =()=>{\r\n    const totals = currentUsers.reduce((acc, item) => {\r\n        acc.previousBalance += item.previousBalance || 0;\r\n        acc.purchaseDue += item.purchaseDue || 0;\r\n        acc.previousReturnDue += item.purchaseReturnDue || 0;\r\n        return acc;\r\n    }, { previousBalance: 0, purchaseDue: 0, previousReturnDue: 0 });\r\n\r\n    setPreviousBalance(totals.previousBalance);\r\n    setpurchaseDue(totals.purchaseDue);\r\n    setPreviousReturnDue(totals.previousReturnDue);\r\n}\r\nuseEffect(()=>{calculate()},[filteredData])\r\n  const handlePageChange = (newPage) =>  {\r\n    if(newPage >=1 && newPage <=totalPages )\r\n    setCurrentPage(newPage);\r\n  }\r\n  const handleEntriesChange=(e)=>{\r\n    setEntriesPerPage(Number(e.target.value))\r\n    setCurrentPage(1)\r\n  }\r\n const handleCopy = () => {\r\n    const data = filteredData.map(item => `${item._id}, ${item.supplierName}, ${item.mobile},${item.email},${item.previousBalance},${item.purchaseDue},${item.purchaseReturnDue},${item.previousBalance+item.purchaseDue+item.purchaseReturnDue},${status.includes(item._id)? 'InActive' : 'Active'}}`).join('\\n');\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"Data copied to clipboard!\");\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filteredData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"supplier\");\r\n    XLSX.writeFile(wb, \"supplier.xlsx\");\r\n  };\r\n\r\n const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Customer List\", 20, 20);\r\n    const tableData = filteredData.map(item => [\r\n      item._id,\r\n      item.supplierName,\r\n      item.mobile,\r\n      item.email,\r\n      item.previousBalance,\r\n      item.purchaseDue,\r\n      item.previousReturnDue,\r\n      item.previousBalance+item.purchaseDue+item.purchaseReturnDue,\r\n      status.includes(item._id)? 'InActive' : 'Active'\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      head: [['Supplier Id', 'Supplier Name', 'Mobile', 'Email', 'Previous Balance', 'Purchase Due', 'Previous Return Due','Total','Advance','Status']],\r\n      body: tableData,\r\n    });\r\n\r\n    doc.save(\"supplier_list.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent = \"data:text/csv;charset=utf-8,\" + filteredData.map(user => Object.values(user).join(\",\")).join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"supplier.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  \r\n \r\n  const handleDelete = async (id) => {\r\n    const conf= window.confirm(\"Do u want to delete supplier\")\r\n    if(!conf){\r\n      return ;\r\n    }\r\n    setLoading(true)\r\n    \r\n    try {\r\n      const response = await axios.delete(`api/suppliers/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n    \r\n     alert(\"Deleted Successfully\")\r\n    \r\n    } catch (error) {\r\n      console.error( error.message);\r\n    }\r\n    finally{\r\n      fetchData()\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n\r\n  const handleAction=(e,id)=>{\r\n    const value=e.target.value\r\n    if(value===\"edit\") Navigate(`/supplier/add?id=${id}`)\r\n    if(value===\"delete\") handleDelete(id)\r\n     if(value===\"discount\") Navigate(`/create?id=${id}`) \r\n  }\r\n  const single=(id)=>{\r\n    setSingleCheck((prev)=>(prev.includes(id)?prev.filter((item) => item!=id):[...prev,id]))\r\n   }\r\n    if(loading) return <LoadingScreen />\r\n    if(error) return <h1>Something Went Wrong...</h1>\r\n\r\n    return (    \r\n<div className=\"flex flex-col overflow-x-hidden\">\r\n{/* Navbar */}\r\n<Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n{/* Main Content */}\r\n<div className=\"flex w-screen \">\r\n  {/* Sidebar */}\r\n  <div>\r\n    \r\n  <Sidebar isSidebarOpen={isSidebarOpen} />\r\n  </div>\r\n  \r\n\r\n  {/* Content */}\r\n  <div className='flex flex-col flex-grow w-full min-h-screen p-2 overflow-x-hidden transition-all duration-300 bg-gray-200'>\r\n                    {/* Page header and breadcrumbs */}\r\n                    <div className='flex flex-col items-end justify-between md:flex-row'>\r\n                        <div className='flex items-end w-full gap-2 pl-2 md:w-1/2'> \r\n                            <span className='text-3xl '>Supplier List</span>\r\n                            <span className='text-sm text-gray-700'>View /Search Suppliers</span>               \r\n                        </div>  \r\n                        <div className='flex w-full gap-2 pl-2 pr-2 mb-2 text-sm font-semibold text-black bg-gray-500 bg-opacity-50 rounded-md md:text-gray-500 md:justify-end md:w-1/2 md:bg-transparent'>\r\n                            <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\"><FaTachometerAlt />Home </NavLink>\r\n                            <span>&gt;</span>\r\n                            <NavLink to=\"/supplier/import\" className=\"text-gray-700 no-underline\">Import Suppliers</NavLink>\r\n                            <span>&gt;</span>\r\n                            <NavLink to=\"/supplier/view\" className=\"text-gray-700 no-underline \">Suppliers</NavLink>                   \r\n                        </div>\r\n                    </div>  \r\n\r\n                    {/* Main table container */}\r\n                    <div className='bg-white border-t-4 max-autorounded-lg border-t-blue-600 border-opacity-55'>\r\n                        {/* Table header with controls */}\r\n                        <div className='flex flex-col items-center justify-start w-full px-3 py-2 sm:justify-between sm:flex-row'>    \r\n                            {/* Bulk action controls */}\r\n                            <div className='flex items-center'>  \r\n                                <Input type=\"checkbox\" />\r\n                                View Account Payable Suppliers\r\n                            </div>\r\n\r\n                            {/* Create new supplier button */}\r\n                            <div>\r\n                                <Button \r\n                                    text=\"+Create Supplier\" \r\n                                    className='flex-shrink-0 px-4 py-2 font-bold text-center text-white bg-blue-600 rounded cursor-pointer hover:bg-blue-700 '  \r\n                                    onClick={()=> Navigate(\"/supplier/add\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Table controls section */}\r\n                        <div className='px-3 border-gray-100 border-t-1 border-1 min-h-50'>  \r\n                        <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 md:flex-row md:space-y-0 md:items-center\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2 md:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2'>\r\n                <button onClick={handleCopy} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 md:w-auto\" onChange={(e) => setSearch(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n                            {/* Main table content */}\r\n                            <div className='overflow-x-auto'>\r\n                                <table className='w-full border-separate'>\r\n                                    {/* Table column headers */}\r\n                                    <thead className='text-sm'>\r\n                                        <tr className=\"bg-gray-200\">\r\n                                            <th className=\"px-4 py-2 text-left\">\r\n                                                <Input type=\"checkbox\" id=\"table_head\" onChange={()=>setCheckbox(!check)} />\r\n                                            </th>\r\n                                            <th className=\"px-4 py-2 text-left\">Supplier ID</th>\r\n                                            <th className=\"px-4 py-2 text-left\">Supplier Name</th>\r\n                                            <th className=\"px-4 py-2\">Mobile</th>\r\n                                            <th className=\"px-4 py-2 text-left\">Email</th>\r\n                                            {/* Responsive hidden columns */}\r\n                                            <th className=\"px-4 py-2 text-left \">Previous Balance</th>\r\n                                            <th className=\"px-4 py-2 text-left\">Purchase Due</th>\r\n                                            <th className=\"px-4 py-2 text-left \">Purchase Return Due</th>\r\n                                            <th className=\"px-4 py-2 text-left \">Total(+)</th>\r\n                                            <th className=\"px-4 py-2 text-left \">Status</th>\r\n                                            <th className=\"px-4 py-2 text-left \">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    {/* Table body with supplier data */}\r\n                                    <tbody className='border-gray-100 border-1'>\r\n                                        {currentUsers.length<=0 && (\r\n                                            <tr>\r\n                                                  <td className='py-2 text-center border-gray-100 border-1' colSpan='11'>No Data Available</td>\r\n\r\n                                            </tr>\r\n                                        )}\r\n                                        {Array.isArray(currentUsers)&& currentUsers.map((item, index) => (\r\n                                            <tr key={index} id={item._id}>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>\r\n                                                    <Input type=\"checkbox\"  id=\"table_body\" checked={check || singleCheck.includes(item._id)} onChange={()=>single(item._id)}/>\r\n                                                </td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>{item._id}</td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>{item.supplierName}</td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>{item.mobile}</td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>{item.email}</td>\r\n                                                {/* Financial data columns */}\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>{item.previousBalance}</td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1 '>{item.purchaseDue}</td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>{item.purchaseReturnDue}</td>\r\n                                                <td className='px-4 py-2 border-gray-100 border-1 '>{item.previousBalance+item.purchaseDue+item.purchaseReturnDue}</td>\r\n                                                {/* Status indicator */}\r\n                                                <td className='px-4 py-2 border-gray-100 border-1' onClick={() =>\r\n                                                     setStatus((prev) =>\r\n                                                    prev.includes(item._id)\r\n                                                    ? prev.filter((id) => id !== item._id) // Remove if already present\r\n                                                 : [...prev, item._id] // Add if not present\r\n                                                   )\r\n                                                      }>\r\n                                               {status.includes(item._id) ? (\r\n                                                                <span className=\"p-1 text-white bg-red-700 rounded-md\">Inactive</span>\r\n                                                                  ) : (\r\n                                                        <span className=\"p-1 text-white bg-green-400 rounded-md\">Active</span>\r\n                                                        )}\r\n                                                </td>\r\n                                                {/* Action dropdown menu */}\r\n                                                <td className='px-4 py-2 border-gray-100 border-1'>\r\n                                                <select className='px-1 py-1 text-sm border rounded-sm'  onChange={(e) => handleAction(e,item._id)}>\r\n                                                            <option value=\"\" selected={true} disabled={true}>Actions</option>\r\n                                                            <option value=\"discount\"> Generate Discount Coupon</option>\r\n                                                            <option value=\"edit\">Edit</option>\r\n                                                            <option value=\"view\">View Payment</option>\r\n                                                            <option value=\"delete\">Delete</option>\r\n                                                 </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                          ))}\r\n                                        {/* Table footer with totals */}\r\n                                        {currentUsers.length>0 &&(\r\n                                              <tr>\r\n                                              <td className='px-4 py-2 bg-gray-200'></td>\r\n                                              <td className='px-4 py-2 bg-gray-200'></td>\r\n                                              <td className='px-4 py-2 bg-gray-200'></td>\r\n                                              <td className='px-4 py-2 bg-gray-200'></td>\r\n                                              <td className='px-4 py-2 font-semibold text-right bg-gray-200 '>Total:</td>\r\n                                              <td className='px-4 py-2 font-semibold text-left bg-gray-200 '>{previousBalance}</td>\r\n                                              <td className='px-4 py-2 font-semibold bg-gray-200 '>{purchaseDue}</td>\r\n                                              <td className='px-4 py-2 font-semibold bg-gray-200 '>{previousReturnDue}</td>\r\n                                              <td className='px-4 py-2 font-semibold bg-gray-200 '>{previousBalance+purchaseDue+previousReturnDue}</td>\r\n                                              <td className='px-4 py-2 bg-gray-200 '></td>\r\n                                              <td className='px-4 py-2 bg-gray-200 '></td>\r\n                                          </tr>\r\n                                        ) }\r\n                                      \r\n                                    </tbody>\r\n                                </table>\r\n                  </div>\r\n                  <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === totalPages \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n                </div>\r\n            </div>\r\n        \r\n\r\n\r\n        \r\n    \r\n    </div>\r\n\r\n  \r\n</div>\r\n</div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","Input","_ref","id","type","label_class","label","placeholder","div_class","props","ID","useId","htmlFor","Supplierlist","Users","setUsers","loading","setLoading","error","setError","check","setCheckbox","previousBalance","setPreviousBalance","purchaseDue","setpurchaseDue","previousReturnDue","setPreviousReturnDue","status","setStatus","singleCheck","setSingleCheck","Navigate","useNavigate","useEffect","window","innerWidth","fetchData","async","response","axios","get","headers","Authorization","localStorage","getItem","data","console","log","err","message","currentPage","setCurrentPage","entriesPerPage","setEntriesPerPage","search","setSearch","filteredData","filter","item","_item$supplierName","supplierName","toLowerCase","includes","_id","totalPages","Math","ceil","length","currentUsers","slice","calculate","totals","reduce","acc","purchaseReturnDue","handlePageChange","newPage","handleAction","e","value","target","confirm","delete","alert","handleDelete","NavLink","to","FaTachometerAlt","Button","text","onClick","onChange","Number","handleCopy","map","mobile","email","join","navigator","clipboard","writeText","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","tableData","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","user","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","colSpan","Array","isArray","index","checked","single","prev","selected","disabled","min","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}