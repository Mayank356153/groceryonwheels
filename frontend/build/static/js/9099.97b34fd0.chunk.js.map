{"version":3,"file":"static/js/9099.97b34fd0.chunk.js","mappings":"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","sources":["Loading.jsx","components/Stock/BulkStockTransfer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Navbar from \"../Navbar.jsx\";\nimport Sidebar from \"../Sidebar.jsx\";\nimport LoadingScreen from \"../../Loading\";\nimport { BiChevronRight } from \"react-icons/bi\";\nimport { FaTachometerAlt } from \"react-icons/fa\";\n\n/*\n  BulkStockTransfer.jsx\n  ---------------------\n  • Transfers *all* positive‑stock SKUs from one warehouse to another.\n  • Leaves `leaveBehind` (default 1) units of each SKU in the source warehouse.\n  • Backend endpoint:  POST /api/stock-transfers/bulk\n    payload → { fromWarehouse, toWarehouse, leaveBehind }\n*/\n\nconst API = \"\"; // ⬅ change if you prefix your API routes\n\nexport default function BulkStockTransfer() {\n  /* ───────── internal state ───────── */\n  const navigate = useNavigate();\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const [loading,        setLoading]    = useState(false);\n\n  const [warehouses, setWarehouses] = useState([]);\n  const [formData,   setFormData]   = useState({\n    fromWarehouse: \"\",\n    toWarehouse  : \"\",\n    leaveBehind  : 1,\n  });\n\n  /* ───────── utilities ───────── */\n  const token      = localStorage.getItem(\"token\") || \"\";\n  const authHeader = { headers: { Authorization: `Bearer ${token}` } };\n\n  /* ───────── fetch warehouses once ───────── */\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const { data } = await axios.get(`${API}/api/warehouses`, authHeader);\n        const active   = (data.data || []).filter(w => w.status === \"Active\");\n        setWarehouses(active);\n\n        // default “from” = first restricted‑then‑first active\n        const restricted = active.find(w => w.isRestricted);\n        if (restricted) {\n          setFormData(prev => ({ ...prev, fromWarehouse: restricted._id }));\n        } else if (active[0]?._id) {\n          setFormData(prev => ({ ...prev, fromWarehouse: active[0]._id }));\n        }\n      } catch (err) {\n        console.error(\"warehouses:\", err);\n        alert(err.response?.data?.message || err.message);\n      } finally { setLoading(false); }\n    })();\n  }, []);\n\n  /* ───────── handlers ───────── */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.fromWarehouse || !formData.toWarehouse)\n      return alert(\"Select both warehouses\");\n    if (formData.fromWarehouse === formData.toWarehouse)\n      return alert(\"Cannot transfer to the same warehouse\");\n\n    setLoading(true);\n    try {\n      await axios.post(\n        `${API}/api/stock-transfers/stock-transfers/bulk`,\n        {\n          fromWarehouse: formData.fromWarehouse,\n          toWarehouse  : formData.toWarehouse,\n          leaveBehind  : formData.leaveBehind,\n        },\n        authHeader\n      );\n      alert(\"Bulk transfer completed!\");\n      navigate(\"/transfer-list\");\n    } catch (err) {\n      console.error(\"bulk transfer:\", err);\n      alert(err.response?.data?.message || err.message);\n    } finally { setLoading(false); }\n  };\n\n  /* ───────── render ───────── */\n  if (loading) return <LoadingScreen />;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-100\">\n      {/* nav + sidebar */}\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n      <div className=\"flex flex-grow\">\n        <Sidebar isSidebarOpen={isSidebarOpen} />\n\n        {/* main */}\n        <div className=\"flex-grow p-4\">\n          {/* header */}\n          <header className=\"flex flex-col items-center justify-between p-4 mb-3 bg-white rounded shadow md:flex-row\">\n            <div className=\"flex items-baseline gap-2\">\n              <h1 className=\"text-xl font-semibold\">Bulk Stock Transfer</h1>\n              <span className=\"text-sm text-gray-600\">Move every SKU at once</span>\n            </div>\n            <nav className=\"flex items-center text-sm text-gray-500\">\n              <a href=\"/dashboard\" className=\"flex items-center hover:text-cyan-600\">\n                <FaTachometerAlt className=\"mr-1\" /> Home\n              </a>\n              <BiChevronRight className=\"mx-2\" />\n              <a href=\"/transfer-list\" className=\"hover:text-cyan-600\">Stock Transfer List</a>\n            </nav>\n          </header>\n\n          {/* form */}\n          <form onSubmit={handleSubmit} className=\"p-4 bg-white border-t-4 rounded shadow border-cyan-500 max-w-xl mx-auto\">\n            {/* From / To */}\n            <div className=\"grid gap-4 mb-4 md:grid-cols-2\">\n              <div>\n                <label className=\"block mb-1 font-semibold\">From Warehouse</label>\n                <select\n                  required\n                  value={formData.fromWarehouse}\n                  onChange={e => setFormData({ ...formData, fromWarehouse: e.target.value })}\n                  className=\"w-full px-3 py-2 border rounded\"\n                >\n                  <option value=\"\">Select</option>\n                  {warehouses.map(w => (\n                    <option key={w._id} value={w._id}>{w.warehouseName}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block mb-1 font-semibold\">To Warehouse</label>\n                <select\n                  required\n                  value={formData.toWarehouse}\n                  onChange={e => setFormData({ ...formData, toWarehouse: e.target.value })}\n                  className=\"w-full px-3 py-2 border rounded\"\n                >\n                  <option value=\"\">Select</option>\n                  {warehouses.map(w => (\n                    <option key={w._id} value={w._id}>{w.warehouseName}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {/* Leave‑behind */}\n            <div className=\"mb-6\">\n              <label className=\"block mb-1 font-semibold\">Leave Behind (units)</label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                value={formData.leaveBehind}\n                onChange={e => setFormData({ ...formData, leaveBehind: Math.max(0, +e.target.value) })}\n                className=\"w-32 px-3 py-2 border rounded\"\n              />\n              <p className=\"mt-1 text-xs text-gray-500\">Set to 1 to keep at least one unit per SKU in source warehouse.</p>\n            </div>\n\n            {/* submit */}\n            <div className=\"flex justify-end gap-2\">\n              <button\n                type=\"submit\"\n                className=\"px-6 py-2 text-white rounded shadow bg-cyan-500 hover:bg-cyan-600\"\n              >\n                Transfer All\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navigate(\"/transfer-list\")}\n                className=\"px-6 py-2 text-white bg-gray-400 rounded shadow hover:bg-gray-500\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","API","BulkStockTransfer","navigate","useNavigate","loading","setLoading","warehouses","setWarehouses","formData","setFormData","fromWarehouse","toWarehouse","leaveBehind","authHeader","headers","Authorization","localStorage","getItem","useEffect","_active$","data","axios","get","active","filter","w","status","restricted","find","isRestricted","prev","_id","err","_err$response","_err$response$data","console","error","alert","response","message","href","FaTachometerAlt","BiChevronRight","onSubmit","async","e","preventDefault","post","_err$response2","_err$response2$data","required","value","onChange","target","map","warehouseName","type","min","Math","max","onClick"],"sourceRoot":""}