{"version":3,"file":"static/js/2937.c14399c1.chunk.js","mappings":"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","sources":["Loading.jsx","components/contact/Input.jsx","components/Items/Pop.jsx","components/Items/AddItems.jsx","components/Items/Scanner.jsx","components/contact/Button.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading';\r\n\r\nexport default function Pop({ add, setAdd, category, options, setOptions, fetchTax, fetchUnits, fetchBrands, fetchVariants }) {\r\n  const [newOption, setNewOption] = useState({\r\n    name: '',\r\n    description: '',\r\n    taxPercentage: '',\r\n    status: 'active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewOption((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) throw new Error('No authentication token found');\r\n\r\n      let response;\r\n      if (category === 'Category') {\r\n        response = await axios.post(\r\n          'api/categories',\r\n          {\r\n            name: newOption.name,\r\n            description: newOption.description,\r\n            status: newOption.status\r\n          },\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          }\r\n        );\r\n        setOptions((prev) => ({\r\n          ...prev,\r\n          category: [\r\n            ...prev.category,\r\n            {\r\n              label: response.data.data.name,\r\n              value: response.data.data._id\r\n            }\r\n          ]\r\n        }));\r\n      } else if (category === 'Tax') {\r\n        response = await axios.post(\r\n          'api/taxes',\r\n          {\r\n            taxName: newOption.name,\r\n            taxPercentage: Number(newOption.taxPercentage),\r\n            status: newOption.status\r\n          },\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          }\r\n        );\r\n        await fetchTax();\r\n      } else if (category === 'Unit') {\r\n        response = await axios.post(\r\n          'api/units',\r\n          {\r\n            unitName: newOption.name,\r\n            description: newOption.description,\r\n            status: newOption.status\r\n          },\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          }\r\n        );\r\n        await fetchUnits();\r\n      } else if (category === 'Brand') {\r\n        response = await axios.post(\r\n          'api/brands',\r\n          {\r\n            brandName: newOption.name,\r\n            description: newOption.description,\r\n            status: newOption.status\r\n          },\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          }\r\n        );\r\n        await fetchBrands();\r\n      } else if (category === 'Variant') {\r\n        response = await axios.post(\r\n          'api/variants',\r\n          {\r\n            variantName: newOption.name,\r\n            description: newOption.description,\r\n            status: newOption.status\r\n          },\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          }\r\n        );\r\n        await fetchVariants();\r\n      } else {\r\n        throw new Error(`Unsupported category: ${category}`);\r\n      }\r\n\r\n      alert(`${category} added successfully`);\r\n      setAdd(false);\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || err.message;\r\n      setError(errorMessage);\r\n      console.error(`Error adding ${category}:`, errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n  if (error) {\r\n    return (\r\n      <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-[1px] z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-lg w-96 p-6\">\r\n          <div className=\"text-red-500 mb-4\">Error: {error}</div>\r\n          <button\r\n            className=\"px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\r\n            onClick={() => setError(null)}\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-[1px] z-50\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"bg-white rounded-lg shadow-lg w-96\">\r\n          <div className=\"flex items-center justify-between p-4 text-lg font-semibold text-white rounded-t-lg bg-gradient-to-r from-teal-400 to-blue-500\">\r\n            <span>Add {category}</span>\r\n            <button type=\"button\" className=\"text-white cursor-pointer\" onClick={() => setAdd(false)}>\r\n              <FaTimes />\r\n            </button>\r\n          </div>\r\n          <div className=\"p-6\">\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"name\" className=\"block mb-2 font-medium text-gray-700\">\r\n                {category === 'Variant' ? 'Variant Name' : `${category} Name`}*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={newOption.name}\r\n                onChange={handleChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            {category === 'Tax' && (\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"taxPercentage\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Tax Percentage*\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"taxPercentage\"\r\n                  value={newOption.taxPercentage}\r\n                  onChange={handleChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  required\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"description\" className=\"block mb-2 font-medium text-gray-700\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={newOption.description}\r\n                onChange={handleChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"status\" className=\"block mb-2 font-medium text-gray-700\">\r\n                Status\r\n              </label>\r\n              <select\r\n                name=\"status\"\r\n                value={newOption.status}\r\n                onChange={handleChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"active\">Active</option>\r\n                <option value=\"inactive\">Inactive</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"px-4 py-2 text-white bg-orange-500 rounded hover:bg-orange-600\"\r\n                onClick={() => setAdd(false)}\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\r\n                disabled={loading}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","/* ──────────────────────────────────────────────────────────────\r\n   AddItem.jsx  –  FULL FILE\r\n   Last updated: 2025-05-01\r\n   Works with Scanner for Single items & Tax selects for Variant items\r\n   ────────────────────────────────────────────────────────────── */\r\n   import React, { useEffect, useState } from \"react\";\r\n   import Input from \"../contact/Input\";\r\n   import Button from \"../contact/Button\";\r\n   import Select from \"react-select\";\r\n   import Scanner from \"./Scanner\";\r\n   import Navbar from \"../Navbar\";\r\n   import { FaTachometerAlt, FaSearch, FaTrash } from \"react-icons/fa\";\r\n   import Sidebar from \"../Sidebar\";\r\n   import { NavLink, useNavigate, useSearchParams } from \"react-router-dom\";\r\n   import Pop from \"./Pop\";\r\n   import axios from \"axios\";\r\n   import LoadingScreen from \"../../Loading\";\r\n   \r\n   export default function AddItem() {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n     /* ───────── Router */\r\n     const [searchParams] = useSearchParams();\r\n     const id = searchParams.get(\"id\");\r\n     const Navigate = useNavigate();\r\n   \r\n     /* ───────── UI flags */\r\n     const [loading, setLoading] = useState(true);\r\n     const [error, setError] = useState(null);\r\n     const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n   \r\n     /* ───────── Pop-up create dialogs */\r\n     const [add, setAdd]   = useState(false);\r\n     const [name, setName] = useState(\"\");\r\n   \r\n     /* ───────── Variant helper state */\r\n     const [searchVariant, setSearchVariant] = useState(\"\");\r\n     const [allvariants,   setAllVariants]   = useState([]);\r\n   \r\n     /* ───────── Main form state */\r\n     const [formData, setFormData] = useState({\r\n       alertQuantity:   0,\r\n       barcodes:        [],\r\n       brand:           null,\r\n       category:        null,\r\n       subSubCategory:  null,\r\n       description:     \"\",\r\n       discount:        0,\r\n       discountType:    \"Percentage\",\r\n       discountPolicy:  \"None\",\r\n       requiredQuantity:0,\r\n       freeQuantity:    0,\r\n       expiryDate:      \"\",\r\n       itemCode:        \"\",\r\n       itemGroup:       null,\r\n       itemName:        \"\",\r\n       openingStock:    0,\r\n       subCategory:     null,\r\n       tax:             null,\r\n       taxType:         null,\r\n       unit:            null,\r\n       warehouse:       null,\r\n       variants:        [],\r\n       /* single-only fields */\r\n       sku:             \"\",\r\n       hsn:             \"\",\r\n       priceWithoutTax: 0,\r\n       purchasePrice:   0,\r\n       salesPrice:      0,\r\n       mrp:             0,\r\n       profitMargin:    0,\r\n       sellerPoints:    0,\r\n       isOnline:        true, \r\n     });\r\n   \r\n     /* ───────── Select options */\r\n     const [options, setOptions] = useState({\r\n       brand:          [],\r\n       category:       [],\r\n       subCategory:    [],\r\n       subsubCategory: [],\r\n       itemGroup: [\r\n         { label: \"Single\",   value: \"Single\"  },\r\n         { label: \"Variants\", value: \"Variant\" },\r\n       ],\r\n       unit:           [],\r\n       discounttype: [\r\n         { label: \"Percentage(%)\", value: \"Percentage\" },\r\n         { label: \"Fixed\",         value: \"Fixed\"      },\r\n       ],\r\n       discountPolicy: [\r\n         { label: \"None\",        value: \"None\"      },\r\n         { label: \"Buy X Get Y\", value: \"BuyXGetY\"  },\r\n       ],\r\n       tax:            [],\r\n       taxType: [\r\n         { label: \"Inclusive\", value: \"inclusive\" },\r\n         { label: \"Exclusive\", value: \"exclusive\" },\r\n       ],\r\n       warehouse:      [],\r\n       variants:       [],\r\n     });\r\n   \r\n     /* ───────────────────────────────────────── helpers */\r\n   \r\n     const generateItemCode = (lastItemCode) => {\r\n       const m = /(\\D+)(\\d+)/.exec(lastItemCode || \"\");\r\n       if (!m) return \"ITEM000001\";\r\n       const prefix = m[1];\r\n       const next   = String(parseInt(m[2], 10) + 1).padStart(m[2].length, \"0\");\r\n       return prefix + next;\r\n     };\r\n     const fetchLastItemCode = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          \"api/items\",\r\n          auth()\r\n        );\r\n    \r\n        // walk backwards until we find something like ITEM123456\r\n        const last = [...data.data]\r\n          .reverse()\r\n          .find((it) => /^ITEM\\d+$/.test(it.itemCode));\r\n    \r\n        const lastCode = last ? last.itemCode : \"ITEM000000\";\r\n    \r\n        setFormData((p) => ({ ...p, itemCode: generateItemCode(lastCode) }));\r\n      } catch (err) {\r\n        console.error(\"Unable to fetch last item-code:\", err.message);\r\n        setFormData((p) => ({ ...p, itemCode: \"ITEM000001\" }));\r\n      }\r\n    }\r\n   \r\n     /* unified change handler for simple inputs */\r\n    const handleChange = (e) => {\r\n  const { name, value, type } = e.target;\r\n  const num = type === \"number\" ? Number(value) : value;\r\n\r\n  // Validate salesPrice <= purchasePrice\r\n  if (name === \"salesPrice\" && num > formData.purchasePrice) {\r\n    alert(`❗ Sales Price (${num}) cannot exceed Purchase Price (${formData.purchasePrice})`);\r\n    return;\r\n  }\r\n\r\n  // Validate price fields <= MRP\r\n  if (\r\n    [\"priceWithoutTax\", \"purchasePrice\", \"salesPrice\"].includes(name) &&\r\n    num > formData.mrp\r\n  ) {\r\n    alert(`❗ ${name} (${num}) cannot exceed the MRP (${formData.mrp})`);\r\n    return;\r\n  }\r\n\r\n  setFormData((prev) => ({ ...prev, [name]: num }));\r\n};\r\n     const handleSelectChange = (field) => (opt) =>\r\n       setFormData((p) => ({ ...p, [field]: opt ? opt.value : null }));\r\n   \r\n     const handleFilesChange = (e) => {\r\n      const newFiles = Array.from(e.target.files);\r\n      // Validate file size (1 MB limit) and total number of files (max 5)\r\n      const totalFiles = selectedFiles.length + newFiles.length;\r\n      if (totalFiles > 5) {\r\n        alert(\"You can only upload up to 5 images.\");\r\n        return;\r\n      }\r\n      for (const file of newFiles) {\r\n        if (file.size > 1 * 1024 * 1024) {\r\n          alert(`File ${file.name} exceeds the 1 MB size limit.`);\r\n          return;\r\n        }\r\n      }\r\n      setSelectedFiles((prev) => [...prev, ...newFiles]);\r\n    };\r\n   \r\n     /* ─── price helpers (Single) */\r\n   const handlePrice = (e) => {\r\n  const { name, value } = e.target;\r\n  const num = Number(value);\r\n  const mrp = formData.mrp;\r\n  const purchasePrice = formData.purchasePrice;\r\n\r\n  // Validate against MRP\r\n  if (name === \"priceWithoutTax\" && num > mrp) {\r\n    alert(`❗ Price (${num}) cannot exceed the MRP (${mrp})`);\r\n    return;\r\n  }\r\n  if (name === \"purchasePrice\" && num > mrp) {\r\n    alert(`❗ Purchase Price (${num}) cannot exceed the MRP (${mrp})`);\r\n    return;\r\n  }\r\n  if (name === \"salesPrice\" && num > mrp) {\r\n    alert(`❗ Sales Price (${num}) cannot exceed the MRP (${mrp})`);\r\n    return;\r\n  }\r\n\r\n  // Handle price changes\r\n  if (name === \"priceWithoutTax\") {\r\n    const newSales = Math.round(num + (num * formData.profitMargin) / 100);\r\n    if (newSales > num) {\r\n      alert(`❗ Calculated Sales Price (${newSales}) cannot exceed Purchase Price (${num})`);\r\n      return;\r\n    }\r\n    if (newSales > mrp) {\r\n      alert(`❗ Calculated Sales Price (${newSales}) exceeds the MRP (${mrp}). Lower your cost or margin.`);\r\n      return;\r\n    }\r\n    setFormData((p) => ({\r\n      ...p,\r\n      priceWithoutTax: num,\r\n      purchasePrice: num,\r\n      salesPrice: newSales,\r\n    }));\r\n  } else if (name === \"profitMargin\") {\r\n    const cost = formData.priceWithoutTax;\r\n    const newSales = Math.round(cost + (cost * num) / 100);\r\n    if (newSales > purchasePrice) {\r\n      alert(`❗ Calculated Sales Price (${newSales}) cannot exceed Purchase Price (${purchasePrice})`);\r\n      return;\r\n    }\r\n    if (newSales > mrp) {\r\n      alert(`❗ Calculated Sales Price (${newSales}) exceeds the MRP (${mrp}). Lower your margin.`);\r\n      return;\r\n    }\r\n    setFormData((p) => ({\r\n      ...p,\r\n      profitMargin: num,\r\n      salesPrice: newSales,\r\n    }));\r\n  } else if (name === \"salesPrice\") {\r\n    if (num > purchasePrice) {\r\n      alert(`❗ Sales Price (${num}) cannot exceed Purchase Price (${purchasePrice})`);\r\n      return;\r\n    }\r\n    setFormData((p) => ({\r\n      ...p,\r\n      salesPrice: num,\r\n      profitMargin: purchasePrice ? Math.round(((num - purchasePrice) / purchasePrice) * 100) : 0,\r\n    }));\r\n  }\r\n};\r\n\r\n\r\n   \r\n     /* ─── variant helpers */\r\n     const syncVariantArrays = (updater) => {\r\n       setAllVariants((prev) => updater(prev));\r\n       setFormData((prev) => ({ ...prev, variants: updater(prev.variants) }));\r\n     };\r\n   \r\n     const handleVariantField = (e, id) => {\r\n       const { name, value, type } = e.target;\r\n       const newVal = Array.isArray(value) ? value : type === \"number\" ? Number(value) : value;\r\n       syncVariantArrays((arr) =>\r\n         arr.map((v) =>\r\n           String(v.variantId) === String(id) ? { ...v, [name]: newVal } : v\r\n         )\r\n       );\r\n     };\r\n   const handleVariantPrice = (e, id) => {\r\n  const { name, value } = e.target;\r\n  const num = Number(value);\r\n  syncVariantArrays((arr) =>\r\n    arr.map((v) => {\r\n      if (String(v.variantId) !== String(id)) return v;\r\n      const upd = { ...v };\r\n\r\n      // Validate against MRP\r\n      if (name === \"price\" && num > v.mrp) {\r\n        alert(`❗ Price (${num}) cannot exceed MRP (${v.mrp})`);\r\n        return v; // Prevent update\r\n      }\r\n      if (name === \"purchasePrice\" && num > v.mrp) {\r\n        alert(`❗ Purchase Price (${num}) cannot exceed MRP (${v.mrp})`);\r\n        return v; // Prevent update\r\n      }\r\n      if (name === \"salesPrice\" && num > v.mrp) {\r\n        alert(`❗ Sales Price (${num}) cannot exceed MRP (${v.mrp})`);\r\n        return v; // Prevent update\r\n      }\r\n\r\n      // Handle price changes\r\n      if (name === \"price\") {\r\n        upd.price = num;\r\n        upd.purchasePrice = num;\r\n        const newSales = Math.round(num + (num * v.profitMargin) / 100);\r\n        if (newSales > num) {\r\n          alert(`❗ Calculated Sales Price (${newSales}) cannot exceed Purchase Price (${num})`);\r\n          return v; // Prevent update\r\n        }\r\n        if (newSales > v.mrp) {\r\n          alert(`❗ Calculated Sales Price (${newSales}) cannot exceed MRP (${v.mrp})`);\r\n          return v; // Prevent update\r\n        }\r\n        upd.salesPrice = newSales;\r\n      } else if (name === \"profitMargin\") {\r\n        upd.profitMargin = num;\r\n        const newSales = Math.round(v.price + (v.price * num) / 100);\r\n        if (newSales > v.purchasePrice) {\r\n          alert(`❗ Calculated Sales Price (${newSales}) cannot exceed Purchase Price (${v.purchasePrice})`);\r\n          return v; // Prevent update\r\n        }\r\n        if (newSales > v.mrp) {\r\n          alert(`❗ Calculated Sales Price (${newSales}) cannot exceed MRP (${v.mrp})`);\r\n          return v; // Prevent update\r\n        }\r\n        upd.salesPrice = newSales;\r\n      } else if (name === \"salesPrice\") {\r\n        if (num > v.purchasePrice) {\r\n          alert(`❗ Sales Price (${num}) cannot exceed Purchase Price (${v.purchasePrice})`);\r\n          return v; // Prevent update\r\n        }\r\n        upd.salesPrice = num;\r\n        upd.profitMargin = v.price ? Math.round(((num - v.price) / v.price) * 100) : 0;\r\n      } else if (name === \"purchasePrice\") {\r\n        upd.purchasePrice = num;\r\n        // Ensure salesPrice doesn't exceed new purchasePrice\r\n        if (upd.salesPrice > num) {\r\n          alert(`❗ Sales Price (${upd.salesPrice}) cannot exceed new Purchase Price (${num})`);\r\n          upd.salesPrice = num;\r\n          upd.profitMargin = v.price ? Math.round(((num - v.price) / v.price) * 100) : 0;\r\n        }\r\n      }\r\n      return upd;\r\n    })\r\n  );\r\n};\r\n     /* add/remove variants */\r\n     const addvariant = () => {\r\n       if (!searchVariant) return;\r\n       const found = options.variants.find(\r\n         (v) => v.variantName.toLowerCase() === searchVariant.toLowerCase()\r\n       );\r\n       if (!found) return;\r\n       const newVar = {\r\n         variantId:       found._id,\r\n         variantName:     found.variantName,\r\n         sku:             \"\",\r\n         hsn:             \"\",\r\n         barcodes:        [],\r\n         price:           0,\r\n         purchasePrice:   0,\r\n         salesPrice:      0,\r\n         mrp:             0,\r\n         profitMargin:    0,\r\n         openingStock:    0,\r\n         discountPolicy:  \"None\",\r\n         requiredQuantity:0,\r\n         freeQuantity:    0,\r\n       };\r\n       setAllVariants((p) => [...p, newVar]);\r\n       setFormData((p) => ({ ...p, variants: [...p.variants, newVar] }));\r\n       setSearchVariant(\"\");\r\n     };\r\n   \r\n     const removeVariant = (id) => {\r\n       syncVariantArrays((arr) => arr.filter((v) => String(v.variantId) !== String(id)));\r\n     };\r\n   \r\n     useEffect(() => {\r\n       if (searchVariant) addvariant();\r\n     }, [searchVariant]);\r\n   \r\n     /* ───────────────────────────────────────── fetch helpers */\r\n   \r\n     const auth = () => ({ headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\r\n   \r\n     const fetchSimple = async (url, key, mapfn) => {\r\n       const { data } = await axios.get(url, auth());\r\n       setOptions((p) => ({ ...p, [key]: mapfn(data.data) }));\r\n     };\r\n   \r\n     const fetchInitData = async () => {\r\n       try {\r\n         await Promise.all([\r\n           fetchSimple(\r\n             \"api/brands\",\r\n             \"brand\",\r\n             (d) => d.map((x) => ({ label: x.brandName, value: x._id }))\r\n           ),\r\n           fetchSimple(\r\n             \"api/categories\",\r\n             \"category\",\r\n             (d) => d.map((x) => ({ label: x.name, value: x._id }))\r\n           ),\r\n           fetchSimple(\r\n             \"api/subcategories\",\r\n             \"subCategory\",\r\n             (d) => d.map((x) => ({ label: x.name, value: x._id }))\r\n           ),\r\n           fetchSimple(\r\n             \"api/sub-subcategories\",\r\n             \"subsubCategory\",\r\n             (d) => d.map((x) => ({ label: x.name, value: x._id }))\r\n           ),\r\n           fetchSimple(\r\n             \"api/units\",\r\n             \"unit\",\r\n             (d) => d.map((x) => ({ label: x.unitName, value: x._id }))\r\n           ),\r\n           fetchSimple(\r\n             \"api/taxes\",\r\n             \"tax\",\r\n             (d) => d.map((x) => ({ label: x.taxName, value: x._id }))\r\n           ),\r\n          fetchSimple(\r\n      \"api/warehouses\",\r\n      \"warehouse\",\r\n      (d) =>\r\n        d\r\n         // only keep Active warehouses\r\n         .filter((w) => w.status === \"Active\")\r\n         .map((x) => ({ label: x.warehouseName, value: x._id }))\r\n    ),\r\n           axios\r\n             .get(\"api/variants\", auth())\r\n             .then(({ data }) =>\r\n               setOptions((p) => ({ ...p, variants: data.data }))\r\n             ),\r\n         ]);\r\n   \r\n         if (id) {\r\n           const { data } = await axios.get(\r\n             `api/items/${id}`,\r\n             auth()\r\n           );\r\n           const it = data.data;\r\n           setFormData({\r\n             ...it,\r\n             barcodes: it.barcodes || [],\r\n             variants: it.variants || [],\r\n             taxType:  it.taxType || null,\r\n             isOnline : it.isOnline, \r\n           });\r\n           setAllVariants(it.variants || []);\r\n          } else {\r\n               // brand-new item → get the next code\r\n               await fetchLastItemCode();\r\n             }\r\n   \r\n         /* responsive sidebar */\r\n         if (window.innerWidth < 768) setSidebarOpen(false);\r\n         setLoading(false);\r\n       } catch (err) {\r\n         setError(err.message);\r\n       }\r\n     };\r\n   \r\n     /* ───────────────────────────────────────── submit helpers */\r\n   \r\n     const variantPayload = (v) => ({\r\n       variantId:       v.variantId,\r\n       sku:             v.sku,\r\n       hsn:             v.hsn,\r\n       barcodes:        v.barcodes || [],\r\n       priceWithoutTax: Number(v.price)         || 0,\r\n       purchasePrice:   Number(v.purchasePrice) || 0,\r\n       salesPrice:      Number(v.salesPrice)    || 0,\r\n       mrp:             Number(v.mrp)           || 0,\r\n       profitMargin:    Number(v.profitMargin)  || 0,\r\n       openingStock:    Number(v.openingStock)  || 0,\r\n       discountPolicy:  v.discountPolicy,\r\n       requiredQuantity:Number(v.requiredQuantity) || 0,\r\n       freeQuantity:    Number(v.freeQuantity)     || 0,\r\n     });\r\n   \r\n     const saveItem = async () => {\r\n  const payload = { ...formData };\r\n\r\n  // if it’s a Variant group, map through and build the raw variant objects\r\n  if (payload.itemGroup === \"Variant\") {\r\n    payload.variants = payload.variants.map(variantPayload);\r\n  }\r\n\r\n  const body = new FormData();\r\n\r\n  Object.entries(payload).forEach(([key, value]) => {\r\n    if (value === null || value === undefined) return;\r\n\r\n    // ← special‐case the variants array\r\n    if (key === \"variants\") {\r\n      // append the entire array as one JSON string\r\n      body.append(\"variants\", JSON.stringify(value));\r\n    }\r\n    // keep your old behavior for simple arrays (barcodes, etc.)\r\n    else if (Array.isArray(value)) {\r\n      value.forEach((item, idx) => {\r\n        body.append(`${key}[${idx}]`, item);\r\n      });\r\n    }\r\n    // other objects (e.g. nested settings) as JSON\r\n    else if (typeof value === \"object\") {\r\n      body.append(key, JSON.stringify(value));\r\n    }\r\n    // primitives\r\n    else {\r\n      body.append(key, value);\r\n    }\r\n  });\r\n\r\n  // images still appended one-by-one\r\n  selectedFiles.forEach(file => {\r\n    body.append(\"itemImages\", file);\r\n  });\r\n\r\n  const url = id\r\n    ? `api/items/${id}`\r\n    : `api/items`;\r\n  const method = id ? \"put\" : \"post\";\r\n\r\n  await axios[method](url, body, {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  });\r\n};\r\n\r\n    \r\n   \r\n  const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  if (\r\n    formData.discountPolicy === \"BuyXGetY\" &&\r\n    (formData.requiredQuantity < 1 || formData.freeQuantity < 1)\r\n  ) {\r\n    return alert(\"Required and Free Quantity must be ≥ 1\");\r\n  }\r\n\r\n  try {\r\n    setLoading(true);\r\n    await saveItem();\r\n    alert(id ? \"Item Updated\" : \"Item Added\");\r\n\r\n    // After either adding or updating, go back to the list:\r\n    Navigate(\"/item-list\");\r\n  } catch (err) {\r\n    alert(err.response?.data?.message || err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n   \r\n     /* ───────────────────────────────────────── initial load */\r\n     useEffect(() => { fetchInitData(); }, []);\r\n   \r\n     if (loading) return <LoadingScreen />;\r\n     if (error)   return <div className=\"p-4 text-red-500\">Error: {error}</div>;\r\n   \r\n     /* ───────────────────────────────────────── JSX */\r\n     return (\r\n       <div className=\"flex flex-col h-screen\">\r\n         <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n         <div className=\"flex flex-grow\">\r\n           <Sidebar isSidebarOpen={isSidebarOpen} />\r\n           <div className=\"w-full h-full px-6 py-4 bg-gray-300 overflow-y-auto\">\r\n             {/* header / breadcrumbs */}\r\n             <div className=\"flex flex-col justify-between mt-4 md:flex-row\">\r\n               <div className=\"flex flex-wrap items-end\">\r\n                 <span className=\"text-3xl\">Items</span>\r\n                 <span className=\"ml-2 text-sm text-gray-700\">Add / Update</span>\r\n               </div>\r\n               <div className=\"flex flex-wrap gap-2 px-2 py-2 text-sm font-semibold bg-gray-500 bg-opacity-50 rounded-md md:bg-transparent\">\r\n                 <NavLink to=\"/dashboard\"  className=\"flex items-center text-gray-700\"><FaTachometerAlt className=\"mr-1\" />Home</NavLink>\r\n                 <NavLink to=\"/item-list\"  className=\"text-gray-700\">&gt; Items List</NavLink>\r\n                 <NavLink to=\"/items/add\"  className=\"text-gray-700\">&gt; Items</NavLink>\r\n               </div>\r\n             </div>\r\n   \r\n             {add && (\r\n               <Pop\r\n                 add={add}\r\n                 setAdd={setAdd}\r\n                 options={options}\r\n                 setOptions={setOptions}\r\n                 category={name}\r\n                 fetchTax={()   => fetchSimple(\"api/taxes\",\"tax\",(d)=>d.map(x=>({label:x.taxName,value:x._id})))}\r\n                 fetchUnits={() => fetchSimple(\"api/units\",\"unit\",(d)=>d.map(x=>({label:x.unitName,value:x._id})))}\r\n                 fetchBrands={() => fetchSimple(\"api/brands\",\"brand\",(d)=>d.map(x=>({label:x.brandName,value:x._id})))}\r\n                 fetchVariants={() => axios.get(\"api/variants\",auth()).then(({data})=>setOptions(p=>({...p,variants:data.data})))}\r\n               />\r\n             )}\r\n   \r\n             {/* ╔══════════════════  FORM  ══════════════════╗ */}\r\n             <form onSubmit={handleSubmit}>\r\n               <div className=\"flex flex-col gap-5 p-4 bg-white border-t-2 rounded-lg border-t-blue-600\">\r\n   \r\n                 {/* Item Code / Name */}\r\n                 <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                   <Input\r\n                     label=\"Item Code*\"\r\n                     value={formData.itemCode}\r\n                     readOnly\r\n                     label_class=\"text-sm font-semibold\"\r\n                     div_class=\"flex flex-col lg:w-1/4\"\r\n                     className=\"px-4 py-2 mt-1 text-sm bg-gray-200 border-2 border-gray-300 rounded-md\"\r\n                   />\r\n                   <Input\r\n                     label=\"Item Name*\"\r\n                     name=\"itemName\"\r\n                     value={formData.itemName}\r\n                     onChange={handleChange}\r\n                     label_class=\"text-sm font-semibold\"\r\n                     div_class=\"flex flex-col lg:w-1/4\"\r\n                     className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                   />\r\n                 </div>\r\n   \r\n                 {/* Brand / Category / SubCategory */}\r\n                 <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                   <div className=\"flex flex-col lg:w-1/4\">\r\n                     <label className=\"mb-1 text-sm font-semibold\">Brand</label>\r\n                     <div className=\"flex\">\r\n                       <Select\r\n                         options={options.brand}\r\n                         onChange={handleSelectChange(\"brand\")}\r\n                         value={options.brand.find(o=>o.value=== (formData.brand?._id||formData.brand))||null}\r\n                         className=\"w-full\"\r\n                       />\r\n                       <span onClick={() => {setAdd(true);setName(\"Brand\");}}\r\n                             className=\"px-2 text-lg font-bold text-blue-500 border-2 border-gray-300 rounded-sm cursor-pointer hover:bg-gray-100\">+</span>\r\n                     </div>\r\n                   </div>\r\n                   <div className=\"flex flex-col w-full lg:w-1/4\">\r\n                     <label className=\"mb-1 text-sm font-semibold\">Category</label>\r\n                     <Select\r\n                       options={options.category}\r\n                       onChange={handleSelectChange(\"category\")}\r\n                       value={options.category.find(o=>o.value=== (formData.category?._id||formData.category))||null}\r\n                     />\r\n                   </div>\r\n                   <div className=\"flex flex-col w-full lg:w-1/4\">\r\n                     <label className=\"mb-1 text-sm font-semibold\">SubCategory</label>\r\n                     <Select\r\n                       options={options.subCategory}\r\n                       onChange={handleSelectChange(\"subCategory\")}\r\n                       value={options.subCategory.find(o=>o.value=== (formData.subCategory?._id||formData.subCategory))||null}\r\n                     />\r\n                   </div>\r\n                 </div>\r\n   \r\n                 {/* SubSub / ItemGroup / Unit */}\r\n                 <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                   <div className=\"flex flex-col lg:w-1/4\">\r\n                     <label className=\"mb-1 text-sm font-semibold\">Sub SubCategory</label>\r\n                     <Select\r\n                       options={options.subsubCategory}\r\n                       onChange={handleSelectChange(\"subSubCategory\")}\r\n                       value={options.subsubCategory.find(o=>o.value=== (formData.subSubCategory?._id||formData.subSubCategory))||null}\r\n                     />\r\n                   </div>\r\n                   <div className=\"flex flex-col w-full lg:w-1/4\">\r\n                     <label className=\"text-sm font-semibold\">Item Group*</label>\r\n                     <Select\r\n                       options={options.itemGroup}\r\n                       onChange={handleSelectChange(\"itemGroup\")}\r\n                       value={options.itemGroup.find(o=>o.value=== (formData.itemGroup))||null}\r\n                     />\r\n                   </div>\r\n                   <div className=\"flex flex-col w-full lg:w-1/4\">\r\n                     <label className=\"mb-1 text-sm font-semibold\">Unit</label>\r\n                     <div className=\"flex\">\r\n                       <Select\r\n                         options={options.unit}\r\n                         onChange={handleSelectChange(\"unit\")}\r\n                         value={options.unit.find(o=>o.value=== (formData.unit?._id||formData.unit))||null}\r\n                         className=\"w-full\"\r\n                       />\r\n                       <span onClick={() => {setAdd(true);setName(\"Unit\");}}\r\n                             className=\"px-2 text-lg font-bold text-blue-500 border-2 border-gray-300 rounded-sm cursor-pointer hover:bg-gray-100\">+</span>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n   \r\n                 {/* ─── Single-only section (SKU/HSN/Alert) */}\r\n                 {formData.itemGroup !== \"Variant\" && (\r\n                   <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                     <Input\r\n                       label=\"SKU\"\r\n                       name=\"sku\"\r\n                       value={formData.sku}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                     <Input\r\n                       label=\"HSN\"\r\n                       name=\"hsn\"\r\n                       value={formData.hsn}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                     <Input\r\n                       label=\"Alert Quantity\"\r\n                       name=\"alertQuantity\"\r\n                       type=\"number\"\r\n                       min=\"0\"\r\n                       value={formData.alertQuantity}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                   </div>\r\n                 )}\r\n   \r\n                 {/* Seller Points + Scanner + Description (Single) OR Seller Points only (Variant) */}\r\n                 <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                   <Input\r\n                     label=\"Seller Points\"\r\n                     name=\"sellerPoints\"\r\n                     type=\"number\"\r\n                     min=\"0\"\r\n                     value={formData.sellerPoints}\r\n                     onChange={handleChange}\r\n                     label_class=\"text-sm font-semibold\"\r\n                     div_class=\"flex flex-col lg:w-1/4\"\r\n                     className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                   />\r\n   \r\n                   {formData.itemGroup !== \"Variant\" && (\r\n                     <Scanner\r\n                       formData={formData}\r\n                       setFormData={setFormData}\r\n                       fieldName=\"barcodes\"\r\n                     />\r\n                   )}\r\n   \r\n                   <div className=\"flex flex-col lg:w-1/4\">\r\n                     <label className=\"text-sm font-semibold\">Description</label>\r\n                     <textarea\r\n                       name=\"description\"\r\n                       value={formData.description}\r\n                       onChange={handleChange}\r\n                       className=\"px-2 py-2 border-2 border-gray-300 rounded-md focus:border-blue-600\"\r\n                     />\r\n                   </div>\r\n                 </div>\r\n\r\n                 {/* Online / Offline toggle */}\r\n<div className=\"flex flex-col lg:w-1/4\">\r\n  <label className=\"text-sm font-semibold\">Visibility</label>\r\n  <select\r\n    value={formData.isOnline ? \"online\" : \"offline\"}\r\n    onChange={e =>\r\n      setFormData(p => ({ ...p, isOnline: e.target.value === \"online\" }))\r\n    }\r\n    className=\"px-4 py-2 mt-1 border-2 border-gray-300 rounded-md\"\r\n  >\r\n    <option value=\"online\">Show in customer app</option>\r\n    <option value=\"offline\">Hide from customer app</option>\r\n  </select>\r\n</div>\r\n\r\n   \r\n                 {/* Images uploader */}\r\n                 <div className=\"flex flex-col lg:w-1/4\">\r\n  <label className=\"text-sm font-semibold mb-1\">Images</label>\r\n  <input\r\n    type=\"file\"\r\n    name=\"itemImages\"\r\n    multiple\r\n    accept=\"image/*\"\r\n    onChange={handleFilesChange}\r\n    className=\"px-4 py-2 border-2 border-gray-300 rounded-md bg-white\"\r\n  />\r\n  <span className=\"text-xs text-gray-600 mt-1\">\r\n    You can pick up to 5 images (max 1 MB each)\r\n  </span>\r\n  {selectedFiles.length > 0 && (\r\n    <div className=\"mt-2\">\r\n      <p className=\"text-sm font-semibold\">Selected Files:</p>\r\n      <ul className=\"list-disc pl-5\">\r\n        {selectedFiles.map((file, index) => (\r\n          <li key={index} className=\"text-sm flex items-center\">\r\n            {file.name} ({(file.size / 1024).toFixed(2)} KB)\r\n            <button\r\n              type=\"button\"\r\n              onClick={() =>\r\n                setSelectedFiles((prev) =>\r\n                  prev.filter((_, i) => i !== index)\r\n                )\r\n              }\r\n              className=\"ml-2 text-red-500 hover:text-red-700\"\r\n            >\r\n              <FaTrash />\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )}\r\n</div>\r\n   \r\n                 {/* Discount section */}\r\n                 <div className=\"flex flex-col gap-2 py-5 border-t-2 border-b-2 border-gray-200 lg:flex-row\">\r\n                   <div className=\"flex flex-col lg:w-1/4\">\r\n                     <label className=\"text-sm font-semibold\">Discount Type</label>\r\n                     <Select\r\n                       options={options.discounttype}\r\n                       onChange={handleSelectChange(\"discountType\")}\r\n                       value={options.discounttype.find(o=>o.value===formData.discountType)||null}\r\n                     />\r\n                   </div>\r\n                   <Input\r\n                     label=\"Discount\"\r\n                     name=\"discount\"\r\n                     type=\"number\"\r\n                     min=\"0\"\r\n                     value={formData.discount}\r\n                     onChange={handleChange}\r\n                     label_class=\"text-sm font-semibold\"\r\n                     div_class=\"flex flex-col lg:w-1/4\"\r\n                     className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                   />\r\n                   <div className=\"flex flex-col lg:w-1/4\">\r\n                     <label className=\"text-sm font-semibold\">Discount Policy</label>\r\n                     <Select\r\n                       options={options.discountPolicy}\r\n                       onChange={handleSelectChange(\"discountPolicy\")}\r\n                       value={options.discountPolicy.find(o=>o.value===formData.discountPolicy)||null}\r\n                     />\r\n                   </div>\r\n                 </div>\r\n   \r\n                 {formData.discountPolicy === \"BuyXGetY\" && (\r\n                   <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                     <Input\r\n                       label=\"Required Quantity*\"\r\n                       name=\"requiredQuantity\"\r\n                       type=\"number\"\r\n                       min=\"1\"\r\n                       value={formData.requiredQuantity}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                     <Input\r\n                       label=\"Free Quantity*\"\r\n                       name=\"freeQuantity\"\r\n                       type=\"number\"\r\n                       min=\"1\"\r\n                       value={formData.freeQuantity}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                   </div>\r\n                 )}\r\n   \r\n                 {/* ─── Price & Tax (Single items) */}\r\n                 {formData.itemGroup !== \"Variant\" && (\r\n                   <>\r\n                     <div className=\"flex flex-col gap-2 pt-5 border-t-2 border-gray-200 lg:flex-row\">\r\n                       <Input\r\n                         label=\"Price*\"\r\n                         name=\"priceWithoutTax\"\r\n                         type=\"number\"\r\n                         min=\"0\"\r\n                         value={formData.priceWithoutTax}\r\n                         onChange={(e) => {handlePrice(e); handleChange(e);}}\r\n                         label_class=\"text-sm font-semibold\"\r\n                         div_class=\"flex flex-col lg:w-1/4\"\r\n                         className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                       />\r\n                       <div className=\"flex flex-col lg:w-1/4\">\r\n                         <label className=\"text-sm font-semibold\">Tax*</label>\r\n                         <div className=\"flex\">\r\n                           <Select\r\n                             options={options.tax}\r\n                             onChange={handleSelectChange(\"tax\")}\r\n                             value={options.tax.find(o=>o.value=== (formData.tax?._id||formData.tax))||null}\r\n                             className=\"w-full\"\r\n                           />\r\n                           <span onClick={()=>{setAdd(true);setName(\"Tax\");}}\r\n                                 className=\"px-2 text-lg font-bold text-blue-500 border-2 border-gray-300 rounded-sm cursor-pointer hover:bg-gray-100\">+</span>\r\n                         </div>\r\n                       </div>\r\n                       <Input\r\n   label=\"Purchase Price*\"\r\n  name=\"purchasePrice\"\r\n   type=\"number\"\r\n   min=\"0\"\r\n   value={formData.purchasePrice}\r\n   onChange={handleChange}\r\n   label_class=\"text-sm font-semibold\"\r\n   div_class=\"flex flex-col lg:w-1/4\"\r\n   className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n />\r\n                     </div>\r\n   \r\n                     <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                       <div className=\"flex flex-col lg:w-1/4\">\r\n                         <label className=\"text-sm font-semibold\">Tax Type*</label>\r\n                         <Select\r\n                           options={options.taxType}\r\n                           onChange={handleSelectChange(\"taxType\")}\r\n                           value={options.taxType.find(o=>o.value===formData.taxType)||null}\r\n                         />\r\n                       </div>\r\n                       <Input\r\n                         label=\"Profit Margin(%)\"\r\n                         name=\"profitMargin\"\r\n                         type=\"number\"\r\n                         min=\"0\"\r\n                         value={formData.profitMargin}\r\n                         onChange={(e)=>{handlePrice(e);handleChange(e);}}\r\n                         label_class=\"text-sm font-semibold\"\r\n                         div_class=\"flex flex-col lg:w-1/4\"\r\n                         className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                       />\r\n                       <Input\r\n                         label=\"Sales Price*\"\r\n                         name=\"salesPrice\"\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                         value={formData.salesPrice}\r\n                         onChange={handleChange}\r\n                         label_class=\"text-sm font-semibold\"\r\n                         div_class=\"flex flex-col lg:w-1/4\"\r\n                         className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                       />\r\n                     </div>\r\n   \r\n                     <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                       <Input\r\n                         label=\"MRP\"\r\n                         name=\"mrp\"\r\n                         type=\"number\"\r\n                         min=\"0\"\r\n                         value={formData.mrp}\r\n                         onChange={handleChange}\r\n                         label_class=\"text-sm font-semibold\"\r\n                         div_class=\"flex flex-col lg:w-1/4\"\r\n                         className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                       />\r\n                       <Input\r\n                         label=\"Expiry Date\"\r\n                         name=\"expiryDate\"\r\n                         type=\"date\"\r\n                         value={formData.expiryDate ? new Date(formData.expiryDate).toISOString().split(\"T\")[0] : \"\"}\r\n                         onChange={handleChange}\r\n                         label_class=\"text-sm font-semibold\"\r\n                         div_class=\"flex flex-col lg:w-1/4\"\r\n                         className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                       />\r\n                     </div>\r\n                   </>\r\n                 )}\r\n   \r\n                 {/* Warehouse & Opening Stock */}\r\n                 <div className=\"flex flex-col gap-2 py-5 border-t-2 border-b-2 border-gray-200 lg:flex-row\">\r\n                   <div className=\"flex flex-col lg:w-1/4\">\r\n                     <label className=\"text-sm font-semibold\">Warehouse</label>\r\n                     <Select\r\n                       options={options.warehouse}\r\n                       onChange={handleSelectChange(\"warehouse\")}\r\n                       value={options.warehouse.find(o=>o.value=== (formData.warehouse?._id||formData.warehouse))||null}\r\n                     />\r\n                   </div>\r\n                   {formData.itemGroup !== \"Variant\" && (\r\n                     <Input\r\n                       label=\"Opening Stock\"\r\n                       name=\"openingStock\"\r\n                       type=\"number\"\r\n                       min=\"0\"\r\n                       value={formData.openingStock}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                   )}\r\n                 </div>\r\n   \r\n                 {/* ─── Variant-only: Tax / Type / Expiry before table */}\r\n                 {formData.itemGroup === \"Variant\" && (\r\n                   <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                     <div className=\"flex flex-col lg:w-1/4\">\r\n                       <label className=\"text-sm font-semibold\">Tax*</label>\r\n                       <div className=\"flex\">\r\n                         <Select\r\n                           options={options.tax}\r\n                           onChange={handleSelectChange(\"tax\")}\r\n                           value={options.tax.find(o=>o.value=== (formData.tax?._id||formData.tax))||null}\r\n                           className=\"w-full\"\r\n                         />\r\n                         <span onClick={()=>{setAdd(true);setName(\"Tax\");}}\r\n                               className=\"px-2 text-lg font-bold text-blue-500 border-2 border-gray-300 rounded-sm cursor-pointer hover:bg-gray-100\">+</span>\r\n                       </div>\r\n                     </div>\r\n                     <div className=\"flex flex-col lg:w-1/4\">\r\n                       <label className=\"text-sm font-semibold\">Tax Type*</label>\r\n                       <Select\r\n                         options={options.taxType}\r\n                         onChange={handleSelectChange(\"taxType\")}\r\n                         value={options.taxType.find(o=>o.value===formData.taxType)||null}\r\n                       />\r\n                     </div>\r\n                     <Input\r\n                       label=\"Expiry Date\"\r\n                       name=\"expiryDate\"\r\n                       type=\"date\"\r\n                       value={formData.expiryDate ? new Date(formData.expiryDate).toISOString().split(\"T\")[0] : \"\"}\r\n                       onChange={handleChange}\r\n                       label_class=\"text-sm font-semibold\"\r\n                       div_class=\"flex flex-col lg:w-1/4\"\r\n                       className=\"px-4 py-2 mt-1 text-sm border-2 border-gray-300 rounded-md\"\r\n                     />\r\n                   </div>\r\n                 )}\r\n   \r\n                 {/* ───────────────── Variant Table */}\r\n                 {formData.itemGroup === \"Variant\" && (\r\n                   <div className=\"relative w-full p-4\">\r\n                     {/* search bar */}\r\n                     <div className=\"flex items-center w-full px-2 mb-4 border border-t-2 rounded-md border-t-cyan-500\">\r\n                       <FaSearch className=\"mr-2 text-gray-500\" />\r\n                       <input\r\n                         type=\"text\"\r\n                         placeholder=\"Search Variant\"\r\n                         value={searchVariant}\r\n                         onChange={(e)=>setSearchVariant(e.target.value)}\r\n                         className=\"w-full p-2 focus:outline-none\"\r\n                       />\r\n                       <span onClick={()=>{setAdd(true);setName(\"Variant\");}}\r\n                             className=\"px-2 text-lg font-bold text-blue-500 border-2 border-gray-300 rounded-sm cursor-pointer hover:bg-gray-100\">+</span>\r\n                       {searchVariant && (\r\n                         <div className=\"absolute z-50 w-full overflow-y-auto bg-white border rounded-lg shadow-lg sm:w-96 max-h-60 top-12\">\r\n                           <ul>\r\n                             {options.variants\r\n                               .filter(v=>v.variantName.toLowerCase().includes(searchVariant.toLowerCase()))\r\n                               .map(v=>(\r\n                                 <li key={v._id}\r\n                                     className=\"p-2 cursor-pointer hover:bg-gray-100\"\r\n                                     onClick={()=>setSearchVariant(v.variantName)}>\r\n                                   {v.variantName}\r\n                                 </li>\r\n                               ))}\r\n                           </ul>\r\n                         </div>\r\n                       )}\r\n                     </div>\r\n   \r\n                     {/* table */}\r\n                     <div className=\"overflow-x-auto\">\r\n                       <table className=\"min-w-full border border-collapse\">\r\n                         <thead>\r\n                           <tr className=\"text-sm bg-gray-300\">\r\n                             <th className=\"p-2 border\">Variant</th>\r\n                             <th className=\"p-2 border\">SKU</th>\r\n                             <th className=\"p-2 border\">HSN</th>\r\n                             <th className=\"p-2 border\">Barcodes</th>\r\n                             <th className=\"p-2 border\">Price</th>\r\n                             <th className=\"p-2 border\">Purchase</th>\r\n                             <th className=\"p-2 border\">Profit %</th>\r\n                             <th className=\"p-2 border\">Sales</th>\r\n                             <th className=\"p-2 border\">MRP</th>\r\n                             <th className=\"p-2 border\">Opening</th>\r\n                             <th className=\"p-2 border\">Policy</th>\r\n                             <th className=\"p-2 border\">Req</th>\r\n                             <th className=\"p-2 border\">Free</th>\r\n                             <th className=\"p-2 border\">Action</th>\r\n                           </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                           {allvariants.map((v, idx)=>(\r\n                             <tr key={idx} className=\"text-sm text-center\">\r\n                               <td className=\"p-2 border\">\r\n                                 {v.variantName || v.variantId?.variantName}\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input\r\n                                   name=\"sku\"\r\n                                   value={v.sku}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   className=\"w-full px-1 py-1 text-center border\"\r\n                                   placeholder=\"Optional\"\r\n                                 />\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input\r\n                                   name=\"hsn\"\r\n                                   value={v.hsn}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   className=\"w-full px-1 py-1 text-center border\"\r\n                                   placeholder=\"Optional\"\r\n                                 />\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <Scanner\r\n                                   formData={{ barcodes:v.barcodes||[] }}\r\n                                   fieldName=\"barcodes\"\r\n                                   setFormData={(upd)=>{\r\n                                     const newBC = typeof upd===\"function\" ? upd({barcodes:v.barcodes}).barcodes : upd.barcodes;\r\n                                     syncVariantArrays(arr=>arr.map(varr=>\r\n                                       String(varr.variantId)===String(v.variantId)\r\n                                         ? { ...varr, barcodes:newBC }\r\n                                         : varr));\r\n                                   }}\r\n                                 />\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input\r\n                                   required name=\"price\" type=\"number\" min=\"0\"\r\n                                   value={v.price}\r\n                                   onChange={(e)=>{handleVariantField(e,v.variantId); handleVariantPrice(e,v.variantId);}}\r\n                                   className=\"w-full px-1 py-1 text-center border-2 border-orange-300\"\r\n                                 />\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input required name=\"purchasePrice\" type=\"number\" min=\"0\"\r\n                                   value={v.purchasePrice}\r\n                                   onChange={(e)=>{handleVariantField(e,v.variantId); handleVariantPrice(e,v.variantId);}}\r\n                                   className=\"w-full px-1 py-1 text-center border-2 border-orange-300\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input required name=\"profitMargin\" type=\"number\" min=\"0\"\r\n                                   value={v.profitMargin}\r\n                                   onChange={(e)=>{handleVariantField(e,v.variantId); handleVariantPrice(e,v.variantId);}}\r\n                                   className=\"w-full px-1 py-1 text-center border-2 border-orange-300\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input required name=\"salesPrice\" type=\"number\" min=\"0\"\r\n                                   value={v.salesPrice}\r\n                                   onChange={(e)=>{handleVariantField(e,v.variantId); handleVariantPrice(e,v.variantId);}}\r\n                                   className=\"w-full px-1 py-1 text-center border-2 border-orange-300\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input name=\"mrp\" type=\"number\" min=\"0\"\r\n                                   value={v.mrp}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   className=\"w-full px-1 py-1 text-center border\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input name=\"openingStock\" type=\"number\" min=\"0\"\r\n                                   value={v.openingStock}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   className=\"w-full px-1 py-1 text-center border\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <select\r\n                                   name=\"discountPolicy\"\r\n                                   value={v.discountPolicy}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   className=\"w-full px-1 py-1 text-center border\"\r\n                                 >\r\n                                   <option value=\"None\">None</option>\r\n                                   <option value=\"BuyXGetY\">Buy X Get Y</option>\r\n                                 </select>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input name=\"requiredQuantity\" type=\"number\" min=\"0\"\r\n                                   value={v.requiredQuantity}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   disabled={v.discountPolicy!==\"BuyXGetY\"}\r\n                                   className=\"w-full px-1 py-1 text-center border\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <input name=\"freeQuantity\" type=\"number\" min=\"0\"\r\n                                   value={v.freeQuantity}\r\n                                   onChange={(e)=>handleVariantField(e,v.variantId)}\r\n                                   disabled={v.discountPolicy!==\"BuyXGetY\"}\r\n                                   className=\"w-full px-1 py-1 text-center border\"/>\r\n                               </td>\r\n                               <td className=\"p-2 border\">\r\n                                 <button type=\"button\"\r\n                                   onClick={()=>removeVariant(v.variantId)}\r\n                                   className=\"px-2 py-1 text-white bg-red-600 rounded hover:bg-red-700\">\r\n                                   <FaTrash/>\r\n                                 </button>\r\n                               </td>\r\n                             </tr>\r\n                           ))}\r\n                         </tbody>\r\n                       </table>\r\n                     </div>\r\n                   </div>\r\n                 )}\r\n   \r\n                 {/* Submit / Close */}\r\n                 <div className=\"flex flex-col gap-2 sm:flex-row\">\r\n                   <Button type=\"submit\"\r\n                     className=\"w-full text-white bg-green-600 rounded hover:bg-green-700\"\r\n                     text={id ? \"Update\" : \"Save\"} />\r\n                   <Button text=\"Close\"\r\n                     className=\"w-full text-white bg-orange-500 rounded hover:bg-orange-600\"\r\n                     onClick={()=>Navigate(\"/item-list\")}/>\r\n                 </div>\r\n               </div>\r\n             </form>\r\n             {/* ╚══════════════════  FORM  ══════════════════╝ */}\r\n           </div>\r\n         </div>\r\n       </div>\r\n     );\r\n   }\r\n   ","import { useEffect, useRef, useState } from \"react\";\r\nimport Input from \"../contact/Input\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBarcode } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst addUnique = (arr = [], code = \"\") => {\r\n  const trimmed = code.trim();\r\n  return trimmed && !arr.includes(trimmed) ? [...arr, trimmed] : arr;\r\n};\r\n\r\n\r\nconst removeAt = (arr = [], i) => arr.filter((_, idx) => idx !== i);\r\n\r\n\r\n\r\nconst Scanner = ({ formData = {}, setFormData, fieldName = \"barcodes\" }) => {\r\n\r\n  const [scanning, setScanning] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const videoRef       = useRef(null);\r\n  const codeReaderRef  = useRef(null);\r\n\r\n  const barcodes = formData[fieldName] || [];\r\n\r\n  const pushCode = (code) =>\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [fieldName]: addUnique(prev[fieldName], code),\r\n    }));\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    let value = e.target.value;\r\n\r\n  \r\n    if (value.endsWith(\",\")) {\r\n      pushCode(value.slice(0, -1));\r\n      value = \"\";\r\n    }\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      pushCode(inputValue);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    pushCode(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n\r\n\r\n  const handleDelete = (idx) =>\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [fieldName]: removeAt(prev[fieldName], idx),\r\n    }));\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!scanning) return;\r\n\r\n    const stopScanner = () => {\r\n      videoRef.current?.srcObject?.getTracks().forEach((t) => t.stop());\r\n      codeReaderRef.current?.reset?.();\r\n      setScanning(false);\r\n    };\r\n\r\n    const startScanner = async () => {\r\n      const codeReader = new BrowserMultiFormatReader();\r\n      codeReaderRef.current = codeReader;\r\n\r\n      const decode = (facingMode) =>\r\n        codeReader.decodeFromConstraints(\r\n          { video: { facingMode } },\r\n          videoRef.current,\r\n          (result, err) => {\r\n            if (result) {\r\n              pushCode(result.getText());\r\n              window.navigator?.vibrate?.(160);\r\n              try {\r\n                new Audio(\"/beep.mp3\").play();\r\n              } catch {}\r\n              stopScanner();\r\n            }\r\n\r\n            if (err && err.name !== \"NotFoundException\")\r\n              console.error(\"Scan error:\", err);\r\n          }\r\n        );\r\n\r\n      try {\r\n        await decode({ exact: \"environment\" });   // back cam first\r\n      } catch {\r\n        try {\r\n          await decode(\"user\");                   // fallback front cam\r\n        } catch (e) {\r\n          console.error(\"Camera error:\", e);\r\n          stopScanner();\r\n        }\r\n      }\r\n    };\r\n\r\n    startScanner();\r\n\r\n\r\n    return () => stopScanner();\r\n  }, [scanning]); \r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-start w-full\">\r\n      {/* text input + scan button */}\r\n      <div className=\"flex items-start w-full\">\r\n        <Input\r\n          label=\"Barcodes\"\r\n          placeholder=\"Type or scan – comma or Enter to save\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          onBlur={handleBlur}\r\n          div_class=\"flex flex-col w-full\"\r\n          className=\"w-full px-4 py-2 mt-1 text-sm text-gray-800 bg-white\r\n                     border-2 border-gray-300 rounded-l-md focus:border-blue-600\"\r\n          label_class=\"text-sm font-semibold\"\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faBarcode}\r\n          title=\"Scan barcode\"\r\n          onClick={() => setScanning(true)}\r\n          className=\"px-3 mt-4 py-[10px] text-gray-800 bg-gray-100 border-2\r\n                     border-l-0 border-gray-300 rounded-r-md cursor-pointer\"\r\n        />\r\n      </div>\r\n\r\n      {/* chip list with delete buttons */}\r\n      {barcodes.length > 0 && (\r\n        <div className=\"flex flex-wrap gap-2 mt-2\">\r\n          {barcodes.map((code, idx) => (\r\n            <span\r\n              key={idx}\r\n              className=\"flex items-center px-2 py-1 text-xs bg-gray-200 rounded-full\"\r\n            >\r\n              {code}\r\n              <button\r\n                type=\"button\"\r\n                className=\"ml-1 text-red-600 hover:text-red-800 focus:outline-none\"\r\n                onClick={() => handleDelete(idx)}\r\n              >\r\n                ×\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* full-screen scanner modal */}\r\n      {scanning && (\r\n        <div className=\"absolute inset-0 z-50 flex flex-col items-center\r\n                        justify-center bg-black bg-opacity-50\">\r\n          <div className=\"relative overflow-hidden border-4 border-white\r\n                          rounded-lg shadow-xl w-72 h-72\">\r\n            <video\r\n              ref={videoRef}\r\n              className=\"absolute object-cover w-full h-full\"\r\n              autoPlay muted playsInline\r\n            />\r\n            <div className=\"absolute w-full h-1 bg-red-500 animate-scan\" />\r\n          </div>\r\n          <button\r\n            onClick={() => setScanning(false)}\r\n            className=\"px-4 py-2 mt-6 text-white bg-red-600 rounded hover:bg-red-700\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* ---------- sensible defaults ----------------------------------- */\r\nScanner.defaultProps = {\r\n  formData: { barcodes: [] },\r\n  setFormData: () => {},\r\n  fieldName: \"barcodes\",\r\n};\r\n\r\nexport default Scanner;\r\n","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","Input","_ref","id","type","label_class","label","placeholder","div_class","props","ID","useId","htmlFor","Pop","add","setAdd","category","options","setOptions","fetchTax","fetchUnits","fetchBrands","fetchVariants","newOption","setNewOption","name","description","taxPercentage","status","loading","setLoading","error","setError","handleChange","e","value","target","prev","onClick","onSubmit","async","preventDefault","token","localStorage","getItem","Error","response","axios","post","headers","Authorization","data","_id","taxName","Number","unitName","brandName","variantName","alert","err","_err$response","_err$response$data","errorMessage","message","console","FaTimes","onChange","required","min","step","disabled","AddItem","selectedFiles","setSelectedFiles","searchParams","useSearchParams","get","Navigate","useNavigate","setName","searchVariant","setSearchVariant","allvariants","setAllVariants","formData","setFormData","alertQuantity","barcodes","brand","subSubCategory","discount","discountType","discountPolicy","requiredQuantity","freeQuantity","expiryDate","itemCode","itemGroup","itemName","openingStock","subCategory","tax","taxType","unit","warehouse","variants","sku","hsn","priceWithoutTax","purchasePrice","salesPrice","mrp","profitMargin","sellerPoints","isOnline","subsubCategory","discounttype","generateItemCode","lastItemCode","m","exec","String","parseInt","padStart","length","num","includes","handleSelectChange","field","opt","p","handlePrice","newSales","Math","round","cost","syncVariantArrays","updater","handleVariantField","newVal","Array","isArray","arr","map","v","variantId","handleVariantPrice","upd","price","useEffect","addvariant","found","find","toLowerCase","newVar","auth","fetchSimple","url","key","mapfn","fetchInitData","Promise","all","d","x","filter","w","warehouseName","then","it","last","reverse","test","lastCode","fetchLastItemCode","window","innerWidth","variantPayload","NavLink","to","FaTachometerAlt","_ref3","payload","body","FormData","Object","entries","forEach","_ref2","undefined","append","JSON","stringify","item","idx","file","method","saveItem","readOnly","Select","o","_formData$brand","_formData$category","_formData$subCategory","_formData$subSubCateg","_formData$unit","Scanner","fieldName","multiple","accept","newFiles","from","files","size","index","toFixed","_","i","FaTrash","_Fragment","_formData$tax","Date","toISOString","split","_formData$warehouse","_formData$tax2","FaSearch","_v$variantId","newBC","varr","removeVariant","Button","text","addUnique","arguments","trimmed","trim","removeAt","scanning","setScanning","inputValue","setInputValue","videoRef","useRef","codeReaderRef","pushCode","code","stopScanner","_videoRef$current","_videoRef$current$src","_codeReaderRef$curren","_codeReaderRef$curren2","current","srcObject","getTracks","t","stop","reset","call","codeReader","BrowserMultiFormatReader","decode","facingMode","decodeFromConstraints","video","result","_window$navigator","_window$navigator$vib","getText","navigator","vibrate","Audio","play","exact","startScanner","endsWith","slice","onKeyDown","onBlur","handleBlur","FontAwesomeIcon","icon","faBarcode","title","handleDelete","ref","autoPlay","muted","playsInline","defaultProps","_typeof","Symbol","iterator","constructor","prototype"],"sourceRoot":""}