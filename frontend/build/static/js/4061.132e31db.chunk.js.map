{"version":3,"file":"static/js/4061.132e31db.chunk.js","mappings":"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","sources":["Loading.jsx","components/Accounts/AddMoneyTransfer.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","// src/pages/AddMoneyTransfer.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AddMoneyTransfer() {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(window.innerWidth >= 768);\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const editId = searchParams.get(\"id\");\r\n\r\n  // 1) Global loading & form state\r\n  const [loading, setLoading] = useState(false);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [debitOptions, setDebitOptions] = useState([]);\r\n  const [storeParent, setStoreParent] = useState(null);\r\n\r\n  const [formData, setFormData] = useState({\r\n    transferDate: new Date().toLocaleDateString('en-CA'),\r\n    transferCode: \"\",\r\n    debitAccount: \"\",\r\n    creditAccount: \"\",\r\n    amount: \"\",\r\n    referenceNo: \"\",\r\n    note: \"\",\r\n  });\r\n\r\n  // Bearer header\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers = { Authorization: `Bearer ${token}` };\r\n\r\n  // Collapse sidebar on small screens\r\n  useEffect(() => {\r\n    const handleResize = () => setSidebarOpen(window.innerWidth >= 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // 2) Fetch ALL accounts once\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"api/accounts\", { headers })\r\n      .then(res => setAccounts(res.data.data || []))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  // 3) Load store’s parentAccount → seed storeParent + creditAccount\r\n  useEffect(() => {\r\n    const storeId = localStorage.getItem(\"storeId\");\r\n    if (!storeId) return;\r\n\r\n    // If you only have the \"get all stores\" endpoint:\r\n    axios\r\n      .get(\"admin/store/add/store\", { headers })\r\n      .then(res => {\r\n        const allStores = res.data.result || [];\r\n        const store = allStores.find(s => s._id === storeId);\r\n        if (!store) return;\r\n        const pid =\r\n          typeof store.storeAccount === \"string\"\r\n            ? store.storeAccount\r\n            : store.storeAccount?._id;\r\n        setStoreParent(pid);\r\n        setFormData(f => ({ ...f, creditAccount: pid }));\r\n      })\r\n      .catch(console.error);\r\n\r\n    // — Or, if you have GET /api/stores/:id:\r\n    // axios.get(`api/stores/${storeId}`, { headers })\r\n    //   .then(res => {\r\n    //     const store = res.data.data;\r\n    //     const pid = typeof store.storeAccount === \"string\"\r\n    //       ? store.storeAccount\r\n    //       : store.storeAccount?._id;\r\n    //     setStoreParent(pid);\r\n    //     setFormData(f => ({ ...f, creditAccount: pid }));\r\n    //   })\r\n    //   .catch(console.error);\r\n  }, []);\r\n\r\n  // 4) Filter debitOptions whenever accounts or storeParent change\r\n  useEffect(() => {\r\n    if (!storeParent || accounts.length === 0) return;\r\n  \r\n    const mine = accounts.filter(a => {\r\n      // normalize whatever shape parentAccount is\r\n      const pid = typeof a.parentAccount === \"string\"\r\n        ? a.parentAccount\r\n        : a.parentAccount?._id;\r\n      return pid === storeParent;\r\n    });\r\n  \r\n    setDebitOptions(\r\n      mine.map(a => ({\r\n        label: `${a.accountNumber} – ${a.accountName}`,\r\n        value: a._id\r\n      }))\r\n    );\r\n  }, [storeParent, accounts]);\r\n  \r\n\r\n  // 5) If editing, load existing transfer\r\n  useEffect(() => {\r\n    if (!editId) return;\r\n    setLoading(true);\r\n    axios\r\n      .get(\"api/money-transfers\", { headers })\r\n      .then(res => {\r\n        const found = res.data.data.find(t => t._id === editId);\r\n        if (found) {\r\n          setFormData({\r\n            transferDate: new Date(found.transferDate)\r\n              .toISOString()\r\n              .split(\"T\")[0],\r\n            transferCode: found.transferCode,\r\n            debitAccount: found.debitAccount._id,\r\n            creditAccount: found.creditAccount._id,\r\n            amount: found.amount,\r\n            referenceNo: found.referenceNo || \"\",\r\n            note: found.note || \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => setLoading(false));\r\n  }, [editId]);\r\n\r\n  // 6) Derive credit account label\r\n  const creditAcct = accounts.find(a => a._id === formData.creditAccount);\r\n  const creditLabel = creditAcct\r\n    ? `${creditAcct.accountNumber} – ${creditAcct.accountName}`\r\n    : \"Loading…\";\r\n\r\n  // 7) Handlers\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(f => ({ ...f, [name]: value }));\r\n  };\r\n  const handleSelect = (field, sel) => {\r\n    setFormData(f => ({ ...f, [field]: sel ? sel.value : \"\" }));\r\n  };\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      if (!token) throw new Error(\"Not logged in\");\r\n      const url = editId\r\n        ? `api/money-transfers/${editId}`\r\n        : \"api/money-transfers\";\r\n      const method = editId ? \"put\" : \"post\";\r\n      await axios[method](url, formData, { headers: { ...headers, \"Content-Type\": \"application/json\" } });\r\n      alert(editId ? \"Updated!\" : \"Created!\");\r\n      navigate(\"/money-transfer-list\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleClose = () => navigate(\"/dashboard\");\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        <div className=\"flex-1 p-4 bg-gray-100 overflow-auto\">\r\n          <div className=\"bg-white p-6 rounded shadow\">\r\n            <h1 className=\"text-2xl font-semibold mb-4\">\r\n              {editId ? \"Edit\" : \"New\"} Money Transfer\r\n            </h1>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              {/* Row 1 */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block font-medium\">Transfer Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"transferDate\"\r\n                    value={formData.transferDate}\r\n                    onChange={handleChange}\r\n                    className=\"w-full border p-2 rounded\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block font-medium\">Transfer Code</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"transferCode\"\r\n                    value={formData.transferCode}\r\n                    onChange={handleChange}\r\n                    className=\"w-full border p-2 rounded\"\r\n                    placeholder=\"e.g. MT1001\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Row 2 */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block font-medium\">Debit Account</label>\r\n                  <Select\r\n                    options={debitOptions}\r\n                    value={debitOptions.find(o => o.value === formData.debitAccount) || null}\r\n                    onChange={sel => handleSelect(\"debitAccount\", sel)}\r\n                    placeholder=\"— choose debit account —\"\r\n                    isClearable={false}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block font-medium\">Credit Account</label>\r\n                  <div className=\"p-2 border rounded bg-gray-100\">\r\n                    {creditLabel}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Row 3 */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block font-medium\">Amount</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"amount\"\r\n                    min=\"0\"\r\n                    value={formData.amount}\r\n                    onChange={handleChange}\r\n                    className=\"w-full border p-2 rounded\"\r\n                    placeholder=\"0.00\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block font-medium\">Reference No</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"referenceNo\"\r\n                    value={formData.referenceNo}\r\n                    onChange={handleChange}\r\n                    className=\"w-full border p-2 rounded\"\r\n                    placeholder=\"Optional\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Row 4 */}\r\n              <div>\r\n                <label className=\"block font-medium\">Note</label>\r\n                <textarea\r\n                  name=\"note\"\r\n                  rows={2}\r\n                  value={formData.note}\r\n                  onChange={handleChange}\r\n                  className=\"w-full border p-2 rounded\"\r\n                  placeholder=\"Optional\"\r\n                />\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div className=\"flex gap-4\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n                >\r\n                  {editId ? \"Update\" : \"Save\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-6 py-2 bg-orange-500 text-white rounded hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","AddMoneyTransfer","window","innerWidth","navigate","useNavigate","searchParams","useSearchParams","editId","get","loading","setLoading","accounts","setAccounts","debitOptions","setDebitOptions","storeParent","setStoreParent","formData","setFormData","transferDate","Date","toLocaleDateString","transferCode","debitAccount","creditAccount","amount","referenceNo","note","token","localStorage","getItem","headers","Authorization","useEffect","handleResize","addEventListener","removeEventListener","axios","then","res","data","catch","console","error","storeId","_store$storeAccount","store","result","find","s","_id","pid","storeAccount","f","length","mine","filter","a","_a$parentAccount","parentAccount","map","label","accountNumber","accountName","value","found","t","toISOString","split","finally","creditAcct","creditLabel","handleChange","e","name","target","onSubmit","async","preventDefault","Error","url","method","alert","err","_err$response","_err$response$data","response","message","type","onChange","required","placeholder","Select","options","o","sel","handleSelect","field","isClearable","min","rows","onClick","handleClose","_typeof","Symbol","iterator","constructor","prototype"],"sourceRoot":""}