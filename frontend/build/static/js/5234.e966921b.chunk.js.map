{"version":3,"file":"static/js/5234.e966921b.chunk.js","mappings":"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","sources":["Loading.jsx","components/Expenses/AddExpenseCategory.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\nfunction AddExpenseCategory() {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const id = searchParams.get(\"id\"); // if present, we're editing\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Form data for Expense Category\r\n  const [formData, setFormData] = useState({\r\n    categoryName: \"\",\r\n    description: \"\",\r\n    status: \"Active\",\r\n  });\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  // If editing, fetch the expense category details\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchExpenseCategory = async () => {\r\n        setLoading(true);\r\n        try {\r\n          const res = await axios.get(\r\n            `api/expense-categories/${id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n            }\r\n          );\r\n          const data = res.data.data;\r\n          setFormData({\r\n            categoryName: data.categoryName || \"\",\r\n            description: data.description || \"\",\r\n            status: data.status || \"Active\",\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching expense category:\", error.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchExpenseCategory();\r\n    }\r\n  }, [id]);\r\n\r\n  // Handle form field changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Submit the form to create or update an expense category\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      if (id) {\r\n        // Update mode\r\n        await axios.put(\r\n          `api/expense-categories/${id}`,\r\n          formData,\r\n          {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n          }\r\n        );\r\n        alert(\"Expense Category updated successfully!\");\r\n      } else {\r\n        // Create mode\r\n        await axios.post(\r\n          \"api/expense-categories\",\r\n          formData,\r\n          {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n          }\r\n        );\r\n        alert(\"Expense Category created successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting expense category:\", error.message);\r\n      alert(\"Error submitting expense category\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Close the form without saving\r\n  const handleClose = () => {\r\n    navigate(\"/expense-category-list\");\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      {/* Main Layout: Sidebar & Content */}\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className={`flex-grow p-4  transition-all duration-300 `}>\r\n          {/* Header with Breadcrumbs */}\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-4 bg-white rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-baseline gap-2 sm:flex-row\">\r\n              <h1 className=\"text-sm font-semibold text-gray-800\">\r\n                {id ? \"Edit Expense Category\" : \"Add Expense Category\"}\r\n              </h1>\r\n              <span className=\"text-sm text-gray-600\">\r\n                {id ? \"Edit Expense Category\" : \"Create Expense Category\"}\r\n              </span>\r\n            </div>\r\n            <nav className=\"flex items-center text-sm text-gray-500\">\r\n              <a href=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-2\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2 \" />\r\n              <a href=\"/expense-category-list\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                Expense Category List\r\n              </a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Form Container */}\r\n          <div className=\"p-4 bg-white border-t-4 rounded-md shadow-md border-cyan-500\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                {/* Category Name */}\r\n                <div>\r\n                  <label className=\"block mb-1 font-semibold\">Category Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"categoryName\"\r\n                    value={formData.categoryName}\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                    required\r\n                  />\r\n                </div>\r\n                {/* Status */}\r\n                <div>\r\n                  <label className=\"block mb-1 font-semibold\">Status</label>\r\n                  <select\r\n                    name=\"status\"\r\n                    value={formData.status}\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                    required\r\n                  >\r\n                    <option value=\"Active\">Active</option>\r\n                    <option value=\"Inactive\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n                {/* Description */}\r\n                <div className=\"md:col-span-2\">\r\n                  <label className=\"block mb-1 font-semibold\">Description</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    value={formData.description}\r\n                    onChange={handleChange}\r\n                    rows=\"4\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {/* Form Buttons */}\r\n              <div className=\"flex justify-end mt-4 space-x-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 font-semibold text-white bg-green-500 rounded-md shadow hover:bg-green-600\"\r\n                >\r\n                  {id ? \"Update Category\" : \"Create Category\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-6 py-2 font-semibold text-white bg-orange-500 rounded-md shadow hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddExpenseCategory;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","navigate","useNavigate","searchParams","useSearchParams","id","get","loading","setLoading","formData","setFormData","categoryName","description","status","useEffect","window","innerWidth","async","data","axios","headers","Authorization","localStorage","getItem","error","console","message","fetchExpenseCategory","handleChange","e","target","name","value","href","FaTachometerAlt","BiChevronRight","onSubmit","preventDefault","put","alert","post","type","onChange","required","rows","onClick","handleClose"],"sourceRoot":""}