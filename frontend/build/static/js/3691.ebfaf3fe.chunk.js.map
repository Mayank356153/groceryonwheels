{"version":3,"file":"static/js/3691.ebfaf3fe.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/BrandForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState,useEffect } from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSearchParams } from 'react-router-dom';\r\nconst BrandForm = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\nconst[loading,setLoading]=useState(false)\r\n  const Navigate=useNavigate()\r\n    const [searchParams] = useSearchParams();\r\n     const id=searchParams.get(\"id\")\r\n   const[formData,setFormData]=useState({\r\n    brandName:\"\",\r\n    description:\"\",\r\n   })\r\n    useEffect(()=>{\r\n       if(window.innerWidth < 768){\r\n         setSidebarOpen(false)\r\n       }\r\n     },[])\r\n const fetchCategory = async () => {\r\n  setLoading(true)\r\n  try {\r\n    const response = await axios.get('api/brands', {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      }\r\n    });\r\n\r\n  console.log(response.data)\r\n   const updateBrand=response.data.data.find((item)=>item._id===id)\r\n   setFormData(updateBrand)\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\nuseEffect(()=>{\r\n  if(id)\r\n  fetchCategory()\r\n},[id])\r\n\r\n\r\nconst handleChange=(e)=>{\r\n  const {name,value}=e.target\r\n  setFormData((prev)=>({...prev,[name]:value}))\r\n}\r\nconst postData = async () => {\r\n  try {\r\n    console.log(\"Sending FormData:\", formData);\r\n    const response = await axios.post(\r\n      \"api/brands\",\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\", // Change Content-Type\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"Response:\", response.data);\r\n    alert(\"Brand Added Successfully\");\r\n  } catch (err) {\r\n    console.error(\"Error:\", err.response?.data || err.message);\r\n    alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n  }\r\n};\r\n\r\n         \r\nconst updateData = async () => {\r\n  setLoading(true)\r\n      try {\r\n        const response = await axios.put(\r\n          `api/brands/${id}`,\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\", \r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"Response:\", response.data);\r\n        alert(\" Update Successfully\");\r\n      } catch (err) {\r\n        console.error(\"Error:\", err.response?.data || err.message);\r\n        alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n      }\r\n      finally{\r\n          setLoading(false)\r\n          Navigate('/brand-list')\r\n      }\r\n      \r\n    };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(id) updateData()\r\n      else postData();\r\n     setFormData({\r\n       brandName:\"\",\r\n       description:\"\",\r\n     }) \r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-col flex-grow md:flex-row\">\r\n        {/* Sidebar */}\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        {/* Content */}\r\n        <div className={`flex-grow p-4  transition-all duration-30 bg-gray-100`}>\r\n          <div className=\"w-full mt-14\">\r\n            <div className=\"w-full\">\r\n                 {/* Header Section */}\r\n                       <header className=\"flex flex-col items-center justify-between mb-6 md:flex-row\">\r\n                       \r\n                            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n                                <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Brand</h1>\r\n                                <span className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Brand</span>\r\n                              </div>\r\n                         <nav className=\"flex flex-wrap mt-2 text-sm text-gray-600\">\r\n                           <a\r\n                             href=\"/dashboard\"\r\n                             className=\"flex items-center text-gray-400 no-underline hover:text-cyan-600\"\r\n                           >\r\n                             <FaTachometerAlt className=\"mr-2 text-gray-500\" /> Home\r\n                           </a>\r\n                           <BiChevronRight className=\" text-gray-400 mt-1.5\" />\r\n                           <a href=\"/brands-list\" className=\"text-gray-400 no-underline hover:text-cyan-600\">\r\n                           Brand List\r\n                           </a>\r\n                           <BiChevronRight className=\" text-gray-400 mt-1.5\" />\r\n                           <a href=\"#\" className=\"text-gray-400 no-underline hover:text-cyan-600\">\r\n                           Brand\r\n                           </a>\r\n                         </nav>\r\n                       </header>\r\n              <form onSubmit={handleSubmit} className=\"p-2 border-t-4 rounded shadow border-cyan-500\" >\r\n                <p className=\"mb-3 text-lg font-medium text-gray-700\">Please Enter Valid Data</p>\r\n\r\n                <div className=\"flex gap-2 mb-2\">\r\n                  <label className=\"block font-semibold text-gray-700\">\r\n                    Brand Name<span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.brandName}\r\n                    onChange={handleChange}\r\n                    name=\"brandName\"\r\n                    className=\"w-full px-2 py-1 mt-1 border border-gray-300 rounded md:w-1/2 focus:ring-2 focus:ring-blue-400 focus:outline-none\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 mb-2\">\r\n                  <label className=\"block font-semibold text-gray-700\">Description</label>\r\n                  <textarea\r\n                    value={formData.description}\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-2 py-1 mt-1 border border-gray-300 rounded md:w-1/2 focus:ring-2 focus:ring-blue-400 focus:outline-none h-14\"\r\n                    rows=\"3\"\r\n                  ></textarea>\r\n                </div>\r\n\r\n                <div className=\"flex justify-center gap-2 mt-6\">\r\n                  <button type=\"submit\" className=\"px-12 py-2 text-white bg-green-500 hover:bg-green-600\">\r\n                    {id?\"Update\":\"Save\"}\r\n                  </button>\r\n                  <button type=\"button\" className=\"px-12 py-2 text-white bg-orange-500 hover:bg-orange-600\">\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","BrandForm","loading","setLoading","Navigate","useNavigate","searchParams","useSearchParams","id","get","formData","setFormData","brandName","description","useEffect","window","innerWidth","async","response","axios","headers","Authorization","localStorage","getItem","console","log","data","updateBrand","find","item","_id","err","message","fetchCategory","handleChange","e","name","value","target","prev","href","FaTachometerAlt","BiChevronRight","onSubmit","preventDefault","put","alert","_err$response3","_err$response4","_err$response4$data","error","updateData","post","_err$response","_err$response2","_err$response2$data","postData","type","onChange","required","rows"],"sourceRoot":""}