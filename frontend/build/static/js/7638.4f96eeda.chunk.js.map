{"version":3,"file":"static/js/7638.4f96eeda.chunk.js","mappings":"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","sources":["Loading.jsx","components/Expenses/ExpensesList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from 'react';\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { BiChevronRight } from 'react-icons/bi';\r\nimport { FaTachometerAlt ,FaEdit,FaTrash } from 'react-icons/fa';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst ExpenseList = () => {\r\n    const navigate = useNavigate()\r\n    const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n    const[searchTerm,setSearchTerm]=useState(\"\")\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n    const [expenses,setExpenses] = useState([]);\r\n    // at top of component\r\nconst [localPermissions, setLocalPermissions] = useState([]);\r\nuseEffect(() => {\r\n  const stored = localStorage.getItem(\"permissions\");\r\n  if (stored) setLocalPermissions(JSON.parse(stored));\r\n}, []);\r\nfunction hasPermissionFor(module, action) {\r\n  const role = (localStorage.getItem(\"role\") || \"guest\").toLowerCase();\r\n  if (role === \"admin\") return true;\r\n  return localPermissions.some(p =>\r\n    p.module.toLowerCase() === module.toLowerCase() &&\r\n    p.actions.map(a => a.toLowerCase()).includes(action.toLowerCase())\r\n  );\r\n}\r\n\r\n  const[loading,setLoading]=useState(true)\r\n    const[dropdownIndex,setDropdownIndex]=useState(null)\r\n     useEffect(()=>{\r\n        if(window.innerWidth < 768){\r\n          setSidebarOpen(false)\r\n        }\r\n      },[])\r\n    const filteredData = expenses.filter(item => \r\n        // item.customer.customerName.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n        (item.category?.name ||\"\").toLowerCase().includes(searchTerm.toLowerCase()) \r\n    );\r\n    const indexOfLastItem = currentPage * entriesPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n    const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n    const currentUsers = filteredData.slice((currentPage-1)*entriesPerPage, currentPage* entriesPerPage);\r\n    const totalAmount = currentUsers.reduce((total, exp) => total + exp.amount, 0).toFixed(2);\r\n    \r\n      const handlePageChange = (newPage) =>  {\r\n        if(newPage >=1 && newPage <=totalPages )\r\n        setCurrentPage(newPage);\r\n      }\r\n      const handleEntriesChange=(e)=>{\r\n        setEntriesPerPage(Number(e.target.value))\r\n        setCurrentPage(1)\r\n      }\r\n\r\n    const handleCopy = () => {\r\n        const data = currentUsers.map(exp => `${exp.date}, ${exp.category?.name || \"No Category\"}, ${exp.referenceNO || \"NA\"}, ${exp.expenseFor}, ${exp.amount}, ${exp.account}, ${exp.note}, ${exp.createdBy}`).join('\\n');\r\n        navigator.clipboard.writeText(data);\r\n        alert(\"Data copied to clipboard!\");\r\n    };\r\n\r\n    const handleExcelDownload = () => {\r\n        const ws = XLSX.utils.json_to_sheet(expenses);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Expenses\");\r\n        XLSX.writeFile(wb, \"expenses.xlsx\");\r\n    };\r\n\r\n    const handlePdfDownload = () => {\r\n        const doc = new jsPDF();\r\n        doc.text(\"Expenses List\", 20, 20);\r\n        const tableData = expenses.map(exp => [exp.date, exp.category?.name || \"NA\", exp.referenceNo, exp.expenseFor, exp.amount, exp.account ||\"NA\", exp.note, exp.createdBy]);\r\n        autoTable(doc, {\r\n            head: [['Date', 'Category', 'Reference No.', 'Expense for', 'Amount', 'Account', 'Note', 'Created by']],\r\n            body: tableData,\r\n        });\r\n        doc.save('expenses.pdf');\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        window.print();\r\n    };\r\n\r\n    const handleCsvDownload = () => {\r\n        const csvContent = \"data:text/csv;charset=utf-8,\" + expenses.map(exp => Object.values(exp).join(\",\")).join(\"\\n\");\r\n        const encodedUri = encodeURI(csvContent);\r\n        const link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"expenses.csv\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    const handledelete = async (e,id) => {\r\n        e.preventDefault();\r\n        const conf = window.confirm(\"Do you want to delete this supplier?\");\r\n        if (!conf) return;\r\n        \r\n        try {\r\n            setLoading(true)\r\n            const response = await fetch(`api/expenses/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            });\r\n      \r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to delete expense\");\r\n            }\r\n      \r\n            console.log(\"Expense deleted successfully!\");\r\n             fetchExpenses();\r\n            // // Update state without fetching again\r\n            // setUsers((prevUsers) => prevUsers.filter(user => user._id !== id));\r\n      \r\n        } catch (error) {\r\n            console.error(\"Error deleting purchase:\", error.message);\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    \r\n      };\r\n      \r\n    const fetchExpenses = async () => {\r\n        try {\r\n            setLoading(true)\r\n          const token = localStorage.getItem(\"token\");\r\n          const response = await axios.get(`api/expenses`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          console.log(response.data)\r\n          setExpenses(response.data.data)\r\n         \r\n        } catch (err) {\r\n          console.log(err.message);\r\n        } \r\n        finally {\r\n            setLoading(false)\r\n        }\r\n      };\r\n     useEffect(()=>{fetchExpenses()},[])\r\n     if(loading) return(<LoadingScreen/>)\r\n    return (\r\n        <div className=\"flex flex-col h-screen\">\r\n          {/* Navbar */}\r\n          <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n              {/* Main Content */}\r\n              <div className=\"flex flex-grow mt\">\r\n          \r\n                \r\n              {/* Sidebar component with open state */}\r\n              <div className=\"w-auto\">\r\n              <Sidebar isSidebarOpen={isSidebarOpen}/>\r\n              </div>\r\n                \r\n                 {/* Content */}\r\n         <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n\r\n            <header className=\"flex flex-col items-center justify-between p-4 mb-2 bg-gray-100 rounded-md shadow sm:flex-row\">\r\n                <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n                    <h1 className=\"text-sm font-semibold truncate sm:text-xl\">Expenses List</h1>\r\n                    <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Expenses</span>\r\n                </div>\r\n                <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n                    <a href=\"#\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"><FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home</a>\r\n                    <BiChevronRight className=\"mx-1 sm:mx-2\" />\r\n                    <a href=\"#\" className=\"text-gray-700 no-underline hover:text-cyan-600\">Expenses List</a>\r\n                </nav>\r\n            </header>\r\n\r\n            <div className=\"p-4 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n                <header className=\"flex items-center justify-between mb-4\">\r\n                    <div></div>\r\n                    {hasPermissionFor(\"Expenses\",\"Add\") && (\r\n                    <button className=\"px-4 py-2 text-white rounded bg-cyan-500\"onClick={()=>navigate('/add-expense')}>+ New Expense</button>\r\n                    )}\r\n                </header>\r\n\r\n                <div className=\"flex flex-col justify-between w-full mt-4 mb-4 space-y-2 lg:flex-row lg:space-y-0 lg:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage}   onChange={(e) => {\r\n                    setEntriesPerPage(Number(e.target.value));\r\n                    setCurrentPage(1);\r\n                  }}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col justify-around w-full gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-around flex-1 w-full gap-1 px-2'>\r\n                <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm md:w-auto\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full bg-white border border-gray-300\">\r\n                        <thead className=\"bg-gray-200\">\r\n                            <tr>\r\n                                <th className=\"px-4 py-2 text-sm text-left border \">Date</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Category</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Reference No.</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Expense for</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Amount</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Account</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Note</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Created by</th>\r\n                                <th className=\"px-3 py-2 text-sm text-left border\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.length === 0 ? (\r\n                                <tr>\r\n                                    <td colSpan=\"9\" className=\"py-4 text-center\">No data available in table</td>\r\n                                </tr>\r\n                            ) : (\r\n                                filteredData.slice((currentPage - 1) * entriesPerPage, currentPage * entriesPerPage).map((expense) => (\r\n                                    <tr key={expense._id} id={expense._id} className=\"hover:bg-gray-100\">\r\n                                        <td className=\"py-2 text-sm border \">{new Date(expense.date).toDateString()}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.category?.categoryName || \"No category\"}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.referenceNo}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.expenseFor}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.amount || 0}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.account?.accountName || \"N/A\"}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.note}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">{expense.creatorName || \"NA\"}</td>\r\n                                        <td className=\"px-3 py-2 text-sm border\">\r\n<button\r\n      onClick={() => {\r\n        setDropdownIndex(dropdownIndex === expense._id ? null : expense._id);\r\n      }}\r\n      className=\"px-3 py-1 text-white transition rounded bg-cyan-600 hover:bg-cyan-700\"\r\n    >\r\n      Action ▼\r\n    </button>\r\n\r\n    {dropdownIndex === expense._id && (\r\n      <div\r\n        // ref={dropdownRef}\r\n        className=\"absolute right-0 z-50 mt-2 bg-white border border-gray-200 rounded-md shadow-lg w-36 animate-fade-in\"\r\n      >\r\n        {hasPermissionFor(\"Expenses\",\"Edit\") && (\r\n          <button\r\n          className=\"flex items-center w-full px-3 py-2 text-gray-700 hover:bg-gray-100\"\r\n          onClick={() => navigate(`/add-expense?id=${expense._id}`)}\r\n        >\r\n          <FaEdit className=\"mr-2\" /> Edit\r\n        </button>\r\n        )}\r\n        {hasPermissionFor(\"Expenses\",\"Delete\") && (\r\n        <button\r\n          className=\"flex items-center w-full px-3 py-2 text-red-600 hover:bg-gray-100\"\r\n          onClick={() => handledelete(expense._id)}\r\n        >\r\n          <FaTrash className=\"mr-2\" /> Delete\r\n        </button>\r\n        )}\r\n      </div>\r\n    )}                                          </td>\r\n                                    </tr>\r\n                                ))\r\n                            )}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            {\r\n                                currentUsers.length > 0 && (\r\n                                    <tr className=\"bg-gray-200\">\r\n                                    <td colSpan=\"4\" className=\"px-4 py-2 font-bold text-right border\">Total:</td>\r\n                                    <td className=\"px-4 py-2 font-bold border\">{totalAmount}</td>\r\n                                    <td colSpan=\"4\" className=\"px-4 py-2 border\"></td>\r\n                                </tr>\r\n                                )\r\n                            }\r\n                          \r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col items-center justify-between mt-4 md:flex-row\">\r\n                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, expenses.length)} of {expenses.length} entries</span>\r\n                    <div>\r\n                        <button onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))} className=\"px-4 py-2 mr-2 text-gray-600 bg-gray-300 disabled:opacity-50\" disabled={currentPage === 1}>\r\n                            Previous\r\n                        </button>\r\n                        <button onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))} className=\"px-4 py-2 text-gray-600 bg-gray-300 disabled:opacity-50\" disabled={currentPage === totalPages}>\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseList;"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","ExpenseList","navigate","useNavigate","entriesPerPage","setEntriesPerPage","searchTerm","setSearchTerm","currentPage","setCurrentPage","expenses","setExpenses","localPermissions","setLocalPermissions","hasPermissionFor","module","action","localStorage","getItem","toLowerCase","some","p","actions","map","a","includes","useEffect","stored","JSON","parse","loading","setLoading","dropdownIndex","setDropdownIndex","window","innerWidth","filteredData","filter","item","_item$category","category","name","totalPages","Math","ceil","length","currentUsers","slice","totalAmount","reduce","total","exp","amount","toFixed","fetchExpenses","async","token","response","axios","get","headers","Authorization","console","log","data","err","message","href","FaTachometerAlt","BiChevronRight","onClick","value","onChange","e","Number","target","handleCopy","_exp$category","date","referenceNO","expenseFor","account","note","createdBy","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","_exp$category2","referenceNo","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","type","placeholder","colSpan","expense","_expense$category","_expense$account","id","_id","Date","toDateString","categoryName","accountName","creatorName","FaEdit","preventDefault","confirm","fetch","method","ok","Error","error","handledelete","FaTrash","min","prev","max","disabled"],"sourceRoot":""}