{"version":3,"file":"static/js/5379.88b641d1.chunk.js","mappings":"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","sources":["Loading.jsx","components/Accounts/RiderMoneyTransfer.jsx","components/Accounts/RiderTranscationList.jsx","components/Accounts/RiderOrderView.jsx","components/Accounts/RiderAddMoney.jsx","components/Accounts/RiderAccountList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import { useState ,useEffect} from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport Select from \"react-select\"\r\nconst RiderMoneyTransfer = ({ isOpen, onClose, data,rider }) => {\r\n    const[accounts,setAccounts]=useState([])\r\n    console.log(data)\r\n\r\n    \r\n  const [formData, setFormData] = useState({\r\n       transferAccountId:\"\",\r\n       amount:\"\",\r\n       riderID:rider._id,\r\n       riderAccountId:data._id\r\n  });\r\n\r\n\r\n\r\n\r\n   const fetchAccounts = async () => {\r\n    // setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"No token found. Please log in.\");\r\n        // setLoading(false);\r\n        return;\r\n      }\r\n      // Adjust the URL if your actual endpoint differs (e.g. /api/accounts)\r\n      const response = await axios.get(\"api/accounts\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      // Assume response.data.data is the array of accounts\r\n      console.log(response.data.data || []);\r\n      const account=response.data.data.map(acc =>({\r\n        label:`${acc.accountName}-${acc.accountNumber}`,\r\n        value:acc._id\r\n      }))\r\n      setAccounts(account)\r\n    } catch (error) {\r\n      console.error(\"Error fetching accounts:\", error);\r\n      alert(\"Error fetching accounts\");\r\n    } finally {\r\n    //   setLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // On component mount, fetch the accounts\r\n  useEffect(() => {\r\n    fetchAccounts();\r\n  }, []);\r\n  \r\n \r\n\r\n  const handleSubmit =async (e) => {\r\n    e.preventDefault();\r\n   \r\n    console.log(formData)\r\n    try {\r\n      const res=await axios.post(`api/money-transfer/create`,formData,{\r\n        headers:{\r\n          Authorization:`bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      })  \r\n      console.log(res)\r\n      onClose();\r\n    } catch (error) {\r\n        console.log(\"Error in making deposit\",error.message)\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  if (!isOpen) return null;\r\n\r\n\r\n\r\n  \r\nreturn (\r\n  <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-opacity-55\">\r\n    {/* Semi-transparent overlay (optional) - remove or adjust opacity if you want completely transparent */}\r\n    <div \r\n      className=\"absolute inset-0 bg-black bg-opacity-10 backdrop-blur-[1px]\"\r\n      onClick={onClose} // Optional: close when clicking outside\r\n    ></div>\r\n    \r\n    {/* Modal container */}\r\n    <div className=\"relative w-full max-w-md bg-white border border-gray-200 rounded-lg shadow-xl\">\r\n      <div className=\"flex items-center justify-between p-4 border-b\">\r\n        <h3 className=\"text-lg font-semibold\">Money Transfer</h3>\r\n        <button \r\n          onClick={onClose}\r\n          className=\"text-gray-500 transition-colors hover:text-gray-700\"\r\n        >\r\n          <FaTimes />\r\n        </button>\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"p-6\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n            Rider Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"riderName\"\r\n            value={`${rider.firstname} ${rider.lastname}`}\r\n            readOnly\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n            Account Number\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"accountNumber\"\r\n            value={data.accountNumber}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n            Account Transfer To\r\n          </label>\r\n        <Select options={accounts} onChange={(option)=>setFormData((prev)=>({...prev,transferAccountId:option.value}))}/>\r\n        </div>\r\n\r\n         <div className=\"mb-6\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n            Transfer Amount\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"depositAmount\"\r\n            value={formData.depositAmount}\r\n            onChange={(e)=>setFormData((prev)=>({...prev,amount:Number(e.target.value)}))}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n            required\r\n            min='0'\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end space-x-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-md hover:bg-gray-200\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 text-sm font-medium text-white transition-colors rounded-md bg-cyan-600 hover:bg-cyan-700\"\r\n          >\r\n            Transfer\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n};\r\n\r\n  export default RiderMoneyTransfer","import React,{useState,useEffect} from 'react';\r\nimport { format ,subDays, startOfDay, endOfDay} from 'date-fns';\r\nimport { X ,ChevronDown, ChevronUp, Calendar} from 'react-feather';\r\nimport { jsPDF } from \"jspdf\";\r\nimport  {autoTable} from \"jspdf-autotable\";\r\n\r\nconst RiderTransactionsList = ({ transactions, setRiderTransactionsView,riderInfo }) => {\r\n   const [dateRange, setDateRange] = useState({\r\n      startDate: subDays(new Date(), 7),\r\n      endDate: new Date()\r\n    });\r\n    const [showDatePicker, setShowDatePicker] = useState(false);\r\n  const [filteredOrders, setFilteredOrders] = useState(transactions);\r\n\r\n      \r\n        useEffect(() => {\r\n          // Apply date filter whenever dateRange or viewOrders changes\r\n          if (transactions.length > 0) {\r\n            const filtered = transactions.filter(order => {\r\n              const orderDate = new Date(order.createdAt);\r\n              return (\r\n                orderDate >= startOfDay(dateRange.startDate) && \r\n                orderDate <= endOfDay(dateRange.endDate)\r\n              );\r\n            });\r\n            setFilteredOrders(filtered);\r\n          }\r\n        }, [dateRange]);\r\n\r\n   \r\n     const handleDateChange = (e, type) => {\r\n       setDateRange(prev => ({\r\n         ...prev,\r\n         [type]: new Date(e.target.value)\r\n       }));\r\n     };\r\n   \r\n     const resetDateFilter = () => {\r\n       setDateRange({\r\n         startDate: subDays(new Date(), 7),\r\n         endDate: new Date()\r\n       });\r\n     };\r\n        \r\n    \r\nconst handleExportToExcel = () => {\r\n  import('xlsx').then((XLSX) => {\r\n    // 1. Prepare rider information\r\n    const riderData = [\r\n      ['Rider Information', '', '', '', '', ''], // Extra cells for full width\r\n      ['Name:', riderInfo?.username || 'N/A'],\r\n      ['ID:', riderInfo?._id || 'N/A'],\r\n      ['Phone:', riderInfo?.mobile || 'N/A'],\r\n      ['Email:', riderInfo?.email || 'N/A'],\r\n      ['Account Number:', riderInfo?.riderAccount?.accountNumber || 'N/A'],\r\n      [], // Empty row\r\n      ['Transaction History', '', '', '', '', ''], // Section header\r\n      [], // Empty row before headers\r\n    ];\r\n\r\n    // 2. Prepare transaction data\r\n    const headers = [\r\n      'Transaction ID',\r\n      'Type',\r\n      'Amount',\r\n      'Transaction Type',\r\n      'Date',\r\n      'Status'\r\n    ];\r\n\r\n    const transactionData = filteredOrders.map(txn => [\r\n      txn.transactionId || txn._id || 'N/A', // Fallback for ID\r\n      txn.type || 'N/A',\r\n      txn.amount || 0,\r\n      txn.format || 'N/A',\r\n      txn.createdAt ? format(new Date(txn.createdAt), 'MMM dd, yyyy hh:mm a') : 'N/A',\r\n      'Completed'\r\n    ]);\r\n\r\n    // 3. Combine all data\r\n    const allData = [...riderData, headers, ...transactionData];\r\n\r\n    // 4. Create worksheet\r\n    const worksheet = XLSX.utils.aoa_to_sheet(allData);\r\n\r\n    // 5. Helper function to safely apply styles\r\n    const applyStyle = (cell, style) => {\r\n      if (!worksheet[cell]) {\r\n        worksheet[cell] = { t: 's', v: worksheet[cell]?.v || '' };\r\n      }\r\n      worksheet[cell].s = style;\r\n    };\r\n\r\n    // 6. Apply styles\r\n    // Rider info header (blue background with white text)\r\n    applyStyle('A1', {\r\n      font: { bold: true, color: { rgb: \"FFFFFF\" } },\r\n      fill: { fgColor: { rgb: \"4472C4\" } }\r\n    });\r\n\r\n    // Transaction history header (green background with white text)\r\n    applyStyle('A7', {\r\n      font: { bold: true, size: 14, color: { rgb: \"FFFFFF\" } },\r\n      fill: { fgColor: { rgb: \"70AD47\" } }\r\n    });\r\n\r\n    // Column headers (light gray background)\r\n    headers.forEach((_, i) => {\r\n      const cell = XLSX.utils.encode_cell({ r: riderData.length, c: i });\r\n      applyStyle(cell, {\r\n        font: { bold: true },\r\n        fill: { fgColor: { rgb: \"F2F2F2\" } }\r\n      });\r\n    });\r\n\r\n    // 7. Set column widths\r\n    worksheet['!cols'] = [\r\n      { wch: 24 }, // Transaction ID\r\n      { wch: 18 }, // Type\r\n      { wch: 12 }, // Amount\r\n      { wch: 18 }, // Transaction Type\r\n      { wch: 22 }, // Date\r\n      { wch: 12 }  // Status\r\n    ];\r\n\r\n    // 8. Create and save workbook\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Rider Transactions');\r\n    \r\n    const fileName = `Transactions_${riderInfo?.username?.replace(/\\s+/g, '_') || 'Rider'}_${new Date().toISOString().slice(0,10)}.xlsx`;\r\n    XLSX.writeFile(workbook, fileName);\r\n  }).catch(error => {\r\n    console.error('Error exporting to Excel:', error);\r\n    // Optionally show user feedback here\r\n    alert('Failed to export transactions. Please try again.');\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst handleExportToPDF = () => {\r\n  // Create new PDF instance\r\n  const doc = new jsPDF();\r\n   console.log(riderInfo)\r\n  // Add rider information section only if riderInfo exists\r\n  if (riderInfo) {\r\n    doc.setFontSize(16);\r\n    doc.setTextColor(40, 53, 147);\r\n    doc.text('Rider Information', 14, 20);\r\n    \r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    console.log(\"username:\", riderInfo.username);\r\nconsole.log(\"id:\", riderInfo._id);\r\nconsole.log(\"mobile:\", riderInfo.mobile);\r\nconsole.log(\"email:\", riderInfo.email);\r\n\r\n    const riderData = [\r\n      ['Name:', riderInfo.username || 'N/A'],\r\n      ['ID:', riderInfo._id || 'N/A'],\r\n      ['Phone:', riderInfo.mobile || 'N/A'],\r\n      ['Email:', riderInfo.email || 'N/A'],\r\n      ['Date Range:', `${format(dateRange.startDate, 'MMM dd, yyyy')} - ${format(dateRange.endDate, 'MMM dd, yyyy')}`]\r\n    ];\r\n    console.log(riderData)\r\n    autoTable(doc, {\r\n      startY: 25,\r\n      head: [['', '']],\r\n      body: riderData,\r\n      theme: 'grid',\r\n      headStyles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] },\r\n      styles: { fontSize: 10, cellPadding: 1 }\r\n    });\r\n  } else {\r\n    // If no riderInfo, start lower or show a message\r\n    doc.text('No rider information available', 14, 20);\r\n  }\r\n\r\n  // Calculate starting Y position for transactions\r\n  const transactionsStartY = riderInfo ? doc.lastAutoTable.finalY + 15 : 25;\r\n  \r\n  // Add transactions section header\r\n  doc.setFontSize(16);\r\n  doc.setTextColor(40, 53, 147);\r\n  doc.text('Transaction History', 14, transactionsStartY);\r\n\r\n  // Prepare transaction data with fallbacks\r\n  const transactionHeaders = [\r\n    'Transaction ID',\r\n    'Type',\r\n    'Amount',\r\n    'Transaction Type',\r\n    'Date'\r\n  ];\r\n\r\n  const transactionData = filteredOrders.length > 0 \r\n    ? filteredOrders.map(txn => [\r\n        txn.transactionId || txn._id || 'N/A',\r\n        txn.type || 'N/A',\r\n        `${txn.format === 'Debited' ? '-' : '+'}${txn.amount || 0}`,\r\n        txn.format || 'N/A',\r\n        txn.createdAt ? format(new Date(txn.createdAt), 'MMM dd, yyyy hh:mm a') : 'N/A'\r\n      ])\r\n    : [['No transactions available', '', '', '', '']]; // Fallback for empty transactions\r\n\r\n  // Add transactions table\r\n  autoTable(doc, {\r\n    startY: transactionsStartY + 10,\r\n    head: [transactionHeaders],\r\n    body: transactionData,\r\n    theme: 'grid',\r\n    headStyles: { fillColor: [40, 53, 147], textColor: [255, 255, 255] },\r\n    alternateRowStyles: { fillColor: [240, 240, 240] },\r\n    styles: { fontSize: 9, cellPadding: 3 }\r\n  });\r\n\r\n  // Generate filename with fallbacks\r\n  const riderName = riderInfo?.username ? riderInfo.username.replace(/\\s+/g, '_') : 'Rider';\r\n  const dateStamp = new Date().toISOString().slice(0, 10);\r\n  doc.save(`Transactions_${riderName}_${dateStamp}.pdf`);\r\n};\r\n  return (\r\n    \r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/30 backdrop-blur-sm\">\r\n  <div className=\"relative w-full max-w-4xl max-h-[90vh]  bg-white rounded-xl shadow-2xl\">\r\n    {/* Header */}\r\n<div className=\"sticky top-0 z-10 flex items-center justify-between p-6 bg-white border-b\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Rider Transactions History</h2>\r\n            <p className=\"text-sm text-gray-500\">\r\n              {filteredOrders.length} {filteredOrders.length === 1 ? 'transaction' : 'transactions'} found\r\n              {dateRange.startDate && dateRange.endDate && (\r\n                <span className=\"ml-2\">\r\n                  ({format(dateRange.startDate, 'MMM dd')} - {format(dateRange.endDate, 'MMM dd')})\r\n                </span>\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => setShowDatePicker(!showDatePicker)}\r\n              className=\"flex items-center gap-1 px-3 py-1 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n            >\r\n              <Calendar size={16} />\r\n              Filter Dates\r\n            </button>\r\n            <button \r\n              onClick={() => setRiderTransactionsView(false)}\r\n              className=\"p-1 text-gray-500 transition-colors rounded-full hover:bg-gray-100 hover:text-gray-700\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <X size={24} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n         {showDatePicker && (\r\n                  <div className=\"sticky z-10 p-4 border-b top-20 bg-gray-50\">\r\n                    <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={format(dateRange.startDate, 'yyyy-MM-dd')}\r\n                          onChange={(e) => handleDateChange(e, 'startDate')}\r\n                          className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">End Date</label>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={format(dateRange.endDate, 'yyyy-MM-dd')}\r\n                          onChange={(e) => handleDateChange(e, 'endDate')}\r\n                          className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex justify-end gap-2 mt-2\">\r\n                      <button\r\n                        onClick={resetDateFilter}\r\n                        className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800\"\r\n                      >\r\n                        Reset\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setShowDatePicker(false)}\r\n                        className=\"px-3 py-1 text-sm text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n                      >\r\n                        Apply\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n    {/* Content */}\r\n    <div className=\"overflow-y-auto max-h-[calc(90vh-120px)]\">\r\n      {filteredOrders.length === 0 ? (\r\n        <div className=\"flex flex-col items-center justify-center p-8 text-center\">\r\n          <div className=\"p-4 mb-4 bg-gray-100 rounded-full\">\r\n            <svg className=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-medium text-gray-900\">No transactions yet</h3>\r\n          <p className=\"mt-1 text-gray-500\">Transactions will appear here once made</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"divide-y divide-gray-100\">\r\n          {filteredOrders.map((txn) => (\r\n            <div key={txn._id} className=\"p-4 transition-colors hover:bg-gray-50/50\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className={`p-3 rounded-lg ${\r\n                    txn.format === 'Debited' ? 'bg-red-50 text-red-600' : 'bg-green-50 text-green-600'\r\n                  }`}>\r\n                    {txn.format === 'Debited' ? (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 10l7-7m0 0l7 7m-7-7v18\" />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-medium text-gray-900\">{txn.type}</p>\r\n                    <p className=\"text-sm text-gray-500\">{format(new Date(txn.createdAt), 'MMM dd, yyyy • hh:mm a')}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className={`font-medium ${\r\n                    txn.format === 'Debited' ? 'text-red-600' : 'text-green-600'\r\n                  }`}>\r\n                    {txn.format === 'Debited' ? '-' : '+'}{txn.amount.toLocaleString()}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500\">{txn.transactionId}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    {/* Footer */}\r\n    {/* <div className=\"sticky bottom-0 p-4 bg-white border-t\">\r\n      <div className=\"flex justify-between\">\r\n        {transactions.length > 0 && (\r\n          <button\r\n            onClick={handleExportToExcel}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium text-white transition-colors bg-green-600 rounded-lg hover:bg-green-700\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            Export to Excel\r\n          </button>\r\n        )}\r\n        <button\r\n          onClick={() => setRiderTransactionsView(false)}\r\n          className=\"px-4 py-2 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div> */}\r\n    \r\n<div className=\"sticky bottom-0 p-4 bg-white border-t\">\r\n  <div className=\"flex justify-between\">\r\n    <div className=\"flex gap-2\">\r\n      {transactions.length > 0 && (\r\n        <>\r\n          <button\r\n            onClick={handleExportToExcel}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium text-white transition-colors bg-green-600 rounded-lg hover:bg-green-700\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            Excel\r\n          </button>\r\n          <button\r\n            onClick={handleExportToPDF}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium text-white transition-colors bg-red-600 rounded-lg hover:bg-red-700\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            PDF\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n    <button\r\n      onClick={() => setRiderTransactionsView(false)}\r\n      className=\"px-4 py-2 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n    >\r\n      Close\r\n    </button>\r\n  </div>\r\n</div>\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default RiderTransactionsList;","\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { format, subDays, startOfDay, endOfDay } from 'date-fns';\r\nimport { X, Loader, CheckCircle, Clock, Truck, AlertCircle, ChevronDown, ChevronUp, Calendar } from 'react-feather';\r\nimport axios from 'axios';\r\nimport { jsPDF } from \"jspdf\";\r\nimport  {autoTable} from \"jspdf-autotable\";\r\n\r\nconst RiderOrderList = ({ orders, setRiderOrderView, riderInfo }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewOrders, setViewOrders] = useState([]);\r\n  const [filteredOrders, setFilteredOrders] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [expandedOrder, setExpandedOrder] = useState(null);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: subDays(new Date(), 7),\r\n    endDate: new Date()\r\n  });\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('api/order/all', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      }); \r\n      console.log(response.data.data)\r\n      const filteredOrder = response.data.data.filter(or => orders.includes(or._id));\r\n      setViewOrders(filteredOrder);\r\n      setFilteredOrders(filteredOrder); // Initialize filtered orders\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply date filter whenever dateRange or viewOrders changes\r\n    if (viewOrders.length > 0) {\r\n      const filtered = viewOrders.filter(order => {\r\n        const orderDate = new Date(order.orderTime);\r\n        return (\r\n          orderDate >= startOfDay(dateRange.startDate) && \r\n          orderDate <= endOfDay(dateRange.endDate)\r\n        );\r\n      });\r\n      setFilteredOrders(filtered);\r\n    }\r\n  }, [dateRange, viewOrders]);\r\n\r\n  const toggleOrderDetails = (orderId) => {\r\n    if (expandedOrder === orderId) {\r\n      setExpandedOrder(null);\r\n    } else {\r\n      setExpandedOrder(orderId);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'Delivered':\r\n        return <CheckCircle className=\"text-green-500\" size={18} />;\r\n      case 'Processing':\r\n        return <Clock className=\"text-blue-500\" size={18} />;\r\n      case 'Out for Delivery':\r\n        return <Truck className=\"text-orange-500\" size={18} />;\r\n      default:\r\n        return <AlertCircle className=\"text-gray-500\" size={18} />;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, type) => {\r\n    setDateRange(prev => ({\r\n      ...prev,\r\n      [type]: new Date(e.target.value)\r\n    }));\r\n  };\r\n\r\n  const resetDateFilter = () => {\r\n    setDateRange({\r\n      startDate: subDays(new Date(), 7),\r\n      endDate: new Date()\r\n    });\r\n  };\r\n\r\n  const handleExportToExcel = () => {\r\n    import('xlsx').then((XLSX) => {\r\n      // Prepare rider information\r\n      const riderdata = [\r\n        ['Rider Information'],\r\n        ['Name:', riderInfo?.username || 'N/A'],\r\n        ['ID:', riderInfo?._id || 'N/A'],\r\n        ['Phone:', riderInfo?.mobile || 'N/A'],\r\n        ['Email:', riderInfo?.email || 'N/A'],\r\n        ['Date Range:', `${format(dateRange.startDate, 'MMM dd, yyyy')} - ${format(dateRange.endDate, 'MMM dd, yyyy')}`],\r\n        [], // Empty row\r\n        ['Order History'], // Section header\r\n        [], // Empty row before headers\r\n      ];\r\n\r\n      // Prepare order data\r\n      const orderHeaders = [\r\n        'Order ID',\r\n        'Status',\r\n        'Date',\r\n        'Items',\r\n        'Amount',\r\n        'Payment Method',\r\n        'Payment Status'\r\n      ];\r\n\r\n      const orderData = filteredOrders.map(order => [\r\n        order.orderId,\r\n        order.status,\r\n        format(new Date(order.orderTime), 'MMM dd, yyyy hh:mm a'),\r\n        order.items.length,\r\n        order.finalAmount,\r\n        order.paymentMethod,\r\n        order.paymentStatus\r\n      ]);\r\n\r\n      // Combine all data\r\n      const allData = [...riderdata, orderHeaders, ...orderData];\r\n\r\n      // Create worksheet\r\n      const worksheet = XLSX.utils.aoa_to_sheet(allData);\r\n\r\n      // Set column widths\r\n      worksheet['!cols'] = [\r\n        { wch: 20 }, // Order ID\r\n        { wch: 15 }, // Status\r\n        { wch: 20 }, // Date\r\n        { wch: 8 },  // Items\r\n        { wch: 12 }, // Amount\r\n        { wch: 15 }, // Payment Method\r\n        { wch: 15 }  // Payment Status\r\n      ];\r\n\r\n      // Create workbook\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Orders');\r\n      \r\n      // Save file\r\n      XLSX.writeFile(workbook, `Orders_${riderInfo?.username || 'Rider'}_${new Date().toISOString().slice(0,10)}.xlsx`);\r\n    });\r\n  };\r\n\r\n\r\n  const handleExportToPDF = () => {\r\n  const doc = new jsPDF();\r\n   console.log(riderInfo)\r\n\r\n  // --- 1. Rider Information Header ---\r\n  if (riderInfo) {\r\n    \r\n    doc.setFontSize(16);\r\n    doc.setTextColor(40, 53, 147);\r\n    doc.text('Rider Information', 14, 20);\r\n    \r\n    const riderData = [\r\n      ['Name:', riderInfo.username || 'N/A'],\r\n      ['ID:', riderInfo._id || 'N/A'],\r\n      ['Phone:', riderInfo.mobile || 'N/A'],\r\n      ['Email:', riderInfo.email || 'N/A'],\r\n      ['Date Range:', `${format(dateRange.startDate, 'MMM dd, yyyy')} - ${format(dateRange.endDate, 'MMM dd, yyyy')}`]\r\n    ];\r\n    \r\n    autoTable(doc, {\r\n      startY: 25,\r\n      head: [['', '']],\r\n      body: riderData,\r\n      theme: 'grid',\r\n      headStyles: { fillColor: [255, 255, 255], textColor: [0, 0, 0] },\r\n      styles: { fontSize: 10, cellPadding: 1 }\r\n    });\r\n  }\r\n\r\n  // --- 2. Orders Summary Table ---\r\n  doc.setFontSize(16);\r\n  doc.setTextColor(40, 53, 147);\r\n  doc.text('Orders Summary', 14, doc.lastAutoTable?.finalY + 15 || 40);\r\n\r\n  const orderHeaders = [\r\n    'Order ID',\r\n    'Status',\r\n    'Date',\r\n    'Items',\r\n    'Amount',\r\n    'Payment'\r\n  ];\r\n\r\n  const orderData = filteredOrders.map(order => [\r\n    order.orderId,\r\n    order.status,\r\n    format(new Date(order.orderTime), 'MMM dd, yyyy'),\r\n    order.items.length,\r\n    `₹${Number(order.finalAmount)?.toLocaleString()}`,\r\n    order.paymentMethod\r\n  ]);\r\n\r\n  autoTable(doc, {\r\n  startY: doc.lastAutoTable?.finalY + 20 || 45,\r\n  head: [orderHeaders],\r\n  body: orderData,\r\n  theme: 'grid',\r\n  headStyles: { fillColor: [40, 53, 147], textColor: [255, 255, 255] },\r\n  styles: { fontSize: 9, cellPadding: 3 },\r\n  columnStyles: {\r\n    0: { cellWidth: 40 }, // Order ID\r\n    1: { cellWidth: 25 }, // Status\r\n    2: { cellWidth: 30 }, // Date\r\n    3: { cellWidth: 20 }, // Items\r\n    4: { cellWidth: 30 }, // Amount\r\n    5: { cellWidth: 30 }  // Payment\r\n  }\r\n});\r\n\r\nif (filteredOrders.length > 0) {\r\n  doc.addPage(); // 👈 Start fresh for detailed orders\r\n}\r\n  // --- 3. Detailed Orders (One per page) ---\r\n  filteredOrders.forEach((order, index) => {\r\n    if (index > 0) doc.addPage(); // New page for each order after first\r\n    \r\n    // Order Header\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(40, 53, 147);\r\n    doc.text(`Order #${order.orderId}`, 14, 20);\r\n    \r\n    // Basic Info\r\n    autoTable(doc, {\r\n      startY: 25,\r\n      body: [\r\n        ['Status:', order.status],\r\n        ['Order Date:', format(new Date(order.orderTime), 'MMM dd, yyyy hh:mm a')],\r\n        ['Items Count:', order.items.length],\r\n        ['Final Amount:', `₹${order.finalAmount?.toLocaleString()}`]\r\n      ],\r\n      theme: 'grid',\r\n      styles: { fontSize: 10 }\r\n    });\r\n\r\n    // Shipping Address\r\n    doc.setFontSize(12);\r\n    doc.text('Shipping Information', 14, doc.lastAutoTable.finalY + 10);\r\n    \r\n    if (order.shippingAddress?.length > 0) {\r\n      const address = order.shippingAddress[0];\r\n      autoTable(doc, {\r\n        startY: doc.lastAutoTable.finalY + 15,\r\n        body: [\r\n          ['Area:', address.area],\r\n          ['Address:', `${address.houseNo}, ${address.city}`],\r\n          ['State:', address.state],\r\n          ['Postal Code:', address.postalCode],\r\n          ['Country:', address.country],\r\n          ...(address.locationLink ? [['Location:', { content: address.locationLink, link: address.locationLink }]] : [])\r\n        ],\r\n        columnStyles: {\r\n          1: { cellWidth: 'auto' }\r\n        },\r\n        styles: { fontSize: 10 }\r\n      });\r\n    }\r\n\r\n    // Payment Info\r\n    doc.setFontSize(12);\r\n    doc.text('Payment Information', 14, doc.lastAutoTable.finalY + 10);\r\n    \r\n    autoTable(doc, {\r\n      startY: doc.lastAutoTable.finalY + 15,\r\n      body: [\r\n        ['Method:', order.paymentMethod],\r\n        ['Status:', order.paymentStatus],\r\n        ['Order Total:', `₹${order.totalAmount}`],\r\n        ...(order.discountApplied > 0 ? [['Discount:', `-₹${order.discountApplied}`]] : []),\r\n        ['Final Amount:', `₹${order.finalAmount}`]\r\n      ],\r\n      styles: { fontSize: 10 }\r\n    });\r\n\r\n    // Items Table\r\n    doc.setFontSize(12);\r\n    doc.text('Order Items', 14, doc.lastAutoTable.finalY + 10);\r\n    \r\n    const itemHeaders = ['Item', 'Qty', 'Price', 'Subtotal'];\r\n    const itemData = order.items.map(item => [\r\n      item.item?.itemName || 'Unnamed Item',\r\n      item.quantity,\r\n      item.price?.toLocaleString(),\r\n      (item.price * item.quantity)-item.discount\r\n    ]);\r\n    \r\n    autoTable(doc, {\r\n      startY: doc.lastAutoTable.finalY + 15,\r\n      head: [itemHeaders],\r\n      body: itemData,\r\n      theme: 'grid',\r\n      headStyles: { fillColor: [40, 53, 147], textColor: [255, 255, 255] },\r\n      columnStyles: {\r\n        0: { cellWidth: 'auto' }, // Item name\r\n        1: { cellWidth: 15 },     // Qty\r\n        2: { cellWidth: 20 },     // Price\r\n        3: { cellWidth: 20 }      // Subtotal\r\n      },\r\n      styles: { fontSize: 9 }\r\n    });\r\n  });\r\n\r\n  // Save PDF\r\n  const filename = `Orders_${riderInfo?.username || 'Rider'}_${new Date().toISOString().slice(0,10)}.pdf`;\r\n  doc.save(filename);\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/30 backdrop-blur-sm\">\r\n      <div className=\"relative w-full max-w-4xl max-h-[90vh]  bg-white rounded-xl shadow-2xl\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 z-10 flex items-center justify-between p-6 bg-white border-b\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Order History</h2>\r\n            <p className=\"text-sm text-gray-500\">\r\n              {filteredOrders.length} {filteredOrders.length === 1 ? 'order' : 'orders'} found\r\n              {dateRange.startDate && dateRange.endDate && (\r\n                <span className=\"ml-2\">\r\n                  ({format(dateRange.startDate, 'MMM dd')} - {format(dateRange.endDate, 'MMM dd')})\r\n                </span>\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => setShowDatePicker(!showDatePicker)}\r\n              className=\"flex items-center gap-1 px-3 py-1 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n            >\r\n              <Calendar size={16} />\r\n              Filter Dates\r\n            </button>\r\n            <button \r\n              onClick={() => setRiderOrderView(false)}\r\n              className=\"p-1 text-gray-500 transition-colors rounded-full hover:bg-gray-100 hover:text-gray-700\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <X size={24} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Date Picker */}\r\n        {showDatePicker && (\r\n          <div className=\"sticky z-10 p-4 border-b top-20 bg-gray-50\">\r\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={format(dateRange.startDate, 'yyyy-MM-dd')}\r\n                  onChange={(e) => handleDateChange(e, 'startDate')}\r\n                  className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={format(dateRange.endDate, 'yyyy-MM-dd')}\r\n                  onChange={(e) => handleDateChange(e, 'endDate')}\r\n                  className=\"w-full p-2 mt-1 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-end gap-2 mt-2\">\r\n              <button\r\n                onClick={resetDateFilter}\r\n                className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => setShowDatePicker(false)}\r\n                className=\"px-3 py-1 text-sm text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Apply\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Content */}\r\n        <div className=\"overflow-y-auto max-h-[calc(90vh-120px)]\">\r\n          {loading ? (\r\n            <div className=\"flex flex-col items-center justify-center p-12\">\r\n              <Loader className=\"w-8 h-8 text-blue-500 animate-spin\" />\r\n              <p className=\"mt-4 text-gray-600\">Loading orders...</p>\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"flex flex-col items-center justify-center p-8 text-center\">\r\n              <AlertCircle className=\"w-12 h-12 text-red-500\" />\r\n              <h3 className=\"mt-4 text-lg font-medium text-gray-900\">Error loading orders</h3>\r\n              <p className=\"mt-2 text-gray-500\">{error}</p>\r\n              <button\r\n                onClick={fetchOrders}\r\n                className=\"px-4 py-2 mt-4 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700\"\r\n              >\r\n                Retry\r\n              </button>\r\n            </div>\r\n          ) : filteredOrders.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center p-8 text-center\">\r\n              <div className=\"p-4 mb-4 bg-gray-100 rounded-full\">\r\n                <svg className=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-medium text-gray-900\">No orders found</h3>\r\n              <p className=\"mt-1 text-gray-500\">\r\n                {viewOrders.length === 0 ? 'Orders will appear here once assigned' : 'No orders match the selected date range'}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y divide-gray-100\">\r\n              {filteredOrders.map((order) => (\r\n                <div key={order._id} className=\"transition-colors hover:bg-gray-50/50\">\r\n                  {/* ... (rest of your order rendering code remains the same) ... */}\r\n                   <div className=\"p-6\">\r\n                    <div className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\">\r\n                      <div className=\"flex items-start gap-4\">\r\n                        <div className=\"p-3 rounded-lg bg-gray-50\">\r\n                          {getStatusIcon(order.status)}\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <p className=\"font-medium text-gray-900\">Order #{order.orderId}</p>\r\n                            <span className={`px-2 py-1 text-xs rounded-full ${\r\n                              order.status === 'Delivered' ? 'bg-green-100 text-green-800' :\r\n                              order.status === 'Processing' ? 'bg-blue-100 text-blue-800' :\r\n                              order.status === 'Out for Delivery' ? 'bg-orange-100 text-orange-800' :\r\n                              'bg-gray-100 text-gray-800'\r\n                            }`}>\r\n                              {order.status}\r\n                            </span>\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-500\">\r\n                            {format(new Date(order.orderTime), 'MMM dd, yyyy • hh:mm a')}\r\n                          </p>\r\n                          <p className=\"mt-1 text-sm text-gray-600\">\r\n                            {order.items.length} {order.items.length === 1 ? 'item' : 'items'}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"sm:text-right\">\r\n                        <p className=\"font-medium text-gray-900\">\r\n                          ₹{order.finalAmount?.toLocaleString()}\r\n                        </p>\r\n                        <div className=\"flex gap-2 mt-2 sm:justify-end\">\r\n                          <button \r\n                            onClick={() => toggleOrderDetails(order._id)}\r\n                            className=\"flex items-center gap-1 px-3 py-1 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n                          >\r\n                            Details\r\n                            {expandedOrder === order._id ? (\r\n                              <ChevronUp size={16} />\r\n                            ) : (\r\n                              <ChevronDown size={16} />\r\n                            )}\r\n                          </button>\r\n                          {order.status === 'Out for Delivery' && (\r\n                            <button className=\"px-3 py-1 text-sm font-medium text-white transition-colors bg-blue-600 rounded-lg hover:bg-blue-700\">\r\n                              Track\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Order Details Section */}\r\n                  {expandedOrder === order._id && (\r\n                    <div className=\"h-full p-6 pt-0 overflow-y-auto border-t py-14\">\r\n                      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\r\n                        {/* Shipping Information */}\r\n                        <div>\r\n                          <h3 className=\"mb-3 font-medium text-gray-900\">Shipping Information</h3>\r\n                          {order.shippingAddress?.length > 0 && (\r\n                            <div className=\"p-4 rounded-lg bg-gray-50\">\r\n                              <p className=\"font-medium\">{order.shippingAddress[0].area}</p>\r\n                              <p>{order.shippingAddress[0].houseNo}, {order.shippingAddress[0].city}</p>\r\n                              <p>{order.shippingAddress[0].state}, {order.shippingAddress[0].postalCode}</p>\r\n                              <p>{order.shippingAddress[0].country}</p>\r\n                              {order.shippingAddress[0].locationLink && (\r\n                                <a \r\n                                  href={order.shippingAddress[0].locationLink} \r\n                                  target=\"_blank\" \r\n                                  rel=\"noopener noreferrer\"\r\n                                  className=\"inline-block mt-2 text-sm text-blue-600 hover:underline\"\r\n                                >\r\n                                  View Location\r\n                                </a>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Payment Information */}\r\n                        <div>\r\n                          <h3 className=\"mb-3 font-medium text-gray-900\">Payment Information</h3>\r\n                          <div className=\"p-4 rounded-lg bg-gray-50\">\r\n                            <div className=\"flex justify-between py-1\">\r\n                              <span className=\"text-gray-600\">Method:</span>\r\n                              <span className=\"font-medium\">{order.paymentMethod}</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between py-1\">\r\n                              <span className=\"text-gray-600\">Status:</span>\r\n                              <span className={`font-medium ${\r\n                                order.paymentStatus === 'Completed' ? 'text-green-600' :\r\n                                order.paymentStatus === 'Failed' ? 'text-red-600' :\r\n                                'text-yellow-600'\r\n                              }`}>\r\n                                {order.paymentStatus}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex justify-between py-1\">\r\n                              <span className=\"text-gray-600\">Order Total:</span>\r\n                              <span className=\"font-medium\">₹{order.totalAmount?.toLocaleString()}</span>\r\n                            </div>\r\n                            {order.discountApplied > 0 && (\r\n                              <div className=\"flex justify-between py-1\">\r\n                                <span className=\"text-gray-600\">Discount:</span>\r\n                                <span className=\"font-medium text-green-600\">-₹{order.discountApplied?.toLocaleString()}</span>\r\n                              </div>\r\n                            )}\r\n                            <div className=\"flex justify-between py-1 pt-2 mt-2 border-t border-gray-200\">\r\n                              <span className=\"text-gray-600\">Final Amount:</span>\r\n                              <span className=\"font-medium\">₹{order.finalAmount?.toLocaleString()}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Items List */}\r\n                        <div className=\"md:col-span-2\">\r\n                          <h3 className=\"mb-3 font-medium text-gray-900\">Items</h3>\r\n                          <div className=\"overflow-hidden border border-gray-200 rounded-lg\">\r\n                            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                              <thead className=\"bg-gray-50\">\r\n                                <tr>\r\n                                  <th className=\"px-4 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Item</th>\r\n                                  <th className=\"px-4 py-3 text-xs font-medium tracking-wider text-right text-gray-500 uppercase\">Qty</th>\r\n                                  <th className=\"px-4 py-3 text-xs font-medium tracking-wider text-right text-gray-500 uppercase\">Price</th>\r\n                                  <th className=\"px-4 py-3 text-xs font-medium tracking-wider text-right text-gray-500 uppercase\">Subtotal</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                {order.items?.map((item, index) => (\r\n                                  <tr key={index}>\r\n                                    <td className=\"px-4 py-3 text-sm text-gray-900 whitespace-nowrap\">\r\n                                      {item.item?.name || `Item ${index + 1}`}\r\n                                    </td>\r\n                                    <td className=\"px-4 py-3 text-sm text-right text-gray-500 whitespace-nowrap\">\r\n                                      {item.quantity}\r\n                                    </td>\r\n                                    <td className=\"px-4 py-3 text-sm text-right text-gray-500 whitespace-nowrap\">\r\n                                      ₹{item.price?.toLocaleString()}\r\n                                    </td>\r\n                                    <td className=\"px-4 py-3 text-sm text-right text-gray-500 whitespace-nowrap\">\r\n                                      ₹{(item.price * item.quantity)?.toLocaleString()}\r\n                                    </td>\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"sticky bottom-0 p-4 bg-white border-t\">\r\n          <div className=\"flex justify-between\">\r\n            {filteredOrders.length > 0 && (\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={handleExportToExcel}\r\n                  className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium text-white transition-colors bg-green-600 rounded-lg hover:bg-green-700\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                  Excel\r\n                </button>\r\n                <button\r\n                  onClick={handleExportToPDF}\r\n                  className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium text-white transition-colors bg-red-600 rounded-lg hover:bg-red-700\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                  PDF\r\n                </button>\r\n              </div>\r\n            )}\r\n            <button\r\n              onClick={() => setRiderOrderView(false)}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RiderOrderList;","import { useState ,useEffect} from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport Select from \"react-select\"\r\nconst RiderAddMoney = ({ isOpen, onClose, data,rider }) => {\r\n    const[accounts,setAccounts]=useState([])\r\n    console.log(data)\r\n\r\n    \r\n  const [formData, setFormData] = useState({\r\n       amount:\"\",\r\n       riderId:rider._id,\r\n       riderAccountId:data._id\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n  const handleSubmit =async (e) => {\r\n    e.preventDefault();\r\n   \r\n    // console.log(formData)\r\n    try {\r\n      const res=await axios.post(`api/rider-account/money`,formData,{\r\n        headers:{\r\n          Authorization:`bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      })  \r\n      console.log(res)\r\n      onClose();\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  if (!isOpen) return null;\r\n\r\n\r\n\r\n  \r\nreturn (\r\n  <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-opacity-55\">\r\n    {/* Semi-transparent overlay (optional) - remove or adjust opacity if you want completely transparent */}\r\n    <div \r\n      className=\"absolute inset-0 bg-black bg-opacity-10 backdrop-blur-[1px]\"\r\n      onClick={onClose} // Optional: close when clicking outside\r\n    ></div>\r\n    \r\n    {/* Modal container */}\r\n    <div className=\"relative w-full max-w-md bg-white border border-gray-200 rounded-lg shadow-xl\">\r\n      <div className=\"flex items-center justify-between p-4 border-b\">\r\n        <h3 className=\"text-lg font-semibold\">Add Money</h3>\r\n        <button \r\n          onClick={onClose}\r\n          className=\"text-gray-500 transition-colors hover:text-gray-700\"\r\n        >\r\n          <FaTimes />\r\n        </button>\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"p-6\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n            Rider Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"riderName\"\r\n            value={`${rider.firstname} ${rider.lastname}`}\r\n            readOnly\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n            Account Number\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"accountNumber\"\r\n            value={data.accountNumber}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n      \r\n\r\n         <div className=\"mb-6\">\r\n          <label className=\"block mb-1 text-sm font-medium text-gray-700\">\r\n             Amount\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={formData.amount}\r\n            onChange={(e)=>setFormData((prev)=>({...prev,amount:Number(e.target.value)}))}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n            required\r\n            min='0'\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end space-x-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 transition-colors bg-gray-100 rounded-md hover:bg-gray-200\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 text-sm font-medium text-white transition-colors rounded-md bg-cyan-600 hover:bg-cyan-700\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n};\r\n\r\n  export default RiderAddMoney","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {   FaTrash, FaTachometerAlt,FaMoneyBillWave ,FaEye} from 'react-icons/fa';\r\nimport { jsPDF } from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { BiChevronRight } from 'react-icons/bi';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport RiderMoneyTransfer from \"./RiderMoneyTransfer.jsx\"\r\nimport RiderTransactionsList from './RiderTranscationList.jsx';\r\nimport RiderOrderList from './RiderOrderView.jsx';\r\nimport RiderAddMoney from './RiderAddMoney.jsx';\r\n// import { useNavigate } from 'react-router-dom';\r\nconst RiderAccountList = () => {\r\n    const navigate=useNavigate()\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [hiddenColumns, setHiddenColumns] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n  const[loading,setLoading]=useState(false)\r\n    const tableRef = useRef();\r\n    const[searchTerm,setSearchTerm]=useState(\"\")\r\n    const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n    const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n   const[riderDeposit,setRiderDepsit]=useState(false)\r\n       const [dropdownIndex, setDropdownIndex] = useState(null);\r\n       const[rider,setRider]=useState([])\r\n       const[riderAccount,setRiderAccount]=useState({})\r\n       const[riderTranscations,setRiderTranscations]=useState([])\r\n       const[riderTranscationsView,setRiderTranscationsView]=useState(false)\r\n       const[riderOrderView,setRiderOrderView]=useState(false)\r\n       const[RiderAddMoneyView,setRiderAddMoneyView]=useState(false)\r\n       const[orders,setOrders]=useState([])\r\n       const[riderInfo,setRiderInfo]=useState([])\r\n        useEffect(()=>{\r\n           if(window.innerWidth < 768){\r\n             setSidebarOpen(false)\r\n           }\r\n         },[])\r\n    const fetchAccounts = async () => {\r\n        try {\r\n            setLoading(true)\r\n          const response = await  axios.get('api/rider/all', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Get token from localStorage\r\n            }\r\n          }) // Replace with actual API URL\r\n          \r\n          console.log(response.data)\r\n          setAccounts(response.data.data)\r\n        } catch (err) {\r\n          console.log(err.message);\r\n        } \r\n        finally{\r\n            setLoading(false)\r\n        }\r\n      };\r\n    useEffect(()=>{\r\n      fetchAccounts()\r\n    },[])\r\n  \r\n    const filteredData = accounts.filter(item => \r\n        item.username?.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n        item._id.toLowerCase().includes(searchTerm.toLowerCase()) \r\n      );\r\n\r\n\r\n   \r\n\r\n   \r\n\r\n    const handlePrint = () => {\r\n        window.print();\r\n    };\r\n\r\n  \r\n\r\n    const handleEntriesChange=(e)=>{\r\n      setEntriesPerPage(Number(e.target.value))\r\n      setCurrentPage(1)\r\n    }\r\n    const indexOfLastItem = currentPage * entriesPerPage;\r\nconst indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\nconst totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\nconst currentUsers = filteredData.slice((currentPage-1)*entriesPerPage, currentPage* entriesPerPage);\r\nconst handlePageChange = (newPage) =>  {\r\n  if(newPage >=1 && newPage <=totalPages )\r\n  setCurrentPage(newPage);\r\n}\r\n  \r\n    const handleDelete = async (id) => {\r\n        const conf= window.confirm(\"Do u want to delete this\")\r\n        if(!conf){\r\n          return ;\r\n        }\r\n        setLoading(true)\r\n       \r\n        try {\r\n          const response = await axios.delete(`api/accounts/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n        \r\n         alert(\"Deleted Successfully\")\r\n        \r\n        } catch (error) {\r\n          console.error( error.message);\r\n        }\r\n        finally{\r\n          await fetchAccounts()\r\n          setLoading(false)\r\n        }\r\n      };\r\n   \r\n\r\n\r\n    // Add this to your component state\r\nconst [dropdownPosition, setDropdownPosition] = useState({ x: 0, y: 0 });\r\n\r\n// Modify your toggleDropdown function\r\nconst toggleDropdown = (id, event) => {\r\n  if (event) {\r\n    const rect = event.currentTarget.getBoundingClientRect();\r\n    setDropdownPosition({ x: rect.left, y: rect.top });\r\n  }\r\n  setDropdownIndex(dropdownIndex === id ? null : id);\r\n};\r\n\r\n// Export to PDF\r\nconst exportToPDF = () => {\r\n  const doc = new jsPDF();\r\n  \r\n  // Table title\r\n  doc.setFontSize(18);\r\n  doc.text('Rider Accounts Report', 14, 15);\r\n  \r\n  // Prepare data\r\n  const headers = [\r\n    'Rider Name',\r\n    'Account No.',\r\n    'Total Sale',\r\n    'Cash Sale',\r\n    'Bank Sale',\r\n    'Money Transfer',\r\n    'Opening',\r\n    'Current Balance'\r\n  ];\r\n  \r\n  const data = currentUsers.map(rider => [\r\n    `${rider.firstname} ${rider.lastname}`,\r\n    rider.riderAccount.accountNumber || \"NA\",\r\n    rider.riderAccount.totalOrderSale,\r\n    rider.riderAccount.cashSale,\r\n    rider.riderAccount.bankSale,\r\n    rider.riderAccount.moneyTransfer,\r\n    rider.riderAccount.openingBalance.toFixed(2),\r\n    rider.riderAccount.currentBalance || 0\r\n  ]);\r\n\r\n  // Add table\r\n  autoTable(doc,{\r\n    head: [headers],\r\n    body: data,\r\n    startY: 25,\r\n    styles: {\r\n      cellPadding: 3,\r\n      fontSize: 9,\r\n      valign: 'middle',\r\n      halign: 'center'\r\n    },\r\n    headStyles: {\r\n      fillColor: [229, 231, 235], // bg-gray-200\r\n      textColor: [0, 0, 0],\r\n      fontStyle: 'bold'\r\n    },\r\n    alternateRowStyles: {\r\n      fillColor: [249, 250, 251] // bg-gray-50\r\n    }\r\n  });\r\n\r\n  // Save PDF\r\n  doc.save('rider_accounts_report.pdf');\r\n};\r\n\r\n// Export to Excel\r\nconst exportToExcel = () => {\r\n  // Prepare data\r\n  const data = [\r\n    [\r\n      'Rider Name',\r\n      'Account No.',\r\n      'Total Sale',\r\n      'Cash Sale',\r\n      'Bank Sale',\r\n      'Money Transfer',\r\n      'Opening',\r\n      'Current Balance'\r\n    ],\r\n    ...currentUsers.map(rider => [\r\n      `${rider.firstname} ${rider.lastname}`,\r\n      rider.riderAccount.accountNumber || \"NA\",\r\n      rider.riderAccount.totalOrderSale,\r\n      rider.riderAccount.cashSale,\r\n      rider.riderAccount.bankSale,\r\n      rider.riderAccount.moneyTransfer,\r\n      rider.riderAccount.openingBalance.toFixed(2),\r\n      rider.riderAccount.currentBalance || 0\r\n    ])\r\n  ];\r\n\r\n  // Create workbook\r\n  const wb = XLSX.utils.book_new();\r\n  const ws = XLSX.utils.aoa_to_sheet(data);\r\n  \r\n  // Style header row\r\n  const headerStyle = {\r\n    fill: { fgColor: { rgb: \"E5E7EB\" } }, // bg-gray-200\r\n    font: { bold: true }\r\n  };\r\n  for (let col = 0; col < data[0].length; col++) {\r\n    const cellRef = XLSX.utils.encode_cell({ r: 0, c: col });\r\n    if (!ws[cellRef].s) ws[cellRef].s = {};\r\n    Object.assign(ws[cellRef].s, headerStyle);\r\n  }\r\n\r\n  // Add worksheet to workbook\r\n  XLSX.utils.book_append_sheet(wb, ws, \"Rider Accounts\");\r\n  \r\n  // Save Excel file\r\n  XLSX.writeFile(wb, 'rider_accounts.xlsx');\r\n};\r\n\r\n\r\nconst copyToClipboard = () => {\r\n  // Prepare headers\r\n  const headers = [\r\n    'Rider Name',\r\n    'Account Number',\r\n    'Total Order Sale',\r\n    'Cash Sale',\r\n    'Bank Sale',\r\n    'Money Transfer',\r\n    'Opening Balance',\r\n    'Current Balance'\r\n  ];\r\n\r\n  // Prepare data rows\r\n  const rows = currentUsers.map(rider => [\r\n    `${rider.firstname} ${rider.lastname}`,\r\n    rider.riderAccount.accountNumber || \"NA\",\r\n    rider.riderAccount.totalOrderSale,\r\n    rider.riderAccount.cashSale,\r\n    rider.riderAccount.bankSale,\r\n    rider.riderAccount.moneyTransfer,\r\n    rider.riderAccount.openingBalance.toFixed(2),\r\n    rider.riderAccount.currentBalance || 0\r\n  ]);\r\n\r\n  // Convert to tab-separated text (good for pasting into spreadsheets)\r\n  let textContent = headers.join('\\t') + '\\n';\r\n  rows.forEach(row => {\r\n    textContent += row.join('\\t') + '\\n';\r\n  });\r\n\r\n  // Copy to clipboard\r\n  navigator.clipboard.writeText(textContent)\r\n    .then(() => {\r\n      alert('Rider accounts data copied to clipboard!');\r\n    })\r\n    .catch(err => {\r\n      console.error('Failed to copy: ', err);\r\n      alert('Failed to copy data to clipboard');\r\n    });\r\n};\r\n\r\nconst exportToCSV = () => {\r\n  // Prepare headers\r\n  const headers = [\r\n    'Rider Name',\r\n    'Account Number',\r\n    'Total Order Sale',\r\n    'Cash Sale',\r\n    'Bank Sale',\r\n    'Money Transfer',\r\n    'Opening Balance',\r\n    'Current Balance'\r\n  ];\r\n\r\n  // Prepare data rows\r\n  const rows = currentUsers.map(rider => [\r\n    `\"${rider.firstname} ${rider.lastname}\"`, // Wrap in quotes to handle names with commas\r\n    rider.riderAccount.accountNumber || \"NA\",\r\n    rider.riderAccount.totalOrderSale,\r\n    rider.riderAccount.cashSale,\r\n    rider.riderAccount.bankSale,\r\n    rider.riderAccount.moneyTransfer,\r\n    rider.riderAccount.openingBalance.toFixed(2),\r\n    rider.riderAccount.currentBalance || 0\r\n  ]);\r\n\r\n  // Convert to CSV format\r\n  const csvContent = [\r\n    headers.join(','),\r\n    ...rows.map(row => row.join(','))\r\n  ].join('\\n');\r\n\r\n  // Create download link\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const url = URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.setAttribute('href', url);\r\n  link.setAttribute('download', 'rider_accounts.csv');\r\n  link.style.visibility = 'hidden';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\n    if(loading) return(<LoadingScreen/>)\r\n        \r\n          return (\r\n        <div className=\"flex flex-col h-screen \">\r\n          {/* Navbar */}\r\n          <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n              {/* Main Content */}\r\n              <div className=\"flex flex-grow\">\r\n                {/* Sidebar */}\r\n                <div className=\"w-auto\">\r\n                  \r\n              <Sidebar isSidebarOpen={isSidebarOpen} />\r\n                </div>\r\n              {/* Sidebar component with open state */}\r\n                \r\n                 {/* Content */}\r\n               <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n                {/* Header */}\r\n                <header className=\"flex flex-col items-center justify-between px-1 py-2 bg-gray-100 rounded-md shadow sm:flex-row\">\r\n                <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n                    <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Rider Accounts List</h1>\r\n                    <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Rider Accounts</span>\r\n                </div>\r\n                <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n <Link to=\"/dashboard\" className=\"flex items-center text-gray-500 no-underline hover:text-cyan-600 text-sm/6\">\r\n                    <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\"/> Home\r\n                    </Link>                    <BiChevronRight className=\"mx-1 sm:mx-2\" />\r\n   <Link to=\"/account/rider/view\" className=\"flex items-center text-gray-500 no-underline hover:text-cyan-600 text-sm/6\">\r\n                   Rider Accounts List\r\n                    </Link>                </nav>\r\n            </header>\r\n{\r\n      (riderTranscationsView) && (<RiderTransactionsList    setRiderTransactionsView={setRiderTranscationsView} transactions={riderTranscations || []}  riderInfo={riderInfo} />)\r\n\r\n}\r\n{\r\n          (riderDeposit) && (<RiderMoneyTransfer         isOpen={riderDeposit} onClose={()=>{setRiderDepsit(false); fetchAccounts()}}  rider={rider || \"NA\"}  data={riderAccount} />)\r\n\r\n}\r\n {\r\n  (riderOrderView)  && (<RiderOrderList orders={orders} setRiderOrderView={setRiderOrderView} riderInfo={riderInfo} />)\r\n }     \r\n {\r\n  (RiderAddMoneyView) && (<RiderAddMoney  isOpen={RiderAddMoneyView} onClose={()=>{setRiderAddMoneyView(false); fetchAccounts()}}  rider={rider || \"NA\"}  data={riderAccount}/>)\r\n }     \r\n\r\n            <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 lg:flex-row lg:space-y-0 lg:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2 px-2'>\r\n                <button onClick={copyToClipboard} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={exportToExcel} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={exportToPDF} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={exportToCSV} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm \" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n            { error ? (\r\n                <p className=\"text-red-500\">Error: {error}</p>\r\n            ) : (\r\n<div className=\"relative w-full overflow-x-auto\">\r\n  <table className=\"min-w-full border border-collapse border-gray-300\" ref={tableRef}>\r\n    <thead>\r\n      <tr className=\"bg-gray-200\">\r\n        <th className=\"p-2 text-sm border border-gray-300\">Rider Name</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Account Number</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Total Order Sale</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Cash Sale</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Bank Sale</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Money Transfer</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Opening</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Current Balance</th>\r\n        <th className=\"p-2 text-sm border border-gray-300\">Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {currentUsers.length <= 0 && (\r\n        <tr>\r\n          <td colSpan='10' className=\"py-2 text-lg text-center border border-gray-300\">No Data Available</td>\r\n        </tr>\r\n      )}\r\n      {currentUsers.length > 0 && \r\n        currentUsers.map(rider => (\r\n          <tr key={rider._id} className=\"hover:bg-gray-100\">\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.firstname} {rider.lastname}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.riderAccount.accountNumber || \"NA\"}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.riderAccount.totalOrderSale}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.riderAccount.cashSale}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.riderAccount.bankSale}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.riderAccount.moneyTransfer}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">{rider.riderAccount.openingBalance.toFixed(2)}</td>\r\n            <td className=\"p-2 text-sm border border-gray-300\">\r\n              {rider.riderAccount.currentBalance || 0}\r\n            </td>\r\n          <td className=\"relative p-2 text-sm border border-gray-300\">\r\n  <div className=\"flex justify-center\">\r\n    <div className=\"relative inline-block\">\r\n      {/* Action Button */}\r\n      <button\r\n        onClick={(e) => toggleDropdown(rider.riderAccount._id, e)}\r\n        className=\"flex items-center gap-1.5 px-4 py-2 text-white transition-all duration-200 rounded-lg shadow-sm bg-gradient-to-r from-cyan-500 to-cyan-600 hover:from-cyan-600 hover:to-cyan-700 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2\"\r\n        aria-expanded={dropdownIndex === rider.riderAccount._id}\r\n        aria-haspopup=\"true\"\r\n      >\r\n        Actions\r\n        <svg \r\n          className={`w-4 h-4 transition-transform duration-200 ${dropdownIndex === rider.riderAccount._id ? 'rotate-180' : ''}`}\r\n          fill=\"none\" \r\n          stroke=\"currentColor\" \r\n          viewBox=\"0 0 24 24\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n        </svg>\r\n      </button>\r\n      \r\n      {/* Dropdown Menu */}\r\n      {dropdownIndex === rider.riderAccount._id && (\r\n        <div \r\n          className=\"fixed z-50 w-56 mt-1 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none animate-fade-in\"\r\n         \r\n          role=\"menu\"\r\n          aria-orientation=\"vertical\"\r\n          aria-labelledby=\"options-menu\"\r\n        >\r\n          <div className=\"py-1\" role=\"none\">\r\n\r\n                <button \r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-gray-700 hover:bg-gray-100/90 transition-colors duration-150 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                console.log(rider.orderId);\r\n                setOrders(rider.orderId);\r\n                setRiderOrderView(true);\r\n                                setRiderInfo(rider)\r\n\r\n                setDropdownIndex(null);\r\n              }}\r\n            >\r\n              <FaEye className=\"w-5 h-5 mr-3 text-cyan-500 group-hover:text-cyan-600\" />\r\n              <span>View Order History</span>\r\n            </button>\r\n\r\n\r\n            <div className=\"my-1 border-t border-gray-100/80\"></div>\r\n\r\n\r\n\r\n            \r\n            <button \r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-gray-700 hover:bg-gray-100/90 transition-colors duration-150 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                console.log(rider.RiderTranscation);\r\n                setRiderTranscations(rider.RiderTranscation);\r\n                setRiderTranscationsView(true);\r\n                setRiderInfo(rider)\r\n                setDropdownIndex(null);\r\n              }}\r\n            >\r\n              <FaEye className=\"w-5 h-5 mr-3 text-cyan-500 group-hover:text-cyan-600\" />\r\n              <span>View Transactions</span>\r\n            </button>\r\n            \r\n            <div className=\"my-1 border-t border-gray-100/80\"></div>\r\n            \r\n            <button \r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-gray-700 hover:bg-gray-100/90 transition-colors duration-150 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                setRiderDepsit(true);\r\n                setRider(rider);\r\n                setRiderAccount(rider.riderAccount);\r\n                setDropdownIndex(null);\r\n              }}\r\n            >\r\n              <FaMoneyBillWave className=\"w-5 h-5 mr-3 text-green-500 group-hover:text-green-600\" />\r\n              <span>Money Transfer</span>\r\n            </button>\r\n            \r\n            <div className=\"my-1 border-t border-gray-100/80\"></div>\r\n\r\n             <button \r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-gray-700 hover:bg-gray-100/90 transition-colors duration-150 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                setRiderAddMoneyView(true);\r\n                setRider(rider);\r\n                setRiderAccount(rider.riderAccount);\r\n                setDropdownIndex(null);\r\n              }}\r\n            >\r\n              <FaMoneyBillWave className=\"w-5 h-5 mr-3 text-green-500 group-hover:text-green-600\" />\r\n              <span>Add Money</span>\r\n            </button>\r\n            <div className=\"my-1 border-t border-gray-100/80\"></div>\r\n            \r\n            <button \r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-red-600 hover:bg-gray-100/90 transition-colors duration-150 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => handleDelete(rider.riderAccount._id)}\r\n            >\r\n              <FaTrash className=\"w-5 h-5 mr-3 text-red-500 group-hover:text-red-600\" />\r\n              <span>Delete Account</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n</td>\r\n          </tr>\r\n        ))\r\n      }\r\n    </tbody>\r\n  </table>\r\n</div>\r\n            )}\r\n\r\n<div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === totalPages \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default RiderAccountList;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","_ref","isOpen","onClose","data","rider","accounts","setAccounts","console","log","formData","setFormData","transferAccountId","amount","riderID","_id","riderAccountId","useEffect","async","token","localStorage","getItem","alert","response","axios","get","headers","Authorization","account","map","acc","label","accountName","accountNumber","value","error","fetchAccounts","onClick","FaTimes","onSubmit","e","preventDefault","res","post","message","type","name","firstname","lastname","readOnly","required","Select","options","onChange","option","prev","depositAmount","Number","target","min","transactions","setRiderTransactionsView","riderInfo","dateRange","setDateRange","startDate","subDays","Date","endDate","showDatePicker","setShowDatePicker","filteredOrders","setFilteredOrders","length","filtered","filter","order","orderDate","createdAt","startOfDay","endOfDay","handleDateChange","format","Calendar","size","X","resetDateFilter","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","txn","toLocaleString","transactionId","_Fragment","handleExportToExcel","then","XLSX","_riderInfo$riderAccou","_riderInfo$username","riderData","username","mobile","email","riderAccount","transactionData","allData","worksheet","utils","aoa_to_sheet","applyStyle","cell","style","_worksheet$cell","t","v","s","font","bold","color","rgb","fgColor","forEach","_","i","encode_cell","r","c","wch","workbook","book_new","book_append_sheet","fileName","replace","toISOString","slice","writeFile","catch","handleExportToPDF","doc","jsPDF","setFontSize","setTextColor","text","autoTable","startY","head","body","theme","headStyles","fillColor","textColor","styles","fontSize","cellPadding","transactionsStartY","lastAutoTable","finalY","alternateRowStyles","riderName","dateStamp","save","orders","setRiderOrderView","loading","setLoading","viewOrders","setViewOrders","setError","expandedOrder","setExpandedOrder","fetchOrders","filteredOrder","or","includes","err","orderTime","getStatusIcon","status","CheckCircle","Clock","Truck","AlertCircle","Loader","_order$finalAmount2","_order$shippingAddres2","_order$totalAmount","_order$discountApplie","_order$finalAmount3","_order$items","orderId","items","finalAmount","toggleOrderDetails","ChevronUp","ChevronDown","shippingAddress","area","houseNo","city","state","postalCode","country","locationLink","href","rel","paymentMethod","paymentStatus","totalAmount","discountApplied","item","index","_item$item2","_item$price2","_ref2","quantity","price","_doc$lastAutoTable","_doc$lastAutoTable2","orderData","_Number","columnStyles","cellWidth","addPage","_order$finalAmount","_order$shippingAddres","address","content","link","itemData","_item$item","_item$price","itemName","discount","filename","riderId","RiderAccountList","useNavigate","hiddenColumns","setHiddenColumns","currentPage","setCurrentPage","tableRef","useRef","searchTerm","setSearchTerm","entriesPerPage","setEntriesPerPage","riderDeposit","setRiderDepsit","dropdownIndex","setDropdownIndex","setRider","setRiderAccount","riderTranscations","setRiderTranscations","riderTranscationsView","setRiderTranscationsView","riderOrderView","RiderAddMoneyView","setRiderAddMoneyView","setOrders","setRiderInfo","window","innerWidth","filteredData","_item$username","toLowerCase","totalPages","Math","ceil","currentUsers","handlePageChange","newPage","dropdownPosition","setDropdownPosition","x","y","Link","to","FaTachometerAlt","BiChevronRight","RiderTransactionsList","RiderMoneyTransfer","RiderOrderList","RiderAddMoney","copyToClipboard","rows","totalOrderSale","cashSale","bankSale","moneyTransfer","openingBalance","toFixed","currentBalance","textContent","join","row","navigator","clipboard","writeText","exportToExcel","wb","ws","headerStyle","col","cellRef","Object","assign","exportToPDF","valign","halign","fontStyle","handlePrint","print","exportToCSV","csvContent","blob","Blob","url","URL","createObjectURL","document","createElement","setAttribute","visibility","appendChild","click","removeChild","placeholder","ref","colSpan","toggleDropdown","id","event","rect","currentTarget","getBoundingClientRect","left","top","role","FaEye","RiderTranscation","FaMoneyBillWave","confirm","delete","handleDelete","FaTrash","disabled"],"sourceRoot":""}