{"version":3,"file":"static/js/9478.989abcc0.chunk.js","mappings":"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","sources":["Loading.jsx","components/contact/Input.jsx","components/contact/AddSupplier.jsx","components/contact/Button.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","\r\nimport React,{useEffect, useState} from 'react'\r\nimport Button from './Button';\r\nimport Input from './Input'\r\nimport Navbar from '../Navbar';\r\nimport Sidebar from '../Sidebar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {FaTachometerAlt} from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport { useId } from 'react';\r\nimport Select from 'react-select'\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport LoadingScreen from '../../Loading';\r\nexport default function AddSupplier() {\r\n  // State management for sidebar toggle and form data\r\n  const[isSidebarOpen,setSidebarOpen]=useState(true)\r\n  const id=useId();\r\n   useEffect(()=>{\r\n      if(window.innerWidth < 768){\r\n        setSidebarOpen(false)\r\n      }\r\n    },[window.innerWidth])\r\n  const[loading,setLoading]=useState(false)\r\n  const [searchParams] = useSearchParams();\r\n  const ID=searchParams.get(\"id\")\r\n\r\n \r\nconst[stateOptions,setStateOptions]=useState([])\r\nconst[countryOptions,setCountryOptions]=useState([])\r\n  \r\n  // Main form data state object\r\n  const [formData, setFormData] = useState({\r\n    supplierName: \"\",  // Ensure this is provided\r\n  email: \"\",  // Email is required\r\n  mobile: \"\",  // Ensure correct format\r\n  phone: \"\", \r\n  address: \"\",\r\n  city: \"\",\r\n  state: \"\",  // State must not be empty\r\n  country: \"\",  // Country must not be empty\r\n  gstNumber: \"\",\r\n  taxNumber: \"\",\r\n  openingBalance: 0,\r\n  previousBalance: 0,\r\n  purchaseDue: 0,\r\n  purchaseReturnDue: 0,\r\n  status: \"Active\"\r\n  });\r\n  const fetchCountry = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'api/countries',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n    const newcountry=response.data.data.filter(country=> country.status===\"active\").map((country)=>(\r\n      {\r\n            label:country.countryName,\r\n            value:country.countryName\r\n        }\r\n    ))\r\n\r\n    setCountryOptions(newcountry)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } \r\n  };\r\n   const fetchState = async () => {\r\n          try {\r\n            const response = await axios.get(\r\n              'api/states',\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                }\r\n              }\r\n            );\r\n          //   setSale(response.data.data)\r\n          console.log(response.data)\r\n          const newcountry=response.data.data.filter(country=> country.status===\"active\").map((country)=>(\r\n            {\r\n                  label:country.stateName,\r\n                  value:country.stateName\r\n              }\r\n          ))\r\n          console.log(newcountry)\r\n          setStateOptions(newcountry)\r\n          } catch (err) {\r\n            console.log(err.message);\r\n          } \r\n        };\r\n  const fetchData = async (ID) => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await  axios.get(`api/suppliers`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Get token from localStorage\r\n        }\r\n      }) // Replace with actual API URL\r\n      \r\n      console.log(response.data)\r\n      const data=response.data.data.find((item)=>item._id===ID)\r\n      console.log(data)\r\n      setFormData(data)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\nuseEffect(()=>{\r\n  if(ID){\r\n    fetchData(ID);\r\n    \r\n  }\r\n  fetchCountry();\r\n  fetchState();\r\n},[ID])\r\n  \r\n\r\n  // State for previous stock entries\r\n  const [previousStock, setPreviousStock] = useState();\r\n\r\n  // Handle input changes for form fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: (e.target.type=='number')?Number(value):value,\r\n    });\r\n  };\r\n\r\n  //Handle Option Change\r\n  const handleSelectChange = (name) => (selectedOption) => {\r\n    setFormData({ ...formData, [name]: selectedOption.value }); // Update the corresponding field in formData\r\n  };\r\n   \r\n  const updateData = async (ID) => {\r\n    setLoading(true)\r\n        try {\r\n          console.log(\"Updating FormData:\", formData);\r\n          const response = await axios.put(\r\n            `api/suppliers/${ID}`,\r\n            formData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          console.log(\"Response:\", response.data);\r\n          alert(\" Update Successfully\");\r\n        } catch (err) {\r\n          console.error(\"Error:\", err.response?.data || err.message);\r\n          alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n        }\r\n        finally{\r\n            setLoading(false)\r\n        }\r\n        \r\n      };\r\n\r\n  // Form submission handler\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission logic here\r\n    console.log('Form submitted:', formData);\r\n    if(ID){\r\n      updateData(ID)\r\n    }\r\n   else{ \r\n    try {\r\n      const response = await axios.post(\r\n        \"api/suppliers\",\r\n        formData,{\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Get token from localStorage\r\n          }\r\n        }\r\n      );\r\n\r\n      console.log(\"Supplier Added:\", response.data);\r\n      alert(\"Supplier added successfully!\");\r\n        // **Reset form data after successful submission**\r\n    setFormData({\r\n      supplierName: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n      gstNumber: \"\",\r\n      taxNumber: \"\",\r\n      openingBalance: 0,\r\n      previousBalance: 0,\r\n      purchaseDue: 0,\r\n      purchaseReturnDue: 0,\r\n    });\r\n    } catch (error) {\r\n      console.error(\"Error adding supplier:\", error.response?.data || error);\r\n      alert(\"Failed to add supplier!\");\r\n    }\r\n    \r\n  }\r\n     };\r\n  \r\n\r\n  return (\r\n    <div className='flex flex-col h-screen'>\r\n      {/* Top navigation bar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      \r\n      <div className='box-border flex'>\r\n        {/* Sidebar component */}\r\n        <div className='w-auto h-auto '>\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        \r\n        {/* Main content area */}\r\n        <div className='w-full h-full px-6 py-4 overflow-x-auto bg-gray-300'>\r\n          {/* Page header and breadcrumb navigation */}\r\n          <div className='flex flex-col items-end justify-between md:flex-row'>\r\n            <div className='flex items-end w-full gap-2 md:w-1/2'> \r\n              <span className='text-3xl'>Suppliers</span>\r\n              <span className='text-sm text-gray-700 '>Add/Update Supplier</span>               \r\n            </div>  \r\n            <div className='flex w-full gap-2 pl-2 mb-2 text-sm font-semibold text-black bg-gray-500 bg-opacity-50 rounded-md md:text-gray-500 md:justify-end md:w-1/2 md:bg-transparent'>\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\"><FaTachometerAlt />Home </NavLink>\r\n              <span>&gt;</span>\r\n              <NavLink to=\"/contact/\" className=\"text-gray-700 no-underline\">Import Suppliers</NavLink>\r\n              <span>&gt;</span>\r\n              <NavLink to=\"/supplier/add\" className=\"text-gray-700 no-underline\">Add Suppliers</NavLink>                   \r\n            </div>\r\n          </div>\r\n\r\n          {/* Main supplier form */}\r\n          <form onSubmit={handleSubmit}> \r\n            {/* Form container with blue top border */}\r\n            <div className=\"px-2 py-4 mx-auto bg-white border-t-4 rounded-t-md border-t-blue-600 border-opacity-70\">\r\n              \r\n              {/* Responsive form grid layout */}\r\n              <div className=\"grid grid-cols-1 md:gap-5 md:grid-cols-2\">\r\n                {/* Supplier Name Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5 lg:mb-2\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  name=\"supplierName\"\r\n                  label=\"Supplier Name*\" \r\n                  value={formData.supplierName ||\"\"}\r\n                  onChange={(e)=>handleChange(e)}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n                \r\n                {/* Opening Balance Input */}\r\n                <Input  type='Number' min=\"0\"\r\n                  div_class=\"flex items-center mb-5 lg:mb-2\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Opening Balance\"\r\n                  name=\"openingBalance\"\r\n                  value={formData.openingBalance}\r\n                  onChange={handleChange} \r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* Mobile Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Mobile\" \r\n                  name=\"mobile\"\r\n                  placeholder='3452345' \r\n                  value={formData.mobile}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n\r\n                  <Input type='Number' min='0'\r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Purchase Due\" \r\n                  name=\"purchaseDue\"\r\n                  value={formData.purchaseDue}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n\r\n                  <Input type='Number' min='0'\r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Previous Balance\" \r\n                  name=\"previousBalance\"\r\n                   \r\n                  value={formData.previousBalance}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n\r\n                 <Input type='Number' min='0'\r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Purchase Return Due\" \r\n                  name=\"purchaseReturnDue\"\r\n                  \r\n                  value={formData.purchaseReturnDue}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* Country Selection Dropdown */}\r\n                <div className=\"flex items-center w-full mb-5 \">\r\n                  <label htmlFor=\"country\" className=\"w-1/3 text-gray-700\">Country</label>\r\n                  \r\n                  <Select options={countryOptions} className='w-2/3' onChange={handleSelectChange(\"country\")}\r\n                  value={countryOptions.find(option => option.value === formData.country) || null}/>\r\n                </div>\r\n                \r\n                {/* Email Input */}\r\n                <Input \r\n                  div_class=\"flex items-center  mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Email\" \r\n                  name=\"email\"\r\n                  className='w-2/3 p-2 border border-gray-300 rounded focus:outline-none focus:border-blue-700' \r\n                  type='email'\r\n                  value={formData.email}\r\n                  onChange={handleChange} \r\n                />\r\n\r\n                {/* State Selection Dropdown */}\r\n                <div className=\"flex items-center w-full mb-5\">\r\n                  <label htmlFor=\"state\" className=\"w-1/3 text-gray-700\">State</label>\r\n                  <Select options={stateOptions} className='w-2/3' onChange={handleSelectChange(\"state\")} \r\n                          value={stateOptions.find(option => option.value === formData.state) || null}/>                        \r\n\r\n                </div>\r\n                \r\n                {/* Phone Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Phone\" \r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* City Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"City\" \r\n                  name=\"city\"\r\n                  value={formData.city}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* GST Number Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"GST Number\" \r\n                  name=\"gstNumber\"\r\n                  value={formData.gstNumber} \r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* Postcode Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Postcode\"\r\n                  name=\"postcode\" \r\n                  value={formData.postcode}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* Tax Number Input */}\r\n                <Input \r\n                  div_class=\"flex items-center mb-5\" \r\n                  label_class=\"w-1/3 text-gray-700\" \r\n                  label=\"Tax Number\" \r\n                  name=\"taxNumber\"\r\n                  value={formData.taxNumber}\r\n                  onChange={handleChange}\r\n                  className='w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500' \r\n                />\r\n\r\n                {/* Address Textarea */}\r\n                <div className=\"flex items-center mb-5\">\r\n                  <label htmlFor=\"address\" className=\"w-1/3 text-gray-700\">Address</label>\r\n                  <textarea \r\n                    id=\"address\" \r\n                    className=\"w-2/3 p-2 border border-gray-300 rounded outline-none focus:border-blue-500\" \r\n                    value={formData.address} \r\n                    name=\"address\" \r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Form action buttons */}\r\n              <div className=\"flex flex-col justify-center gap-2 mt-6 md:flex-row md:gap-5\">\r\n                <Button className=\"px-20 py-2 text-white bg-green-500 rounded\" type='submit' text={ID?\"Update\":\"Save\"} />\r\n                <Button className=\"px-20 py-2 text-white bg-orange-500 rounded\" text=\"Close\" type='reser' />\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          {/* Opening Balance Payments Section */}\r\n          <div className='w-full mt-20 bg-white border-t-4 border-b-2 rounded-sm border-t-gray-500 border-b-gray-500'>\r\n            <h2 className='px-4 py-1 text-sm text-blue-500 md:text-lg'>Opening Balance Payments</h2>\r\n            <div className='overflow-x-auto '>\r\n              {/* Payments history table */}\r\n              <table className='w-full border-separate'>\r\n                <thead className='text-sm'>\r\n                  <tr className=\"bg-gray-200\">\r\n                    <th className=\"px-2 py-1 text-left\">#</th>\r\n                    <th className=\"px-4 py-2 text-left\">Payment Date</th>\r\n                    <th className=\"px-4 py-2 text-left\">Payment</th>\r\n                    <th className=\"px-4 py-2 text-left\">Payment Type</th>\r\n                    <th className=\"px-4 py-2 text-left\">Payment Note</th>\r\n                    <th className=\"hidden px-4 py-2 text-left sm:table-cell\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr className='text-left'>\r\n                    <td colSpan='6' className=\"px-4 py-2 text-center\">\r\n                      {previousStock ? previousStock : <span>No Previous Stock entry found!!!</span>}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","Input","_ref","id","type","label_class","label","placeholder","div_class","props","ID","useId","htmlFor","AddSupplier","useEffect","window","innerWidth","loading","setLoading","searchParams","useSearchParams","get","stateOptions","setStateOptions","countryOptions","setCountryOptions","formData","setFormData","supplierName","email","mobile","phone","address","city","state","country","gstNumber","taxNumber","openingBalance","previousBalance","purchaseDue","purchaseReturnDue","status","async","response","axios","headers","Authorization","localStorage","getItem","console","log","data","find","item","_id","err","message","fetchData","newcountry","filter","map","countryName","value","fetchCountry","stateName","fetchState","previousStock","setPreviousStock","handleChange","e","name","target","Number","handleSelectChange","selectedOption","NavLink","to","FaTachometerAlt","onSubmit","preventDefault","put","alert","_err$response","_err$response2","_err$response2$data","error","updateData","post","_error$response","onChange","min","Select","options","option","postcode","Button","text","colSpan","_typeof","o","Symbol","iterator","constructor","prototype"],"sourceRoot":""}