{"version":3,"file":"static/js/2882.2c6c25e5.chunk.js","mappings":"sKAGe,SAASA,IACpB,MAAMC,EAAcC,IAAgBC,EAAAA,EAAAA,WAAS,GAC7C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAEvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,OAI1BM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mFAAkFC,UACjGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uFACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2CAA0CC,SAAC,yBAOlE,C,4IChBa,SAASI,EAAYC,GAA0B,IAAvBC,OAAQC,GAAYF,EACzD,MAAQC,OAAQE,IAAgBC,EAAAA,EAAAA,KAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXP,EAAmB,OAAVC,QAAU,IAAVA,EAAAA,EAAcC,GAEtBM,EAAalB,IAAkBC,EAAAA,EAAAA,WAAS,IACxCkB,EAAMC,IAAWnB,EAAAA,EAAAA,UAAS,WAC1BoB,EAASC,IAAcrB,EAAAA,EAAAA,WAAS,IAChCsB,EAAMC,IAAWvB,EAAAA,EAAAA,UAAS,OAC1BwB,EAAYC,IAAiBzB,EAAAA,EAAAA,UAAS,KACtC0B,EAAMC,IAAW3B,EAAAA,EAAAA,UAAS,CAC/B4B,KAAM,GACNC,YAAa,GACbC,OAAQ,SACRC,MAAO,GACPC,OAAQ,GACRC,SAAU,MAELC,EAAWC,IAAgBnC,EAAAA,EAAAA,WAAS,IACpCoC,EAAUC,IAAerC,EAAAA,EAAAA,UAAS,OAEzCsC,EAAAA,EAAAA,YAAU,KACR,MACMC,EADQ,IAAIC,gBAAgBzB,EAAS0B,QAC1BC,IAAI,MACjBH,IACFJ,GAAa,GACbE,EAAYE,GACZI,EAAYJ,IAEVK,OAAOC,WAAa,KAAK9C,GAAe,EAAM,GACjD,CAACgB,EAAS0B,SAEb,MAAME,EAAcG,UAClBzB,GAAW,GACX,IACE,MAIM0B,SAJYC,EAAAA,EAAMN,IACtB,QAAQjC,KAAU8B,IAClB,CAAEU,QAAS,CAAEC,cAAe,UAAUC,aAAaC,QAAQ,eAE5CL,KAAKA,KACtBpB,EAAQ,CACNC,KAAMmB,EAAKnB,MAAQ,GACnBC,YAAakB,EAAKlB,aAAe,GACjCC,OAAQiB,EAAKjB,QAAU,SACvBC,MAAOgB,EAAKhB,OAAS,GACrBC,OAAQqB,MAAMC,QAAQP,EAAKf,QAAUe,EAAKf,OAAOuB,KAAK,KAAO,GAC7DtB,SAAUoB,MAAMC,QAAQP,EAAKd,UAAYc,EAAKd,SAASsB,KAAK,KAAO,IAEvE,CAAE,MAAOC,GAAM,IAADC,EAAAC,EACZC,MAAM,sBAAmC,QAAZF,EAAAD,EAAII,gBAAQ,IAAAH,GAAM,QAANC,EAAZD,EAAcV,YAAI,IAAAW,OAAN,EAAZA,EAAoBG,UAAWL,EAAIK,SAClE,CAAC,QACCxC,GAAW,EACb,GAaIyC,EAVW,CACfC,WAAY,WACZC,cAAe,cACf,oBAAqB,mBAOAvD,IAAW,SAC5BwD,EANe,CACnBF,WAAY,mBACZC,cAAe,sBACf,oBAAqB,yBAGQvD,IAAW,IAEpCyD,EAAgBC,IACpB,MAAM,KAAEvC,EAAI,MAAEwC,GAAUD,EAAEE,OAC1B1C,GAAS2C,IAAC,IAAWA,EAAG,CAAC1C,GAAOwC,KAAS,EAwM3C,OAAIhD,GAAgBhB,EAAAA,EAAAA,KAACP,EAAAA,EAAa,KAGhCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAemB,EAAalB,eAAgBA,KACpDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAemB,KACxBhB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,oCAAmCC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,6EAA4EC,SAAA,EAC5FF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SACpC,WAATe,EACGgB,EACE,QAAQ4B,IACR,UAAUA,IACZ,eAAeA,QAErB1D,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAC7B,WAATe,EACG,qBAAqB4C,EAAMS,wBAC3B,mBAAmBT,EAAMS,uCAGjCtE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UACEoE,QAASA,IAAMrD,EAAQ,UACvBjB,UAAW,uDACA,WAATgB,EACI,yBACA,+CACHf,SACJ,YAGDC,EAAAA,EAAAA,KAAA,UACEoE,QAASA,IAAMrD,EAAQ,QACvBjB,UAAW,uDACA,SAATgB,EACI,yBACA,+CACHf,SACJ,UAGDF,EAAAA,EAAAA,MAACwE,EAAAA,GAAO,CACNC,GAAIT,EACJ/D,UAAU,iGAAgGC,SAAA,CAC3G,QACO2D,EAAM,iBAKR,WAAT5C,GACCjB,EAAAA,EAAAA,MAAA,QACE0E,SA/Le7B,UACzBqB,EAAES,iBACFvD,GAAW,GACX,MAAMwD,EAAU,CACdjD,KAAMF,EAAKE,KAAKkD,OAChBjD,YAAaH,EAAKG,YAAYiD,OAC9BhD,OAAQJ,EAAKI,OACbG,SAAUP,EAAKO,SAAS8C,MAAM,OAAOC,KAAKC,GAAMA,EAAEH,SAAQI,OAAOC,UAEpD,sBAAX1E,EACFoE,EAAQ7C,OAASN,EAAKM,OAAO+C,MAAM,OAAOC,KAAKC,GAAMA,EAAEH,SAAQI,OAAOC,SAEtEN,EAAQ9C,MAAQL,EAAKK,MAEvB,IACMG,SACIc,EAAAA,EAAMoC,IACV,QAAQ3E,KAAU2B,IAClByC,EACA,CAAE5B,QAAS,CAAE,eAAgB,mBAAoBC,cAAe,UAAUC,aAAaC,QAAQ,cAEjGO,MAAM,GAAGG,qBAEHd,EAAAA,EAAMqC,KACV,QAAQ5E,IACRoE,EACA,CAAE5B,QAAS,CAAE,eAAgB,mBAAoBC,cAAe,UAAUC,aAAaC,QAAQ,cAEjGO,MAAM,GAAGG,cAEXjD,EAASoD,EACX,CAAE,MAAOT,GAAM,IAAD8B,EAAAC,EACZ5B,OAAkB,QAAZ2B,EAAA9B,EAAII,gBAAQ,IAAA0B,GAAM,QAANC,EAAZD,EAAcvC,YAAI,IAAAwC,OAAN,EAAZA,EAAoB1B,UAAWL,EAAIK,QAC3C,CAAC,QACCxC,GAAW,EACb,GA6JUnB,UAAU,6EAA4EC,SAAA,EAEtFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+CAA8CC,SAAA,CAAC,SACzDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAC,UAEtCC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,OACLwC,MAAO1C,EAAKE,KACZ4D,SAAUtB,EACVuB,UAAQ,EACRvF,UAAU,8HACVwF,YAAY,mBAGhBzF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,iBAGhEC,EAAAA,EAAAA,KAAA,YACEwB,KAAK,cACLwC,MAAO1C,EAAKG,YACZ2D,SAAUtB,EACVhE,UAAU,8HACVyF,KAAK,IACLD,YAAY,0BAGhBzF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,YAGhEF,EAAAA,EAAAA,MAAA,UACE2B,KAAK,SACLwC,MAAO1C,EAAKI,OACZ0D,SAAUtB,EACVhE,UAAU,8HAA6HC,SAAA,EAEvIC,EAAAA,EAAAA,KAAA,UAAQgE,MAAM,SAAQjE,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQgE,MAAM,WAAUjE,SAAC,mBAGjB,sBAAXM,GACCR,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,WAGhEC,EAAAA,EAAAA,KAAA,SACEwF,KAAK,OACLC,OAAO,UACPL,SAhTY1C,UAC9B,MAAMxB,EAAO6C,EAAEE,OAAOyB,MAAM,GAC5B,IAAKxE,EAAM,OACX,MAAMyE,EAAK,IAAIC,SACfD,EAAGE,OAAO,SAAU3E,GACpB,IACED,GAAW,GACX,MAAM,KAAE0B,SAAeC,EAAAA,EAAMqC,KAC3B,QAAQ5E,kBACRsF,EACA,CACE9C,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAC9C,eAAgB,yBAIlBL,EAAKmD,QACPvE,GAAS2C,IAAC,IAAWA,EAAGvC,MAAOgB,EAAKoD,eAAe7E,EAAKM,UAExD+B,MAAM,kBAAoBZ,EAAKc,QAEnC,CAAE,MAAOL,GACPG,MAAM,iBAAmBH,EAAIK,QAC/B,CAAC,QACCxC,GAAW,EACb,GAuRkBnB,UAAU,+LAEXwB,EAAKK,QACJ3B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OACEgG,IAAK,gBAAgB3F,KAAUiB,EAAKK,QACpCsE,IAAI,UACJnG,UAAU,mEAMlBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,YAGhEC,EAAAA,EAAAA,KAAA,SACEwF,KAAK,OACLC,OAAO,UACPS,UAAQ,EACRd,SAzSa1C,UAC/B,MAAMgD,EAAQzC,MAAMkD,KAAKpC,EAAEE,OAAOyB,OAC5BC,EAAK,IAAIC,SACfF,EAAMU,SAASlC,GAAMyB,EAAGE,OAAO,SAAU3B,KACzC,IACEjD,GAAW,GACX,MAAM,KAAE0B,SAAeC,EAAAA,EAAMqC,KAC3B,QAAQ5E,kBACRsF,EACA,CACE9C,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAC9C,eAAgB,yBAItB,GAAIL,EAAKmD,QAAS,CAChB,MAAMO,EAASX,EACZd,KAAKV,GAAMvB,EAAKoD,eAAe7B,EAAE1C,QACjCsD,OAAOC,SACP5B,KAAK,KACR5B,GAAS2C,IAAC,IAAWA,EAAGtC,OAAQyE,KAClC,MACE9C,MAAM,kBAAoBZ,EAAKc,QAEnC,CAAE,MAAOL,GACPG,MAAM,iBAAmBH,EAAIK,QAC/B,CAAC,QACCxC,GAAW,EACb,GA6QkBnB,UAAU,+LAEXwB,EAAKM,SACJ5B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,SACxDuB,EAAKM,OAAO+C,MAAM,KAAKC,KAAK0B,IAC3BzG,EAAAA,EAAAA,MAAA,OAAcC,UAAU,WAAUC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEgG,IAAK,gBAAgB3F,KAAUiG,IAC/BxG,UAAU,2DACVmG,IAAI,MAENjG,EAAAA,EAAAA,KAAA,UACEwF,KAAK,SACLpB,QAASA,IAzJVkC,KACzB/E,GAAS2C,IAAC,IACLA,EACHtC,OAAQsC,EAAEtC,OACP+C,MAAM,KACNG,QAAQtD,GAASA,IAAS8E,IAC1BnD,KAAK,QACP,EAkJsCoD,CAAkBD,GACjCxG,UAAU,mGACV4D,MAAM,eAAc3D,UAEpBC,EAAAA,EAAAA,KAAA,OACEF,UAAU,UACV0G,KAAK,OACLC,OAAO,eACPC,QAAQ,YACRC,MAAM,6BAA4B5G,UAElCC,EAAAA,EAAAA,KAAA,QACE4G,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,+BAvBAT,WAiCpBzG,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,cAGhEC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,WACLwC,MAAO1C,EAAKO,SACZuD,SAAUtB,EACVwB,YAAY,cACZxF,UAAU,iIAEZE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,2EAK9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,UACEwF,KAAK,SACL1F,UAAU,mJAAkJC,SAE3J+B,EAAY,UAAU4B,IAAU,UAAUA,YAKjD7D,EAAAA,EAAAA,MAAA,QACE0E,SArSa7B,UAEvB,GADAqB,EAAES,kBACGtD,EAAM,OAAOqC,MAAM,wBACxBtC,GAAW,GACX,IAAI+F,EAAc,CAAC,EACnB,IACE,GAAI5F,EAAW6F,OAAQ,CACrB,MAAMtB,EAAK,IAAIC,SACfxE,EAAWgF,SAASlC,GAAMyB,EAAGE,OAAO,SAAU3B,KAC9C,MAAM,KAAEvB,SAAeC,EAAAA,EAAMqC,KAC3B,QAAQ5E,kBACRsF,EACA,CAAE9C,QAAS,CAAEC,cAAe,UAAUC,aAAaC,QAAQ,WAAY,eAAgB,yBAEzF,IAAKL,EAAKmD,QAAS,MAAM,IAAIoB,MAAMvE,EAAKc,SACxCuD,EAAcrE,EAAKoD,cACrB,CACF,CAAE,MAAO3C,GAEP,OADAnC,GAAW,GACJsC,MAAM,wBAA0BH,EAAIK,QAC7C,CACA,MAAM0D,EAAS,IAAIC,WACnBD,EAAOE,OAAS3E,UACd,IACE,MAAM4E,EAAM,IAAIC,WAAWC,EAAIvD,OAAOwD,QAChCC,EAAKC,EAAAA,KAAUL,EAAK,CAAE9B,KAAM,UAE5Bf,EADOkD,EAAAA,MAAWC,cAAcF,EAAGG,OAAOH,EAAGI,WAAW,IAAK,CAAEC,OAAQ,KACxDnD,KAAKoD,IACxB,MAAMC,EAAM,CACVzG,KAAM0G,OAAOF,EAAExG,MAAQ,IAAIkD,OAC3BjD,YAAayG,OAAOF,EAAEvG,aAAe,IAAIiD,OACzChD,OAAQwG,OAAOF,EAAEtG,QAAU,UAAUgD,OACrC7C,SAAUqG,OAAOF,EAAEnG,UAAY,IAAI8C,MAAM,OAAOC,KAAKC,GAAMA,EAAEH,SAAQI,OAAOC,UAE9E,GAAe,sBAAX1E,EAAgC,CAClC,MAAM8H,EAAQD,OAAOF,EAAEpG,QAAUoG,EAAErG,OAAS,IAAIgD,MAAM,OAAOC,KAAKC,GAAMA,EAAEH,SAAQI,OAAOC,SACzFkD,EAAIrG,OAASuG,EAAMvD,KAAKwD,IACtB,IAAKpB,EAAYoB,GAAI,MAAM,IAAIlB,MAAM,UAAUkB,gBAC/C,OAAOpB,EAAYoB,EAAE,GAEzB,KAAO,CACL,MAAMA,EAAIF,OAAOF,EAAErG,OAAS,IAAI+C,OAChCuD,EAAItG,MAAQyG,EAAKpB,EAAYoB,IAAM,MAAS,MAAM,IAAIlB,MAAM,UAAUkB,eAAkB,EAArD,GAA4D,EACjG,CACA,OAAOH,CAAG,UAENrF,EAAAA,EAAMqC,KACV,QAAQ5E,SACRoE,EACA,CAAE5B,QAAS,CAAE,eAAgB,mBAAoBC,cAAe,UAAUC,aAAaC,QAAQ,cAEjGO,MAAM,kBAAkBG,iBACxBjD,EAASoD,EACX,CAAE,MAAOT,GAAM,IAADiF,EAAAC,EACZ/E,MAAM,yBAAsC,QAAZ8E,EAAAjF,EAAII,gBAAQ,IAAA6E,GAAM,QAANC,EAAZD,EAAc1F,YAAI,IAAA2F,OAAN,EAAZA,EAAoB7E,UAAWL,EAAIK,SACrE,CAAC,QACCxC,GAAW,EACb,GAEFkG,EAAOoB,kBAAkBrH,EAAK,EA2OpBpB,UAAU,6EAA4EC,SAAA,EAEtFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,8BAGhEC,EAAAA,EAAAA,KAAA,SACEwF,KAAK,OACLU,UAAQ,EACRT,OAAO,UACPL,SAlOcrB,IAC9B,MAAM2B,EAAQzC,MAAMkD,KAAKpC,EAAEE,OAAOyB,OAClC,GAAItE,EAAW6F,OAASvB,EAAMuB,OAAS,GAAI,OAAO1D,MAAM,iBACxD,IAAK,IAAIW,KAAKwB,EAAO,GAAIxB,EAAEsE,KAAO,QAAa,OAAOjF,MAAM,GAAGW,EAAE1C,kBACjEH,GAAeoH,GAAS,IAAIA,KAAS/C,IAAO,EA+N5B5F,UAAU,+LAEXsB,EAAW6F,OAAS,IACnBjH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC5BqB,EAAWwD,KAAI,CAACV,EAAGwE,KAClB7I,EAAAA,EAAAA,MAAA,OAEEC,UAAU,qFAAoFC,SAAA,EAE9FF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBC,SAAA,CACpCmE,EAAE1C,KAAK,MAAI0C,EAAEsE,KAAO,MAAMG,QAAQ,GAAG,WAExC3I,EAAAA,EAAAA,KAAA,UACEwF,KAAK,SACLpB,QAASA,KAAMwE,OA1OhBC,EA0OgCH,EA1OxBrH,GAAeoH,GAASA,EAAK3D,QAAO,CAACgE,EAAGJ,IAAMA,IAAMG,MAA5DA,KA0OmC,EAClC/I,UAAU,oDAAmDC,SAC9D,aAVI2I,WAkBf7I,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,8BAGhEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,iEAGrCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uCAAsCC,SACrC,sBAAXM,EACG,0CACA,4CAENL,EAAAA,EAAAA,KAAA,UACEwF,KAAK,SACLpB,QA3RS2E,KAC3B,MAMMC,EAAO,IAAIC,KAAK,CAAC,GANI,sBAAX5I,EACZ,0CACA,6CACsB,sBAAXA,EACX,yCACA,sCAC6C,CAAEmF,KAAM,aACnD0D,EAAMC,IAAIC,gBAAgBJ,GAC1BK,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAON,EACTG,EAAEI,SAAW,UAAUpJ,QACvBiJ,SAASI,KAAKC,YAAYN,GAC1BA,EAAEO,QACFN,SAASI,KAAKG,YAAYR,EAAE,EA8QVvJ,UAAU,uIAAsIC,SACjJ,gCAKLF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+CAA8CC,SAAA,CAAC,4BACtCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAC,UAEzDC,EAAAA,EAAAA,KAAA,SACEwF,KAAK,OACLC,OAAO,kBACPL,SAAWrB,GAAM5C,EAAQ4C,EAAEE,OAAOyB,MAAM,IACxC5F,UAAU,6LACVuF,UAAQ,WAIdrF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCF,EAAAA,EAAAA,MAAA,UACE2F,KAAK,SACL1F,UAAU,mJAAkJC,SAAA,CAC7J,UACS2D,EAAM,oBAShC,C","sources":["Loading.jsx","components/Items/ImportEntity.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, NavLink, useLocation } from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst BASE_URL = \"\";\r\n\r\nexport default function ImportEntity({ entity: propEntity }) {\r\n  const { entity: paramEntity } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const entity = propEntity ?? paramEntity;\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const [mode, setMode] = useState(\"single\"); // \"single\" | \"bulk\"\r\n  const [loading, setLoading] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [imageFiles, setImageFiles] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    status: \"Active\",\r\n    image: \"\",\r\n    images: \"\",\r\n    features: \"\",\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [entityId, setEntityId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(location.search);\r\n    const id = query.get(\"id\");\r\n    if (id) {\r\n      setIsEditing(true);\r\n      setEntityId(id);\r\n      fetchEntity(id);\r\n    }\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, [location.search]);\r\n\r\n  const fetchEntity = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(\r\n        `/api/${entity}/${id}`,\r\n        { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n      );\r\n      const data = res.data.data;\r\n      setForm({\r\n        name: data.name || \"\",\r\n        description: data.description || \"\",\r\n        status: data.status || \"Active\",\r\n        image: data.image || \"\",\r\n        images: Array.isArray(data.images) ? data.images.join(\";\") : \"\",\r\n        features: Array.isArray(data.features) ? data.features.join(\";\") : \"\",\r\n      });\r\n    } catch (err) {\r\n      alert(\"Failed to fetch: \" + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const titleMap = {\r\n    categories: \"Category\",\r\n    subcategories: \"SubCategory\",\r\n    \"sub-subcategories\": \"Sub-SubCategory\",\r\n  };\r\n  const listRouteMap = {\r\n    categories: \"/categories-list\",\r\n    subcategories: \"/subcategories-list\",\r\n    \"sub-subcategories\": \"/sub-subcategory-list\",\r\n  };\r\n  const title = titleMap[entity] || \"Entity\";\r\n  const listRoute = listRouteMap[entity] || \"/\";\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((f) => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSingleImageChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const fd = new FormData();\r\n    fd.append(\"images\", file);\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.post(\r\n        `/api/${entity}/upload-images`,\r\n        fd,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      if (data.success) {\r\n        setForm((f) => ({ ...f, image: data.uploadedImages[file.name] }));\r\n      } else {\r\n        alert(\"Upload failed: \" + data.message);\r\n      }\r\n    } catch (err) {\r\n      alert(\"Upload error: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSingleImagesChange = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const fd = new FormData();\r\n    files.forEach((f) => fd.append(\"images\", f));\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.post(\r\n        `/api/${entity}/upload-images`,\r\n        fd,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      if (data.success) {\r\n        const joined = files\r\n          .map((f) => data.uploadedImages[f.name])\r\n          .filter(Boolean)\r\n          .join(\";\");\r\n        setForm((f) => ({ ...f, images: joined }));\r\n      } else {\r\n        alert(\"Upload failed: \" + data.message);\r\n      }\r\n    } catch (err) {\r\n      alert(\"Upload error: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSingleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const payload = {\r\n      name: form.name.trim(),\r\n      description: form.description.trim(),\r\n      status: form.status,\r\n      features: form.features.split(/;|,/).map((s) => s.trim()).filter(Boolean),\r\n    };\r\n    if (entity === \"sub-subcategories\") {\r\n      payload.images = form.images.split(/;|,/).map((s) => s.trim()).filter(Boolean);\r\n    } else {\r\n      payload.image = form.image;\r\n    }\r\n    try {\r\n      if (isEditing) {\r\n        await axios.put(\r\n          `/api/${entity}/${entityId}`,\r\n          payload,\r\n          { headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n        );\r\n        alert(`${title} updated`);\r\n      } else {\r\n        await axios.post(\r\n          `/api/${entity}`,\r\n          payload,\r\n          { headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n        );\r\n        alert(`${title} created`);\r\n      }\r\n      navigate(listRoute);\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBulkSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return alert(\"Please select a file\");\r\n    setLoading(true);\r\n    let uploadedMap = {};\r\n    try {\r\n      if (imageFiles.length) {\r\n        const fd = new FormData();\r\n        imageFiles.forEach((f) => fd.append(\"images\", f));\r\n        const { data } = await axios.post(\r\n          `/api/${entity}/upload-images`,\r\n          fd,\r\n          { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}`, \"Content-Type\": \"multipart/form-data\" } }\r\n        );\r\n        if (!data.success) throw new Error(data.message);\r\n        uploadedMap = data.uploadedImages;\r\n      }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      return alert(\"Image upload failed: \" + err.message);\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      try {\r\n        const arr = new Uint8Array(evt.target.result);\r\n        const wb = XLSX.read(arr, { type: \"array\" });\r\n        const rows = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]], { defval: \"\" });\r\n        const payload = rows.map((r) => {\r\n          const obj = {\r\n            name: String(r.name || \"\").trim(),\r\n            description: String(r.description || \"\").trim(),\r\n            status: String(r.status || \"Active\").trim(),\r\n            features: String(r.features || \"\").split(/;|,/).map((s) => s.trim()).filter(Boolean),\r\n          };\r\n          if (entity === \"sub-subcategories\") {\r\n            const names = String(r.images || r.image || \"\").split(/;|,/).map((s) => s.trim()).filter(Boolean);\r\n            obj.images = names.map((n) => {\r\n              if (!uploadedMap[n]) throw new Error(`Image \"${n}\" not found`);\r\n              return uploadedMap[n];\r\n            });\r\n          } else {\r\n            const n = String(r.image || \"\").trim();\r\n            obj.image = n ? (uploadedMap[n] || (() => { throw new Error(`Image \"${n}\" not found`); })()) : \"\";\r\n          }\r\n          return obj;\r\n        });\r\n        await axios.post(\r\n          `/api/${entity}/bulk`,\r\n          payload,\r\n          { headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n        );\r\n        alert(`Bulk import of ${title}s successful`);\r\n        navigate(listRoute);\r\n      } catch (err) {\r\n        alert(\"Bulk import failed: \" + (err.response?.data?.message || err.message));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const handleDownloadSample = () => {\r\n    const headers = entity === \"sub-subcategories\"\r\n      ? \"name,description,status,images,features\"\r\n      : \"name,description,status,image,features\";\r\n    const sample = entity === \"sub-subcategories\"\r\n      ? \"Name,Desc,Active,img1;img2,feat1;feat2\"\r\n      : \"Name,Desc,Active,img,feat1;feat2\";\r\n    const blob = new Blob([`${headers}\\n${sample}`], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `sample_${entity}.csv`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const handleImageFilesChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (imageFiles.length + files.length > 50) return alert(\"Max 50 images\");\r\n    for (let f of files) if (f.size > 1024 * 1024) return alert(`${f.name} too large`);\r\n    setImageFiles((prev) => [...prev, ...files]);\r\n  };\r\n\r\n  const removeImageFile = (idx) => setImageFiles((prev) => prev.filter((_, i) => i !== idx));\r\n\r\n  const removeSingleImage = (fn) => {\r\n    setForm((f) => ({\r\n      ...f,\r\n      images: f.images\r\n        .split(';')\r\n        .filter((name) => name !== fn)\r\n        .join(';'),\r\n    }));\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-50\">\r\n      <Navbar isSidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow md:flex-row\">\r\n        <Sidebar isSidebarOpen={sidebarOpen} />\r\n        <main className=\"flex-1 p-6 lg:p-8 overflow-y-auto\">\r\n          <header className=\"flex flex-col md:flex-row items-start md:items-center justify-between mb-6\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">\r\n                {mode === \"single\"\r\n                  ? isEditing\r\n                    ? `Edit ${title}`\r\n                    : `Create ${title}`\r\n                  : `Bulk Import ${title}s`}\r\n              </h1>\r\n              <p className=\"mt-1 text-sm text-gray-500\">\r\n                {mode === \"single\"\r\n                  ? `Manage individual ${title.toLowerCase()} details`\r\n                  : `Import multiple ${title.toLowerCase()}s via file upload`}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex gap-3 mt-4 md:mt-0\">\r\n              <button\r\n                onClick={() => setMode(\"single\")}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                  mode === \"single\"\r\n                    ? \"bg-blue-600 text-white\"\r\n                    : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                Single\r\n              </button>\r\n              <button\r\n                onClick={() => setMode(\"bulk\")}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                  mode === \"bulk\"\r\n                    ? \"bg-blue-600 text-white\"\r\n                    : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n                }`}\r\n              >\r\n                Bulk\r\n              </button>\r\n              <NavLink\r\n                to={listRoute}\r\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors\"\r\n              >\r\n                View {title} List\r\n              </NavLink>\r\n            </div>\r\n          </header>\r\n\r\n          {mode === \"single\" ? (\r\n            <form\r\n              onSubmit={handleSingleSubmit}\r\n              className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200 max-w-2xl mx-auto\"\r\n            >\r\n              <div className=\"grid gap-6\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Name <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    name=\"name\"\r\n                    value={form.name}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\r\n                    placeholder=\"Enter name\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Description\r\n                  </label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    value={form.description}\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\r\n                    rows=\"4\"\r\n                    placeholder=\"Enter description\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Status\r\n                  </label>\r\n                  <select\r\n                    name=\"status\"\r\n                    value={form.status}\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\r\n                  >\r\n                    <option value=\"Active\">Active</option>\r\n                    <option value=\"Inactive\">Inactive</option>\r\n                  </select>\r\n                </div>\r\n                {entity !== \"sub-subcategories\" ? (\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Image\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleSingleImageChange}\r\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-lg file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition-colors\"\r\n                    />\r\n                    {form.image && (\r\n                      <div className=\"mt-3\">\r\n                        <img\r\n                          src={`/vps/uploads/${entity}/${form.image}`}\r\n                          alt=\"preview\"\r\n                          className=\"w-24 h-24 object-cover rounded-lg border border-gray-200\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Images\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      multiple\r\n                      onChange={handleSingleImagesChange}\r\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-lg file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition-colors\"\r\n                    />\r\n                    {form.images && (\r\n                      <div className=\"mt-3 grid grid-cols-2 sm:grid-cols-3 gap-3\">\r\n                        {form.images.split(';').map((fn) => (\r\n                          <div key={fn} className=\"relative\">\r\n                            <img\r\n                              src={`/vps/uploads/${entity}/${fn}`}\r\n                              className=\"w-24 h-24 object-cover rounded-lg border border-gray-200\"\r\n                              alt=\"\"\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeSingleImage(fn)}\r\n                              className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 hover:bg-red-600 transition-colors\"\r\n                              title=\"Remove image\"\r\n                            >\r\n                              <svg\r\n                                className=\"w-4 h-4\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                              >\r\n                                <path\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  strokeWidth=\"2\"\r\n                                  d=\"M6 18L18 6M6 6l12 12\"\r\n                                />\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Features\r\n                  </label>\r\n                  <input\r\n                    name=\"features\"\r\n                    value={form.features}\r\n                    onChange={handleChange}\r\n                    placeholder=\"feat1;feat2\"\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\r\n                  />\r\n                  <p className=\"mt-1 text-xs text-gray-500\">\r\n                    Separate features with semicolons or commas (e.g., feat1;feat2)\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-6 flex justify-end\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n                >\r\n                  {isEditing ? `Update ${title}` : `Create ${title}`}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <form\r\n              onSubmit={handleBulkSubmit}\r\n              className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200 max-w-2xl mx-auto\"\r\n            >\r\n              <div className=\"grid gap-6\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Upload Images (Optional)\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageFilesChange}\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition-colors\"\r\n                  />\r\n                  {imageFiles.length > 0 && (\r\n                    <div className=\"mt-3 space-y-2\">\r\n                      {imageFiles.map((f, i) => (\r\n                        <div\r\n                          key={i}\r\n                          className=\"flex items-center justify-between p-2 bg-gray-50 rounded-lg border border-gray-200\"\r\n                        >\r\n                          <span className=\"text-sm text-gray-700\">\r\n                            {f.name} ({(f.size / 1024).toFixed(1)} KB)\r\n                          </span>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => removeImageFile(i)}\r\n                            className=\"text-red-500 hover:text-red-700 transition-colors\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    File Format Instructions\r\n                  </label>\r\n                  <div className=\"p-4 bg-gray-50 rounded-lg border border-gray-200\">\r\n                    <p className=\"text-sm text-gray-700\">\r\n                      Upload a CSV, XLS, or XLSX file with the following headers:\r\n                    </p>\r\n                    <p className=\"mt-1 font-mono text-sm text-gray-900\">\r\n                      {entity === \"sub-subcategories\"\r\n                        ? \"name,description,status,images,features\"\r\n                        : \"name,description,status,image,features\"}\r\n                    </p>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={handleDownloadSample}\r\n                      className=\"mt-2 inline-flex items-center px-3 py-1 bg-blue-100 text-blue-700 rounded-lg text-sm font-medium hover:bg-blue-200 transition-colors\"\r\n                    >\r\n                      Download Sample File\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Upload CSV / XLS / XLSX <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".csv,.xls,.xlsx\"\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition-colors\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-6 flex justify-end\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n                >\r\n                  Import {title}s\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","ImportEntity","_ref","entity","propEntity","paramEntity","useParams","navigate","useNavigate","location","useLocation","sidebarOpen","mode","setMode","loading","setLoading","file","setFile","imageFiles","setImageFiles","form","setForm","name","description","status","image","images","features","isEditing","setIsEditing","entityId","setEntityId","useEffect","id","URLSearchParams","search","get","fetchEntity","window","innerWidth","async","data","axios","headers","Authorization","localStorage","getItem","Array","isArray","join","err","_err$response","_err$response$data","alert","response","message","title","categories","subcategories","listRoute","handleChange","e","value","target","f","toLowerCase","onClick","NavLink","to","onSubmit","preventDefault","payload","trim","split","map","s","filter","Boolean","put","post","_err$response2","_err$response2$data","onChange","required","placeholder","rows","type","accept","files","fd","FormData","append","success","uploadedImages","src","alt","multiple","from","forEach","joined","fn","removeSingleImage","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","uploadedMap","length","Error","reader","FileReader","onload","arr","Uint8Array","evt","result","wb","XLSX","sheet_to_json","Sheets","SheetNames","defval","r","obj","String","names","n","_err$response3","_err$response3$data","readAsArrayBuffer","size","prev","i","toFixed","removeImageFile","idx","_","handleDownloadSample","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild"],"sourceRoot":""}