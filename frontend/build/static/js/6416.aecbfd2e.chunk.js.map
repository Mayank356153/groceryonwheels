{"version":3,"file":"static/js/6416.aecbfd2e.chunk.js","mappings":"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","sources":["Loading.jsx","components/Places/AddState.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","// src/components/States/AddState.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Navigate, useNavigate, useParams, NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\nexport default function AddState() {\r\n  // Hooks\r\n  const { stateId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    stateName: \"\",\r\n    country: \"\",\r\n    status: \"active\",\r\n  });\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  // Collapse sidebar on small screens\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // Fetch countries & existing state\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const res = await axios.get(\r\n          \"api/countries\",\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        setCountries(res.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Error fetching countries:\", err);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n\r\n    if (stateId) {\r\n      const fetchState = async (id) => {\r\n        setLoading(true);\r\n        try {\r\n          const token = localStorage.getItem(\"token\");\r\n          const res = await axios.get(\r\n            `api/states/${id}`,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          const data = res.data.data;\r\n          setFormData({\r\n            stateName: data.stateName || \"\",\r\n            country: data.country || \"\",\r\n            status: data.status || \"active\",\r\n          });\r\n        } catch (err) {\r\n          console.error(\"Error fetching state:\", err);\r\n          alert(\"Error fetching state data.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchState(stateId);\r\n    }\r\n  }, [stateId]);\r\n\r\n  // Admin-only guard\r\n  const role = localStorage.getItem(\"role\");\r\n  if (role !== \"admin\") {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      if (stateId) {\r\n        await axios.put(\r\n          `api/states/${stateId}`,\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"State updated successfully!\");\r\n      } else {\r\n        await axios.post(\r\n          \"api/states\",\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"State created successfully!\");\r\n      }\r\n      navigate(\"/state-list\");\r\n    } catch (err) {\r\n      console.error(\"Error submitting state:\", err);\r\n      alert(\"Error submitting state.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => navigate(\"/state-list\");\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className=\"flex-grow p-4 transition-all duration-300 w-full\">\r\n          <h1 className=\"mb-4 text-2xl font-bold\">\r\n            {stateId ? \"Edit State\" : \"Add State\"}\r\n          </h1>\r\n          <nav className=\"flex items-center text-xs text-gray-500 mb-4\">\r\n            <NavLink to=\"/dashboard\" className=\"flex items-center hover:text-cyan-600\">\r\n              <FaTachometerAlt className=\"mr-2\" /> Home\r\n            </NavLink>\r\n            <NavLink to=\"/state-list\" className=\"flex items-center mx-2 hover:text-cyan-600\">\r\n              <BiChevronRight className=\"text-gray-400 mt-1.5\" /> State List\r\n            </NavLink>\r\n            <BiChevronRight className=\"mx-2 text-gray-400 mt-1.5\" />\r\n            <span>{stateId ? \"Edit State\" : \"Add State\"}</span>\r\n          </nav>\r\n\r\n          <div className=\"p-6 bg-white rounded shadow-md\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">State Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"stateName\"\r\n                  value={formData.stateName}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">Country</label>\r\n                <select\r\n                  name=\"country\"\r\n                  value={formData.country}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {countries.map((c) => (\r\n                    <option key={c._id} value={c._id}>\r\n                      {c.countryName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">Status</label>\r\n                <select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                >\r\n                  <option value=\"active\">Active</option>\r\n                  <option value=\"inactive\">Inactive</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\r\n                >\r\n                  {stateId ? \"Update State\" : \"Create State\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","AddState","stateId","useParams","navigate","useNavigate","loading","setLoading","formData","setFormData","stateName","country","status","countries","setCountries","useEffect","window","innerWidth","async","token","localStorage","getItem","res","axios","get","headers","Authorization","data","err","console","error","fetchCountries","id","alert","fetchState","Navigate","to","replace","handleChange","e","prev","target","name","value","NavLink","FaTachometerAlt","BiChevronRight","onSubmit","preventDefault","put","post","type","onChange","required","map","c","_id","countryName","onClick","handleClose"],"sourceRoot":""}