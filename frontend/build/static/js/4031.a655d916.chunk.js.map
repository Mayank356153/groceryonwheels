{"version":3,"file":"static/js/4031.a655d916.chunk.js","mappings":"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","sources":["Loading.jsx","components/Dashboard/MetricCard.jsx","components/Dashboard/Card.jsx","components/Dashboard/BarChart.jsx","components/Dashboard/PieChart.jsx","components/Dashboard/AdminDashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import { FaCube } from 'react-icons/fa';\r\nimport { FaRegCalendarAlt } from 'react-icons/fa';\r\nconst MetricCard = ({\r\n    title,\r\n    value=0,\r\n    icon,\r\n    className=\"\",\r\n    props,\r\n}) => {\r\n    const Icon=icon\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <h2 className=\"text-3xl font-bold\">₹{value}</h2>\r\n        <p className=\"mt-1 text-sm uppercase\">{title}</p>\r\n      </div>\r\n      <div className=\"transition-transform duration-300 ease-in-out hover:scale-125\">\r\n        <Icon size={48} className=\"opacity-60\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricCard;\r\n","const Card = ({\r\n  title,\r\n  value = '0',\r\n  icon,\r\n  className = ''\r\n}) => {\r\n  const Icon = icon;\r\n  return (\r\n    <div className={`flex items-center text-left  w-full   text-white shadow-md rounded-xl bg-white  ${className}`}>\r\n      <div className=\"flex items-center justify-center w-24 h-24 text-white rounded-lg bg-gradient-to-br from-cyan-700 to-blue-600\">\r\n        <Icon size={64} />\r\n      </div>\r\n      <div className=\"ml-4\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800\">{value}</h2>\r\n        <p className=\"text-lg font-semibold text-gray-700 uppercase\">{title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;","\r\n// // import {\r\n// //   BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n// // } from 'recharts';\r\n// // import axios from 'axios';\r\n// // import { useState, useLayoutEffect } from 'react';\r\n// // import dayjs from 'dayjs'; // install if needed: npm install dayjs\r\n// // import LoadingScreen from '../../Loading';\r\n// // const BarChartComponent = ({active}) => {\r\n// //   const [chartData, setChartData] = useState([]);\r\n// // const[loading,setLoading]=useState(false)\r\n// //   const fetchChart = async () => {\r\n// //     try {\r\n// //       setLoading(true)\r\n// //       const response = await axios.get(\r\n// //         `api/dashboard-chart-data?interval=${active}`,\r\n// //         {\r\n// //           headers: {\r\n// //             Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n// //           },\r\n// //         }\r\n// //       );\r\n// // // console.log(response.data)\r\n// //       const { purchases, sales, expenses } = response.data.data;\r\n\r\n// //       // Helper to group by month\r\n// //       const monthlyTotals = {};\r\n\r\n// //       const addToMonth = (list, key) => {\r\n// //         list.forEach(({ _id, total }) => {\r\n// //           let label = \"\";\r\n\r\n// //           if (active === \"daily\") {\r\n// //             label = dayjs(_id).format(\"DD MMM,YYYY\");\r\n// //           } else if (active === \"weekly\") {\r\n// //             const startOfWeek = dayjs(_id).startOf(\"week\").format(\"DD MMM\");\r\n// //             const endOfWeek = dayjs(_id).endOf(\"week\").format(\"DD MMM,YYYY\");\r\n// //             label = `${startOfWeek} - ${endOfWeek}`;\r\n// //           } else if (active === \"monthly\") {\r\n// //             label = dayjs(_id).format(\"MMM,YYYY\");\r\n// //           } else if (active === \"yearly\") {\r\n// //             label = dayjs(_id).format(\"YYYY\");\r\n// //           }\r\n          \r\n// //           if (!monthlyTotals[label]) {\r\n// //             monthlyTotals[label] = { month:label, Purchase: 0, Sales: 0, Expense: 0 };\r\n// //           }\r\n// //           monthlyTotals[label][key] += total;\r\n// //         });\r\n// //       };\r\n\r\n// //       addToMonth(purchases, \"Purchase\");\r\n// //       addToMonth(sales, \"Sales\");\r\n// //       addToMonth(expenses, \"Expense\");\r\n\r\n// //       // Convert object back to sorted array\r\n// //       const finalData = Object.values(monthlyTotals).sort((a, b) =>\r\n// //         dayjs(a.month, \"MMM,YYYY\").isAfter(dayjs(b.month, \"MMM,YYYY\")) ? 1 : -1\r\n// //       );\r\n\r\n// //       setChartData(finalData);\r\n// //     } catch (err) {\r\n// //       console.log(err.message);\r\n// //     }\r\n// //     finally{\r\n// //       setLoading(false)\r\n// //     }\r\n// //   };\r\n\r\n// //   useLayoutEffect(() => {\r\n// //     fetchChart();\r\n// //   }, [active]);\r\n// // if(loading) <LoadingScreen />\r\n// //   return (\r\n// //     <div className=\"w-full p-4 bg-white border-t-4 border-blue-700 rounded-md shadow-md\">\r\n// //       <h3 className=\"mb-2 text-lg font-semibold text-gray-700\">\r\n// //         Purchase, Sales & Expense Bar Chart\r\n// //       </h3>\r\n// //       <ResponsiveContainer width=\"100%\" height={500}>\r\n// //         <BarChart data={chartData} margin={{ top: 10, right: 20, left: 0, bottom: 5 }}>\r\n// //           <CartesianGrid strokeDasharray=\"3 3\" />\r\n// //           <XAxis dataKey=\"month\" />\r\n// //           <YAxis />\r\n// //           <Tooltip />\r\n// //           <Legend />\r\n// //           <Bar dataKey=\"Purchase\" fill=\"orangered\" />\r\n// //           <Bar dataKey=\"Sales\" fill=\"blue\" />\r\n// //           <Bar dataKey=\"Expense\" fill=\"green\" />\r\n// //         </BarChart>\r\n// //       </ResponsiveContainer>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default BarChartComponent;\r\n// import {\r\n//   BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n// } from 'recharts';\r\n// import axios from 'axios';\r\n// import { useState, useLayoutEffect } from 'react';\r\n// import dayjs from 'dayjs';\r\n// import Skeleton from 'react-loading-skeleton'; // Import Skeleton\r\n// import 'react-loading-skeleton/dist/skeleton.css'; // Import styles for skeleton\r\n\r\n// const BarChartComponent = ({ active }) => {\r\n//   const [chartData, setChartData] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const fetchChart = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.get(\r\n//         `api/dashboard-chart-data?interval=${active}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       const { purchases, sales, expenses } = response.data.data;\r\n\r\n//       const monthlyTotals = {};\r\n\r\n//       const addToMonth = (list, key) => {\r\n//         list.forEach(({ _id, total }) => {\r\n//           let label = \"\";\r\n\r\n//           if (active === \"daily\") {\r\n//             label = dayjs(_id).format(\"DD MMM,YYYY\");\r\n//           } else if (active === \"weekly\") {\r\n//             const startOfWeek = dayjs(_id).startOf(\"week\").format(\"DD MMM\");\r\n//             const endOfWeek = dayjs(_id).endOf(\"week\").format(\"DD MMM,YYYY\");\r\n//             label = `${startOfWeek} - ${endOfWeek}`;\r\n//           } else if (active === \"monthly\") {\r\n//             label = dayjs(_id).format(\"MMM,YYYY\");\r\n//           } else if (active === \"yearly\") {\r\n//             label = dayjs(_id).format(\"YYYY\");\r\n//           }\r\n\r\n//           if (!monthlyTotals[label]) {\r\n//             monthlyTotals[label] = { month: label, Purchase: 0, Sales: 0, Expense: 0 };\r\n//           }\r\n//           monthlyTotals[label][key] += total;\r\n//         });\r\n//       };\r\n\r\n//       addToMonth(purchases, \"Purchase\");\r\n//       addToMonth(sales, \"Sales\");\r\n//       addToMonth(expenses, \"Expense\");\r\n\r\n//       const finalData = Object.values(monthlyTotals).sort((a, b) =>\r\n//         dayjs(a.month, \"MMM,YYYY\").isAfter(dayjs(b.month, \"MMM,YYYY\")) ? 1 : -1\r\n//       );\r\n\r\n//       setChartData(finalData);\r\n//     } catch (err) {\r\n//       console.log(err.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   useLayoutEffect(() => {\r\n//     fetchChart();\r\n//   }, [active]);\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div className=\"relative h-[500px] w-full flex items-center justify-center\">\r\n//           <Skeleton height={500} width=\"100%\" />\r\n//           <div className=\"absolute\">\r\n//             <svg className=\"w-8 h-8 text-blue-500 animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n//               <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n//               <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v4l4-4-4-4v4a12 12 0 00-12 12h4z\" />\r\n//             </svg>\r\n//           </div>\r\n//         </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"w-full p-4 bg-white border-t-4 border-blue-700 rounded-md shadow-md\">\r\n//       <h3 className=\"mb-2 text-lg font-semibold text-gray-700\">\r\n//         Purchase, Sales & Expense Bar Chart\r\n//       </h3>\r\n//       <ResponsiveContainer width=\"100%\" height={500}>\r\n//         <BarChart data={chartData} margin={{ top: 10, right: 20, left: 0, bottom: 5 }}>\r\n//           <CartesianGrid strokeDasharray=\"3 3\" />\r\n//           <XAxis dataKey=\"month\" />\r\n//           <YAxis />\r\n//           <Tooltip />\r\n//           <Legend />\r\n//           <Bar dataKey=\"Purchase\" fill=\"orangered\" />\r\n//           <Bar dataKey=\"Sales\" fill=\"blue\" />\r\n//           <Bar dataKey=\"Expense\" fill=\"green\" />\r\n//         </BarChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BarChartComponent;\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nconst BarChartComponent = ({ active }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchChart = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `api/dashboard-chart-data?interval=${active}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const { purchases, sales, expenses } = response.data.data;\r\n      const monthlyTotals = {};\r\n\r\n      const addToMonth = (list, key) => {\r\n        list.forEach(({ _id, total }) => {\r\n          let label = \"\";\r\n\r\n          if (active === \"daily\") {\r\n            label = dayjs(_id).format(\"DD MMM,YYYY\");\r\n          } else if (active === \"weekly\") {\r\n            const startOfWeek = dayjs(_id).startOf(\"week\").format(\"DD MMM\");\r\n            const endOfWeek = dayjs(_id).endOf(\"week\").format(\"DD MMM,YYYY\");\r\n            label = `${startOfWeek} - ${endOfWeek}`;\r\n          } else if (active === \"monthly\") {\r\n            label = dayjs(_id).format(\"MMM,YYYY\");\r\n          } else if (active === \"yearly\") {\r\n            label = dayjs(_id).format(\"YYYY\");\r\n          }\r\n\r\n          if (!monthlyTotals[label]) {\r\n            monthlyTotals[label] = { month: label, Purchase: 0, Sales: 0, Expense: 0 };\r\n          }\r\n          monthlyTotals[label][key] += total;\r\n        });\r\n      };\r\n\r\n      addToMonth(purchases, \"Purchase\");\r\n      addToMonth(sales, \"Sales\");\r\n      addToMonth(expenses, \"Expense\");\r\n\r\n      const finalData = Object.values(monthlyTotals).sort((a, b) =>\r\n        dayjs(a.month, \"MMM,YYYY\").isAfter(dayjs(b.month, \"MMM,YYYY\")) ? 1 : -1\r\n      );\r\n\r\n      setChartData(finalData);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChart();\r\n  }, [active]);\r\n\r\n  return (\r\n    <div className=\"w-full p-4 transition-all duration-300 bg-white border-t-4 border-blue-700 rounded-md shadow-md\">\r\n      <h3 className=\"mb-4 text-lg font-semibold text-gray-700\">\r\n        Purchase, Sales & Expense Bar Chart\r\n      </h3>\r\n\r\n      <div className=\"relative w-full h-[500px]\">\r\n        {loading ? (\r\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-gray-100 rounded animate-pulse\">\r\n            <div className=\"w-10 h-10 mb-4 border-t-4 border-blue-500 border-solid rounded-full animate-spin\"></div>\r\n            <p className=\"font-medium text-gray-600\">Fetching chart data...</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"w-full h-full fade-in\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart data={chartData} margin={{ top: 10, right: 20, left: 0, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"month\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"Purchase\" fill=\"orangered\" />\r\n                <Bar dataKey=\"Sales\" fill=\"blue\" />\r\n                <Bar dataKey=\"Expense\" fill=\"green\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChartComponent;\r\n","import { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\r\nimport { useEffect,useState } from 'react';\r\nimport axios from 'axios';\r\n// const data = [\r\n//   { name: 'Item 1', value: 400 },\r\n//   { name: 'Item 2', value: 300 },\r\n//   { name: 'Item 3', value: 300 },\r\n//   { name: 'Item 4', value: 200 },\r\n//   { name: 'Item 5', value: 278 },\r\n//   { name: 'Item 6', value: 189 },\r\n//   { name: 'Item 7', value: 239 },\r\n//   { name: 'Item 8', value: 349 },\r\n//   { name: 'Item 9', value: 450 },\r\n//   { name: 'Item 10', value: 120 },\r\n// ];\r\n\r\nconst COLORS = [\r\n  '#8884d8', '#8dd1e1', '#82ca9d', '#a4de6c', '#d0ed57',\r\n  '#ffc658', '#ff8042', '#00C49F', '#FFBB28', '#FF8042',\r\n];\r\n\r\nexport default function TrendingItemsDonut() {\r\n  const[data,setData]=useState([])\r\n  const fetchTrendingItems = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'api/items/top-trending?limit=10',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n      const newData=response.data.data.map((item)=>({\r\n        name:item.itemName,\r\n        value:item.totalSold\r\n      }))\r\n      console.log(newData)\r\n      setData(newData)\r\n      console.log(response.data)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } \r\n  };\r\n \r\n  useEffect(()=>{\r\n    fetchTrendingItems();\r\n  },[])\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full \">\r\n      <h2 className=\"mb-4 text-lg font-semibold\">TOP 10 TRENDING ITEMS</h2>\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          innerRadius={100}\r\n          outerRadius={160}\r\n          fill=\"#8884d8\"\r\n          paddingAngle={3}\r\n          dataKey=\"value\"\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend verticalAlign=\"top\" height={36} />\r\n      </PieChart>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport { useState,useEffect } from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport MetricCard from \"./MetricCard\";\r\nimport Card from \"./Card\";\r\nimport axios from \"axios\";\r\nimport { FaCube,FaRegCalendarAlt ,FaMinusSquare,FaFileAlt,FaUsers,FaTruck,FaBriefcase,FaShoppingCart} from 'react-icons/fa';\r\nimport BarChartComponent from \"./BarChart\";\r\nimport TrendingItemsDonut from \"./PieChart\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport LoadingScreen from \"../../Loading\";\r\nconst Dashboard = () => {\r\n   const[data,setData]=useState([])\r\n   const[items,setItems]=useState([])\r\n   const[lowStock,setLowStock]=useState([])\r\n   const[sale,setSale]=useState([])\r\n   const[searchTerm,setSearchTerm]=useState(\"\")\r\n   const[entriesPerPage,setEntriesPerPage]=useState(10)\r\n   const[currentPage,setCurrentPage]=useState(1)\r\n   const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n   const[active,setActive]=useState(\"daily\")\r\n   useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[window.innerWidth])\r\n  const fetchDashboardSummary = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'api/dashboard-summary',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n      setData(response.data.data); \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } \r\n  };\r\n  const fetchRecentlyAdded = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'api/items/summary',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n      setItems(response.data.data); \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } \r\n  };\r\n  const fetchStockAlert = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'api/items/low-stock?threshold=10',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n      // Replace with actual API URL\r\n      \r\n      // console.log(response.data)\r\n      setLowStock(response.data.data); \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } \r\n  };\r\n  const fetchSaleInvoice = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'api/sales/recent?limit=10',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          }\r\n        }\r\n      );\r\n      setSale(response.data.data)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } \r\n  };\r\n \r\n  \r\n   useEffect(()=>\r\n    {\r\n      fetchDashboardSummary();\r\n      fetchRecentlyAdded();\r\n      fetchStockAlert();\r\n      fetchSaleInvoice();\r\n    },[])\r\n   \r\n// Filter the data based on search term\r\nconst filteredData = lowStock.filter(item => {\r\n  const searchTermLower = searchTerm.toLowerCase();\r\n  return item.itemName?.toLowerCase().includes(searchTermLower);\r\n});\r\n\r\n// Pagination calculations\r\nconst indexOfLastItem = currentPage * entriesPerPage;\r\nconst indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\nconst totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n\r\n// Get current page's items\r\nconst currentUsers = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n// Handle page change\r\nconst handlePageChange = (newPage) => {\r\n  if (newPage >= 1 && newPage <= totalPages) {\r\n    setCurrentPage(newPage);\r\n  }\r\n};\r\n\r\n// Handle change in entries per page dropdown/input\r\nconst handleEntriesChange = (e) => {\r\n  setEntriesPerPage(Number(e.target.value));\r\n  setCurrentPage(1); // Reset to first page when entries per page changes\r\n};\r\n\r\n\r\n    const handleCopy = () => {\r\n        const data = currentPage.map(item => `${item.itemName}, ${item.category?.name}, ${item.brand?.brnadName}`).join('\\n');\r\n        navigator.clipboard.writeText(data);\r\n        alert(\"Data copied to clipboard!\");\r\n    };\r\n\r\n    const handleExcelDownload = () => {\r\n        const ws = XLSX.utils.json_to_sheet(lowStock);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"LowStock\");\r\n        XLSX.writeFile(wb, \"low_stock.xlsx\");\r\n    };\r\n\r\n    const handlePdfDownload = () => {\r\n        const doc = new jsPDF();\r\n        doc.text(\"Low Stock List\", 20, 20);\r\n        const tableData = lowStock.map((item,index) => [index+1,item.itemName, item.category?.name, item.brand?.brandName]);\r\n        autoTable(doc, {\r\n            head: [['#','Item Name','Category Name','Brand Name']],\r\n            body: tableData,\r\n        });\r\n        doc.save('lowStock.pdf');\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        window.print();\r\n    };\r\n\r\n    const handleCsvDownload = () => {\r\n        const csvContent = \"data:text/csv;charset=utf-8,\" + lowStock.map(item => Object.values(item).join(\",\")).join(\"\\n\");\r\n        const encodedUri = encodeURI(csvContent);\r\n        const link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"low_stock.csv\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n  return (\r\n    <div className=\"flex flex-col \">\r\n    {/* Navbar */}\r\n    <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n        {/* Main Content */}\r\n        <div className=\"box-border flex min-h-screen bg-gray-400\">\r\n          {/* Sidebar */}\r\n          \r\n        {/* Sidebar component with open state */}\r\n          <div className=\"w-auto\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n            \r\n          </div>\r\n          \r\n          \r\n\r\n       \r\n    <div className=\"flex flex-col w-full px-2 py-2 mx-auto overflow-x-auto bg-gray-200\">\r\n\r\n\r\n         {/* //Heading */}\r\n         <header className=\"text-2xl font-semibold text-gray-700\">DashBoard</header>\r\n          \r\n          \r\n          \r\n          {/* Set Day Buttons */}\r\n         <div className=\"flex justify-end w-full mt-2\">\r\n         <button className={`px-2 py-2 border rounded-l-md ${active===\"daily\"?\"bg-cyan-500 text-white\":\"bg-blue-400\"}`} onClick={()=>setActive('daily')} >Today</button>\r\n  <button className={`px-2 py-2 border  ${active===\"weekly\"?\"bg-cyan-500 text-white\":\"bg-blue-400\"}`} onClick={()=>setActive(\"weekly\")} onCLick={()=>setActive(\"weekly\")}>Weekly</button> \r\n  <button className={`px-2 py-2 border  ${active===\"monthly\"?\"bg-cyan-500 text-white\":\"bg-blue-400\"}`} onClick={()=>setActive(\"monthly\")}onCLick={()=>setActive(\"monthly\")}>Monthly</button> \r\n  <button className={`px-2 py-2 border  ${active===\"yearly\"?\"bg-cyan-500 text-white\":\"bg-blue-400\"}`} onClick={()=>setActive(\"yearly\")}onCLick={()=>setActive(\"yearly\")}>Yearly</button> \r\n  <button className={`px-3 py-2 border rounded-r-md ${active===\"all\"?\"bg-cyan-500 text-white\":\"bg-blue-400\"}`} onClick={()=>setActive(\"all\")}onCLick={()=>setActive(\"yearly\")}>All</button> \r\n        </div>\r\n\r\n        \r\n{/* //Metric Show       */} \r\n<div className=\"grid w-full grid-cols-1 gap-4 mt-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n  <MetricCard\r\n    title=\"Purchase Due\"\r\n    // value={data.purchaseDue}\r\n    value={data?.purchaseDue || '0'}\r\n    icon={FaCube}\r\n    className=\"flex items-center justify-between w-full p-4 text-white shadow-md rounded-xl bg-gradient-to-r from-purple-600 to-pink-500 h-28\"\r\n  />\r\n  <MetricCard\r\n    title=\"Sales Due\"\r\n    value={data?.salesDue || '0'}\r\n    icon={FaRegCalendarAlt}\r\n    className=\"flex items-center justify-between w-full p-4 text-white shadow-md rounded-xl bg-gradient-to-r from-orange-500 to-pink-600 h-28\"\r\n  />\r\n  <MetricCard\r\n    title=\"Sales\"\r\n    value={data?.totalSales || '0'}\r\n    icon={FaFileAlt}\r\n    className=\"flex items-center justify-between w-full p-4 text-white shadow-md rounded-xl bg-gradient-to-r from-green-500 to-cyan-400 h-28\"\r\n  />\r\n  <MetricCard\r\n    title=\"Expense\"\r\n    value={data?.totalExpense || '0'}\r\n    icon={FaMinusSquare}\r\n    className=\"flex items-center justify-between w-full p-4 text-white shadow-md rounded-xl bg-gradient-to-r from-blue-900 to-sky-500 h-28\"\r\n  />\r\n</div> \r\n\r\n{/* Card */}\r\n<div className=\"grid grid-cols-1 gap-4 mt-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n  <Card title=\"Customers\" value={data?.customerCount || '0'} icon={FaUsers} />\r\n  <Card title=\"Suppliers\" value={data?.supplierCount || '0'} icon={FaTruck} />\r\n  <Card title=\"Purchases\" value={data?.purchaseCount || '0'} icon={FaBriefcase} />\r\n  <Card title=\"Invoices\" value={data?.invoiceCount || '0'} icon={FaShoppingCart} />\r\n</div>\r\n{/* For chart and trending items */}\r\n<div className=\"flex flex-col w-full gap-4 p-2 mt-4 md:flex-row\">\r\n  <BarChartComponent active={active}/>\r\n  <div className=\"w-full h-auto bg-white border-t-4 border-blue-700 rounded-md md:w-1/2 md:m-0\">\r\n    <h5 className=\"p-2 text-center border-b-2 border-gray-300\">RECENTLY ADDED ITEMS</h5>\r\n    <div className=\"h-50\">\r\n    <table className=\"w-full border-collapse table-auto h-50\">\r\n  <thead>\r\n    <tr className=\"border-b-2 border-gray-300\">\r\n      <th className=\"px-2 py-1 text-left\">Sl.No</th>\r\n      <th className=\"px-2 text-left\">Item Name</th>\r\n      <th className=\"px-2 text-left\">Item Sales Price</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {items?.slice(-12).map((item, index) => (\r\n  <tr key={index} className=\"border-b border-gray-200 hover:bg-gray-50\">\r\n    <td className=\"px-4 py-2\">{index + 1}</td>\r\n    <td className=\"px-4 py-2\">{item.itemName}</td>\r\n    <td className=\"px-4 py-2\">{item.salesPrice}</td>\r\n  </tr>\r\n))}\r\n\r\n   \r\n  </tbody>\r\n</table>\r\n</div>\r\n  </div>\r\n</div>\r\n\r\n{/* Stock alert */}\r\n<div className=\"flex flex-col w-full py-4 mt-3 bg-white border-t-4 border-blue-600 rounded-md\">\r\n  <h5 className=\"px-2 py-2\">STOCK ALERT</h5>\r\n  <div className=\"flex flex-col items-start justify-between w-full gap-2 px-2 md:items-center md:flex-row md:gap-0\">\r\n    <div>\r\n      <span>show</span>\r\n      <select className=\"px-2 py-1 ml-1 border\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n        <option value=\"10\">10</option>\r\n        <option value=\"10\">20</option>\r\n        <option value=\"10\">50</option>\r\n      </select>\r\n      <span>entries</span>\r\n    </div>\r\n    <div className=\"flex flex-col items-start gap-2 md:items-center md:flex-row\">\r\n    <div className='flex items-center w-full gap-2'>\r\n    <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n    </div>\r\n    <label  htmlFor=\"\">Search <input type=\"text\" className=\"px-2 py-1 border \" value={searchTerm} onChange={(e)=>setSearchTerm(e.target.value)}/></label>\r\n    </div>\r\n   \r\n  </div>\r\n  <div className=\"w-full mt-4 overflow-x-auto\">\r\n  <table className=\"min-w-full border border-gray-200\">\r\n  <thead>\r\n    <tr className=\"text-sm font-semibold text-gray-700 bg-gray-50\">\r\n      <th className=\"w-12 px-4 py-2 text-left border\">#</th>\r\n      <th className=\"px-4 py-2 text-left border\">Item Name</th>\r\n      <th className=\"px-4 py-2 text-left border\">Category Name</th>\r\n      <th className=\"px-4 py-2 text-left border\">Brand Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody className=\"text-sm text-gray-600\">\r\n    {currentUsers.length>0?currentUsers.map((item,index)=>(\r\n       <tr>\r\n       <td className=\"px-4 py-2 border\">{index+1}</td>\r\n       <td className=\"px-4 py-2 border\">{item.itemName}</td>\r\n       <td className=\"px-4 py-2 border\">{item.category?.name}</td>\r\n       <td className=\"px-4 py-2 border\">{item.brand?.brandName || \"NA\"}</td>\r\n     </tr>\r\n    )):\r\n    <tr>\r\n      <td className=\"px-2 py-2 font-semibold text-center\" colSpan='4'>\r\n        No Data Available\r\n      </td>\r\n    </tr>\r\n    }\r\n  </tbody>\r\n</table>\r\n\r\n  </div>\r\n  <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, lowStock.length)} of {lowStock.length} entries</span>           \r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n      onClick={()=>handlePageChange(currentPage-1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage >= totalPages || totalPages === 0 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n      disabled={currentPage >= totalPages || totalPages === 0 }  \r\n      onClick={()=>handlePageChange(currentPage+1)}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n  \r\n  </div> \r\n  \r\n  {/* Trending and Sales invoice */}\r\n{/* <div className=\"flex flex-col w-full gap-4 mt-4 mb-2 md:flex-row\">\r\n  <div className=\"w-full bg-white border-t-4 border-blue-700 rounded-md\">\r\n    <TrendingItemsDonut />\r\n  </div>\r\n      <div className=\"flex flex-col \">\r\n        <div className=\"p-4 bg-white border-t-4 border-blue-700 rounded-t-lg\">\r\n          <h2 className=\"text-xl font-semibold\">Recent Sales Invoices</h2>\r\n        </div>\r\n        <div className=\"overflow-x-auto \">\r\n        <table className=\"overflow-x-auto bg-white border border-gray-200\">\r\n          <thead>\r\n            <tr className=\"text-left bg-gray-100\">\r\n              <th className=\"px-2 py-2 text-sm border-b \">Sl.No</th>\r\n              <th className=\"px-4 py-2 text-sm border-b\">Date</th>\r\n              <th className=\"px-2 py-2 text-sm border-b\">Invoice ID</th>\r\n              <th className=\"px-2 py-2 text-sm border-b\">Customer</th>\r\n              <th className=\"px-2 py-2 text-sm border-b\">Total</th>\r\n              <th className=\"px-2 py-2 text-sm border-b\">Status</th>\r\n              <th className=\"px-2 py-2 text-sm border-b\">Created by</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sale.length>0?(\r\n              sale.map((item,index)=>(\r\n                <tr className=\"text-center\">\r\n                <td className=\"px-4 text-sm border-b \">{index+1}</td>\r\n                <td className=\"py-2 text-sm border-b \">{new Date(item.createdAt).toDateString()}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.saleCode}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.customer?.email}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.grandTotal || '0'}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.status}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.createdBy?.name}</td>\r\n              </tr>\r\n              ))\r\n            ):(\r\n              <tr className=\"text-left bg-gray-100\">\r\n              <th className=\"px-2 py-2 text-sm border-b\">No Data Available</th>\r\n            </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n  \r\n  </div>        */}\r\n      <div className=\"flex flex-col w-full gap-4 mt-4 mb-2 overflow-x-auto md:flex-row\">\r\n  <div className=\"w-full bg-white border-t-4 border-blue-700 rounded-md\">\r\n    <TrendingItemsDonut />\r\n  </div>\r\n\r\n  <div className=\"flex flex-col \">\r\n    <div className=\"w-full p-4 bg-white border-t-4 border-blue-700 rounded-t-lg\">\r\n      <h2 className=\"text-xl font-semibold\">Recent Sales Invoices</h2>\r\n    </div>\r\n\r\n    <div className=\"w-full overflow-x-auto border border-gray-200 rounded-b-md \">\r\n      <table className=\"min-w-[800px] w-full bg-white\">\r\n        <thead>\r\n          <tr className=\"text-left bg-gray-100\">\r\n            <th className=\"px-2 py-2 text-sm border-b\">Sl.No</th>\r\n            <th className=\"px-4 py-2 text-sm border-b\">Date</th>\r\n            <th className=\"px-2 py-2 text-sm border-b\">Invoice ID</th>\r\n            <th className=\"px-2 py-2 text-sm border-b\">Customer</th>\r\n            <th className=\"px-2 py-2 text-sm border-b\">Total</th>\r\n            <th className=\"px-2 py-2 text-sm border-b\">Status</th>\r\n            <th className=\"px-2 py-2 text-sm border-b\">Created by</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sale.length > 0 ? (\r\n            sale.map((item, index) => (\r\n              <tr key={item._id} className=\"text-center\">\r\n                <td className=\"px-4 text-sm border-b\">{index + 1}</td>\r\n                <td className=\"py-2 text-sm border-b\">\r\n                  {new Date(item.createdAt).toDateString()}\r\n                </td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.saleCode}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.customer?.email}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.grandTotal || '0'}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.status}</td>\r\n                <td className=\"px-2 py-2 text-sm border-b\">{item.createdBy?.name}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"7\" className=\"px-4 py-4 text-sm text-center text-gray-500\">\r\n                No Data Available\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n      </div> \r\n    \r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dashboard;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","_ref","title","value","icon","props","Icon","size","active","chartData","setChartData","loading","setLoading","useEffect","async","response","axios","get","headers","Authorization","localStorage","getItem","purchases","sales","expenses","data","monthlyTotals","addToMonth","list","key","forEach","_ref2","_id","total","label","dayjs","format","startOf","endOf","month","Purchase","Sales","Expense","finalData","Object","values","sort","a","b","isAfter","err","console","log","message","fetchChart","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","COLORS","TrendingItemsDonut","setData","newData","map","item","name","itemName","totalSold","fetchTrendingItems","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","entry","index","Cell","length","verticalAlign","Dashboard","items","setItems","lowStock","setLowStock","sale","setSale","searchTerm","setSearchTerm","entriesPerPage","setEntriesPerPage","currentPage","setCurrentPage","setActive","window","innerWidth","fetchDashboardSummary","fetchRecentlyAdded","fetchStockAlert","fetchSaleInvoice","filteredData","filter","_item$itemName","searchTermLower","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","totalPages","Math","ceil","currentUsers","slice","handlePageChange","newPage","onClick","onCLick","MetricCard","purchaseDue","FaCube","salesDue","FaRegCalendarAlt","totalSales","FaFileAlt","totalExpense","FaMinusSquare","Card","customerCount","FaUsers","supplierCount","FaTruck","purchaseCount","FaBriefcase","invoiceCount","FaShoppingCart","BarChartComponent","salesPrice","onChange","e","Number","target","handleCopy","_item$category","_item$brand","category","brand","brnadName","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","_item$category2","_item$brand2","brandName","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","htmlFor","type","_item$category3","_item$brand3","colSpan","min","disabled","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d","_item$customer","_item$createdBy","Date","createdAt","toDateString","saleCode","customer","email","grandTotal","status","createdBy"],"sourceRoot":""}