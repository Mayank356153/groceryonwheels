{"version":3,"file":"static/js/2616.a9c5b1d9.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/SubSubCategoryList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","// src/components/SubSubCategoryList.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport axios from \"axios\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function SubSubCategoryList() {\r\n  const [isSidebarOpen, setSidebarOpen]       = useState(true);\r\n  const [subSubCategories, setSubSubCategories] = useState([]);\r\n  const [loading, setLoading]                 = useState(false);\r\n  const [dropdownIndex, setDropdownIndex]     = useState(null);\r\n  const [searchTerm, setSearchTerm]           = useState(\"\");\r\n  const [entriesPerPage, setEntriesPerPage]   = useState(10);\r\n  const [currentPage, setCurrentPage]         = useState(1);\r\n  const navigate                              = useNavigate();\r\n  const BASE_URL = ''; \r\n  const [modalImage, setModalImage] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n    fetchSubSubCategories();\r\n  }, []);\r\n\r\n  const fetchSubSubCategories = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(\r\n        \"/api/sub-subcategories\",\r\n        { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n      );\r\n      const arr = Array.isArray(res.data)\r\n        ? res.data\r\n        : Array.isArray(res.data.data)\r\n          ? res.data.data\r\n          : [];\r\n      setSubSubCategories(arr);\r\n    } catch (err) {\r\n      console.error(\"Error fetching sub-subcategories:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // filter & paginate\r\n  const filtered = subSubCategories.filter(ssc =>\r\n    ssc.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const totalPages = Math.ceil(filtered.length / entriesPerPage);\r\n  const displayed = filtered.slice(\r\n    (currentPage - 1) * entriesPerPage,\r\n    currentPage * entriesPerPage\r\n  );\r\n  const nextPage = () => currentPage < totalPages && setCurrentPage(currentPage + 1);\r\n  const prevPage = () => currentPage > 1 && setCurrentPage(currentPage - 1);\r\n\r\n  // exports\r\n  const handleCopy = () => {\r\n    const txt = displayed\r\n      .map(i => [i.name, i.description, i.status].join(\",\"))\r\n      .join(\"\\n\");\r\n    navigator.clipboard.writeText(txt);\r\n    alert(\"Copied to clipboard!\");\r\n  };\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filtered);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"SubSubCategories\");\r\n    XLSX.writeFile(wb, \"subsubcategories_list.xlsx\");\r\n  };\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Sub‑SubCategory List\", 20, 20);\r\n    autoTable(doc, {\r\n      head: [[\"Name\", \"Description\", \"Status\"]],\r\n      body: filtered.map(i => [i.name, i.description, i.status])\r\n    });\r\n    doc.save(\"subsubcategories_list.pdf\");\r\n  };\r\n  const handlePrint = () => window.print();\r\n  const handleCsvDownload = () => {\r\n    const csv =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      filtered.map(i => [i.name, i.description, i.status].join(\",\")).join(\"\\n\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = encodeURI(csv);\r\n    link.download = \"subsubcategories_list.csv\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // actions\r\n  const toggleDropdown = idx =>\r\n    setDropdownIndex(dropdownIndex === idx ? null : idx);\r\n  const toggleStatus = async id => {\r\n    const ssc = subSubCategories.find(s => s._id === id);\r\n    if (!ssc) return;\r\n    const upd = { ...ssc, status: ssc.status === \"Active\" ? \"Inactive\" : \"Active\" };\r\n    setLoading(true);\r\n    try {\r\n      await axios.put(\r\n        `/api/sub-subcategories/${id}`,\r\n        upd,\r\n        { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n      );\r\n      fetchSubSubCategories();\r\n    } catch (err) {\r\n      console.error(\"Error toggling status:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleDelete = async id => {\r\n    if (!window.confirm(\"Delete this sub‑subcategory?\")) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(\r\n        `/api/sub-subcategories/${id}`,\r\n        { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } }\r\n      );\r\n      fetchSubSubCategories();\r\n    } catch (err) {\r\n      console.error(\"Error deleting sub‑subcategory:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen}/>\r\n      <div className=\"flex \">\r\n        <div className=\"w-auto\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen}/>\r\n        </div>\r\n\r\n        <div className=\"w-full min-h-screen p-6 bg-gray-100 \">\r\n          {/* Header */}\r\n          <header className=\"flex flex-col items-center justify-between gap-2 mb-6 md:flex-row\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-semibold\">Sub‑SubCategory List</h1>\r\n              <nav className=\"flex mt-1 text-sm text-gray-600\">\r\n                <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\">\r\n                  <FaTachometerAlt />\r\n                  <span className=\"ml-1\">Home</span>\r\n                </NavLink>\r\n                <span> &gt; Sub‑SubCategory List</span>\r\n              </nav>\r\n            </div>\r\n            <div className=\"flex flex-col w-full gap-2 md:w-auto md:flex-row\">\r\n              <button\r\n                onClick={() => navigate(\"/categories-list\")}\r\n                className=\"w-full px-4 py-2 text-white bg-indigo-600 rounded md:w-auto\"\r\n              >\r\n                Category List\r\n              </button>\r\n              <button\r\n                onClick={() => navigate(\"/subcategories-list\")}\r\n                className=\"w-full px-4 py-2 text-white bg-indigo-600 rounded md:w-auto\"\r\n              >\r\n                SubCategory List\r\n              </button>\r\n              <NavLink to=\"/sub-subcategories/import\">\r\n                <button className=\"w-full px-4 py-2 text-white bg-green-600 rounded md:w-auto\">\r\n                  Import Sub‑SubCategories\r\n                </button>\r\n              </NavLink>\r\n              \r\n            </div>\r\n          </header>\r\n\r\n          {/* Controls */}\r\n          <div className=\"flex flex-col gap-3 mb-4 md:flex-row md:items-center md:justify-between\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <label>Show</label>\r\n              <select\r\n                className=\"px-2 py-1 border\"\r\n                value={entriesPerPage}\r\n                onChange={e => setEntriesPerPage(+e.target.value)}\r\n              >\r\n                {[10,25,50,100].map(n => (\r\n                  <option key={n} value={n}>{n}</option>\r\n                ))}\r\n              </select>\r\n              <label>Entries</label>\r\n            </div>\r\n            <div className=\"flex gap-1\">\r\n              \r\n            <div className=\"flex flex-1 gap-1 text-sm\">\r\n              <button onClick={handleCopy} className=\"px-2 bg-teal-300\">Copy</button>\r\n              <button onClick={handleExcelDownload} className=\"px-2 bg-teal-300\">Excel</button>\r\n              <button onClick={handlePdfDownload} className=\"px-2 bg-teal-300\">PDF</button>\r\n              <button onClick={handlePrint} className=\"px-2 bg-teal-300\">Print</button>\r\n              <button onClick={handleCsvDownload} className=\"px-2 bg-teal-300\">CSV</button>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"w-full px-2 py-1 border\"\r\n              value={searchTerm}\r\n              onChange={e => setSearchTerm(e.target.value)}\r\n            />\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n          {/* Table */}\r\n          <div className=\"overflow-x-auto overflow-visible\">\r\n            <table className=\"w-full bg-white border\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"p-2 border\">#</th>\r\n                  <th className=\"p-2 border\">Image</th>                {/* ← added */}\r\n                  <th className=\"p-2 border\">Name</th>\r\n                  <th className=\"p-2 border\">Description</th>\r\n                  <th className=\"p-2 border\">Status</th>\r\n                  <th className=\"p-2 border\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {displayed.map((ssc, idx) => (\r\n                  <tr key={ssc._id} className=\"text-center border\">\r\n                    <td className=\"p-2 border\">{idx + 1}</td>\r\n                    <td className=\"p-2 border\">\r\n  { (ssc.image || ssc.images?.length) ? (\r\n      <img\r\n        src={`/vps/uploads/sub-subcategories/${ssc.image || ssc.images[0]}`}\r\n        alt={ssc.name}\r\n        className=\"inline-block object-cover w-12 h-12 rounded\"\r\n        onClick={() =>\r\n          setModalImage(`/vps/uploads/sub-subcategories/${ssc.image || ssc.images[0]}`)\r\n        }\r\n      />\r\n    ) : (\r\n      <span className=\"text-gray-400\">No image</span>\r\n    )\r\n  }\r\n</td>\r\n\r\n                    <td className=\"p-2 border\">{ssc.name}</td>\r\n                    <td className=\"p-2 border\">{ssc.description}</td>\r\n                    <td\r\n                      className=\"p-2 border cursor-pointer\"\r\n                      onClick={() => toggleStatus(ssc._id)}\r\n                    >\r\n                      {ssc.status === \"Active\"\r\n                        ? <span className=\"px-2 py-1 text-white bg-green-600 rounded\">Active</span>\r\n                        : <span className=\"px-2 py-1 text-white bg-red-600 rounded\">Inactive</span>\r\n                      }\r\n                    </td>\r\n                    <td className=\"relative p-2 border\">\r\n                      <button\r\n                        onClick={() => toggleDropdown(idx)}\r\n                        className=\"px-2 py-1 text-white rounded bg-cyan-600\"\r\n                      >\r\n                        Action\r\n                      </button>\r\n                      {dropdownIndex === idx && (\r\n                        <div className=\"absolute right-0 mt-1 w-32 bg-white border rounded shadow z-20\">\r\n                          <button\r\n                            className=\"flex items-center w-full gap-1 px-3 py-2 hover:bg-gray-100\"\r\n                            onClick={() => navigate(`/sub-subcategories-form?id=${ssc._id}`)}\r\n                          >\r\n                            <FaEdit /> Edit\r\n                          </button>\r\n                          <button\r\n                            className=\"flex items-center w-full gap-1 px-3 py-2 text-red-600 hover:bg-gray-100\"\r\n                            onClick={() => handleDelete(ssc._id)}\r\n                          >\r\n                            <FaTrash /> Delete\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"flex items-center justify-between mt-4\">\r\n            <span>\r\n              Showing {(currentPage - 1) * entriesPerPage + 1} to{\" \"}\r\n              {Math.min(currentPage * entriesPerPage, filtered.length)} of{\" \"}\r\n              {filtered.length} entries\r\n            </span>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={prevPage}\r\n                disabled={currentPage === 1}\r\n                className=\"px-3 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={nextPage}\r\n                disabled={currentPage === totalPages}\r\n                className=\"px-3 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {modalImage && (\r\n  <div\r\n    className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n    onClick={() => setModalImage(null)}\r\n  >\r\n    <div className=\"relative\">\r\n      <button\r\n        className=\"absolute top-0 right-0 m-2 text-white text-2xl\"\r\n        onClick={() => setModalImage(null)}\r\n      >\r\n        &times;\r\n      </button>\r\n      <img src={modalImage} className=\"max-w-full max-h-full rounded\" />\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","SubSubCategoryList","subSubCategories","setSubSubCategories","loading","setLoading","dropdownIndex","setDropdownIndex","searchTerm","setSearchTerm","entriesPerPage","setEntriesPerPage","currentPage","setCurrentPage","navigate","useNavigate","modalImage","setModalImage","useEffect","window","innerWidth","fetchSubSubCategories","async","res","axios","get","headers","Authorization","localStorage","getItem","arr","Array","isArray","data","err","console","error","filtered","filter","ssc","name","toLowerCase","includes","totalPages","Math","ceil","length","displayed","slice","NavLink","to","FaTachometerAlt","onClick","value","onChange","e","target","map","n","handleCopy","txt","i","description","status","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csv","link","document","createElement","href","encodeURI","download","appendChild","click","removeChild","type","placeholder","idx","_ssc$images","image","images","src","alt","find","s","_id","id","upd","put","toggleStatus","toggleDropdown","FaEdit","confirm","delete","handleDelete","FaTrash","min","prevPage","disabled","nextPage"],"sourceRoot":""}