{"version":3,"file":"static/js/2137.fefa4130.chunk.js","mappings":"yMAMA,MAAMA,EAAMC,EAAAA,EAAMC,OAAO,CAAEC,QAAS,aAOrB,SAASC,IACtB,MAAOC,EAAeC,IAAkBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAUC,IAAqBF,EAAAA,EAAAA,UAAS,KACxCG,EAAMC,IAAyBJ,EAAAA,EAAAA,UAAS,KACxCK,EAASC,IAAsBN,EAAAA,EAAAA,WAAS,IACxCO,EAAOC,IAAwBR,EAAAA,EAAAA,UAAS,OACxCS,EAAQC,IAAuBV,EAAAA,EAAAA,UAAS,CAAC,IAEhDW,EAAAA,EAAAA,YAAU,KACRL,GAAW,GACXM,QAAQC,IAAI,CACVpB,EAAIqB,IAAI,qBACRrB,EAAIqB,IAAI,iBAEPC,MAAKC,IAAmB,IAAjBC,EAAMC,GAAKF,EACjBd,EAAYe,EAAKE,KAAKA,MAEtB,MAAMC,EAAOF,EAAKC,KAAKA,MAAQD,EAAKC,KAAKE,YAAc,GACvDjB,EAAQgB,GACRZ,EAAS,KAAK,IAEfc,OAAM,IAAMd,EAAS,qCACrBe,SAAQ,IAAMjB,GAAW,IAAO,GAClC,IAeH,OACEkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC9B,cAAeA,EAAeC,eAAgBA,KACtDyB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAAC/B,cAAeA,KACxB0B,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uCAAsCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8BAA6BC,SAAC,4BAE3CnB,IACCoB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAA0CC,SACtDnB,IAIJF,GACCsB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,kBACiB,IAApBzB,EAAS6B,QACXH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAC,0BAE/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBzB,EAAS8B,KAAIC,IACZR,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,8BAA6BC,SAAA,EACtDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAEM,EAAEC,SAASC,KAAK,KAAGF,EAAEC,SAASE,MAAM,QAElEX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAiB,IACxBM,EAAEI,cAAcC,OAAO,KAAGL,EAAEI,cAAcE,KAAK,KAAGN,EAAEI,cAAcG,SAErEf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEM,EAAEQ,KACd,cAAXR,EAAEQ,OACDhB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAe,IACtB,IAAIe,KAAKT,EAAEU,cAAcC,wBAIhCnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,IAAEM,EAAEY,SAAUjB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aAG5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,MAAA,UACEC,UAAU,4CACVoB,MAAOpC,EAAOuB,EAAEc,MAAQ,GACxBC,SAAUC,GACRtC,GAAUuC,IAAC,IAAUA,EAAG,CAACjB,EAAEc,KAAME,EAAEE,OAAOL,UAC3CnB,SAAA,EAEDC,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,GAAEnB,SAAC,uBAChBvB,EAAK4B,KAAIoB,IACRxB,EAAAA,EAAAA,KAAA,UAAoBkB,MAAOM,EAAEL,IAAIpB,SAC9ByB,EAAEC,eADQD,EAAEL,WAKnBtB,EAAAA,EAAAA,MAAA,UACE6B,QAASA,IAvERC,WACnB,MAAMC,EAAQ9C,EAAO+C,GACrB,IAAKD,EACH,OAAOE,MAAM,yCAEf,UACQhE,EAAIiE,MAAM,aAAaF,WAAoB,CAAED,UACnDrD,GAAYyD,GAAMA,EAAGC,QAAO5B,GAAKA,EAAEc,MAAQU,KAC7C,CAAE,MAAOK,GAAM,IAADC,EAAAC,EACZN,MAAM,oBAAiC,QAAZK,EAAAD,EAAIG,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAc3C,YAAI,IAAA4C,OAAN,EAAZA,EAAoBE,UAAWJ,EAAII,SAChE,GA6DiCC,CAAalC,EAAEc,KAC9BrB,UAAU,uFAAsFC,SAAA,EAEhGC,EAAAA,EAAAA,KAACwC,EAAAA,IAAO,IAAG,kBAxCPnC,EAAEc,iBAmD5B,CApHArD,EAAI2E,aAAaC,QAAQC,KAAIC,IAC3B,MAAMC,EAAIC,aAAaC,QAAQ,SAE/B,OADIF,IAAGD,EAAII,QAAQC,cAAgB,UAAUJ,KACtCD,CAAG,G","sources":["components/Booking/VanBookingPanel.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaCheck } from 'react-icons/fa';\nimport Navbar from '../Navbar';\nimport Sidebar from '../Sidebar';\n\nconst api = axios.create({ baseURL: '/vps/api' });\napi.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\nexport default function AdminAssignPanel() {\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const [bookings, setBookings]       = useState([]);\n  const [vans, setVans]               = useState([]);\n  const [loading, setLoading]         = useState(false);\n  const [error, setError]             = useState(null);\n  const [vanIds, setVanIds]           = useState({});\n\n  useEffect(() => {\n    setLoading(true);\n    Promise.all([\n      api.get('/bookings/pending'),\n      api.get('/warehouses')\n    ])\n      .then(([bRes, wRes]) => {\n        setBookings(bRes.data.data);\n        // POS uses either data.data or data.warehouses\n        const list = wRes.data.data || wRes.data.warehouses || [];\n        setVans(list);\n        setError(null);\n      })\n      .catch(() => setError('Failed to load bookings or vans'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleAssign = async (bookingId) => {\n    const vanId = vanIds[bookingId];\n    if (!vanId) {\n      return alert('Please select a van before assigning.');\n    }\n    try {\n      await api.patch(`/bookings/${bookingId}/assign`, { vanId });\n      setBookings(bs => bs.filter(b => b._id !== bookingId));\n    } catch (err) {\n      alert('Assign failed: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n      <div className=\"flex flex-1\">\n        <Sidebar isSidebarOpen={isSidebarOpen} />\n        <main className=\"flex-1 p-6 bg-gray-100 overflow-auto\">\n          <h1 className=\"text-2xl font-semibold mb-4\">Assign Vans to Bookings</h1>\n\n          {error && (\n            <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">\n              {error}\n            </div>\n          )}\n\n          {loading ? (\n            <div>Loading…</div>\n          ) : bookings.length === 0 ? (\n            <div className=\"text-gray-600\">No pending bookings.</div>\n          ) : (\n            <div className=\"space-y-4\">\n              {bookings.map(b => (\n                <div key={b._id} className=\"bg-white p-4 rounded shadow\">\n                  <div className=\"mb-2 text-gray-800\">\n                    <strong>Customer:</strong> {b.customer.name} ({b.customer.phone})\n                  </div>\n                  <div className=\"mb-2 text-gray-700\">\n                    <strong>Pickup:</strong>{' '}\n                    {b.pickupAddress.street}, {b.pickupAddress.area}, {b.pickupAddress.city}\n                  </div>\n                  <div className=\"mb-2 text-gray-700\">\n                    <strong>Type:</strong> {b.type}\n                    {b.type === 'scheduled' && (\n                      <span className=\"ml-4\">\n                        <strong>When:</strong>{' '}\n                        {new Date(b.scheduledFor).toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"mb-4 text-gray-700\">\n                    <strong>Remark:</strong> {b.remark || <em>none</em>}\n                  </div>\n\n                  <div className=\"flex items-center gap-2\">\n                    <select\n                      className=\"flex-1 p-2 border border-gray-300 rounded\"\n                      value={vanIds[b._id] || ''}\n                      onChange={e =>\n                        setVanIds(m => ({ ...m, [b._id]: e.target.value }))\n                      }\n                    >\n                      <option value=\"\">Select a van…</option>\n                      {vans.map(v => (\n                        <option key={v._id} value={v._id}>\n                          {v.warehouseName}\n                        </option>\n                      ))}\n                    </select>\n                    <button\n                      onClick={() => handleAssign(b._id)}\n                      className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 flex items-center gap-1\"\n                    >\n                      <FaCheck /> Assign\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["api","axios","create","baseURL","AdminAssignPanel","isSidebarOpen","setSidebarOpen","useState","bookings","setBookings","vans","setVans","loading","setLoading","error","setError","vanIds","setVanIds","useEffect","Promise","all","get","then","_ref","bRes","wRes","data","list","warehouses","catch","finally","_jsxs","className","children","_jsx","Navbar","Sidebar","length","map","b","customer","name","phone","pickupAddress","street","area","city","type","Date","scheduledFor","toLocaleString","remark","value","_id","onChange","e","m","target","v","warehouseName","onClick","async","vanId","bookingId","alert","patch","bs","filter","err","_err$response","_err$response$data","response","message","handleAssign","FaCheck","interceptors","request","use","cfg","t","localStorage","getItem","headers","Authorization"],"sourceRoot":""}