{"version":3,"file":"static/js/9382.c97598d0.chunk.js","mappings":"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","sources":["components/Items/AddServices.jsx","Loading.jsx","components/contact/Input.jsx","components/Items/Scanner.jsx","components/contact/Button.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["// import React,{useEffect, useState} from 'react'\r\n// import Navbar from '../Navbar';\r\n// import Sidebar from '../Sidebar';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { NavLink } from 'react-router-dom';\r\n// import { FaTachometerAlt } from 'react-icons/fa';\r\n// import Input from '../contact/Input';\r\n// import Button from '../contact/Button';\r\n// import Select from 'react-select'\r\n// import Scanner from './Scanner';\r\n// import axios from 'axios';\r\n// import LoadingScreen from '../../Loading';\r\n// export default function AddService() {\r\n//   // State to manage the active tab (Edit or Advanced)\r\n//   const[activeTab,setActiveTab]=useState(\"Edit\");\r\n//   // State to manage the sidebar open/close status\r\n//   const[isSidebarOpen,setSidebarOpen]=useState(true);\r\n//  const [options, setOptions] = useState({\r\n//     Brand: [\r\n//       { label: \"arhar\", value: \"Arhar\" },\r\n//       { label: \"BrandLocal\", value: \"Brand Local\" },\r\n//       { label: \"itc\", value: \"Itc\" },\r\n//       { label: \"keshav\", value: \"Keshav\" }\r\n//     ],\r\n//     Category: [\r\n//       { value: \"bath&body\", label: \"Bath & Body\" },\r\n//       { value: \"oil,masala,sauce\", label: \"Oil, Masala & Sauces\" },\r\n//       { value: \"dailyEssentials\", label: \"Daily Essentials\" },\r\n//       { label: \"Staples\", value: \"Staples\" },\r\n//       { label: \"Snack & Beverages\", value: \"Snack & Beverages\" },\r\n//       { label: \"Package Food\", value: \"Package Food\" },\r\n//       { value: \"personalcare\", label: \"Personal & Baby Care\" },\r\n//       { value: \"householdcare\", label: \"HouseHold Care\" },\r\n//       { value: \"dairyandegg\", label: \"Dairy & Eggs\" }\r\n//     ],\r\n//     itemGroup: [\r\n//       { label: \"Single\", value: \"single\" },\r\n//       { label: \"Variants\", value: \"variant\" }\r\n//     ],\r\n//     Unit: [\r\n//       { label: \"Kilogram\", value: \"kg\" },\r\n//       { label: \"Gram\", value: \"g\" },\r\n//       { label: \"Litre\", value: \"l\" },\r\n//       { label: \"Millilitre\", value: \"ml\" },\r\n//       { label: \"Piece\", value: \"pcs\" },\r\n//       { label: \"Dozen\", value: \"dozen\" },\r\n//       { label: \"Packet\", value: \"packet\" },\r\n//       { label: \"Box\", value: \"box\" },\r\n//       { label: \"Bundle\", value: \"bundle\" },\r\n//       { label: \"Tin\", value: \"tin\" },\r\n//       { label: \"Bottle\", value: \"bottle\" },\r\n//       { label: \"Carton\", value: \"carton\" },\r\n//       { label: \"Sack\", value: \"sack\" },\r\n//       { label: \"Can\", value: \"can\" },\r\n//       { label: \"Bar\", value: \"bar\" },\r\n//       { label: \"Jar\", value: \"jar\" },\r\n//     ],\r\n//     Discounttype: [\r\n//       { label: \"Percentage(%)\", value: \"percentage\" },\r\n//       { label: \"Fixed\", value: \"fixed\" }\r\n//     ],\r\n//     Tax: [\r\n//       { label: \"GST\", value: \"gst\" }\r\n//     ],\r\n//     TaxType: [\r\n//       { label: \"Inclusive\", value: \"inclusive\" },\r\n//       { label: \"Exclusive\", value: \"exclusive\" }\r\n//     ],\r\n//     WareHouse: [\r\n//       { label: \"Warehouse\", value: \"warehouse\" },\r\n//       { label: \"Van 1\", value: \"van1\" },\r\n//       { label: \"Van 2\", value: \"van2\" },\r\n//       { label: \"Hisar Main\", value: \"hisarmain\" },\r\n//     ]\r\n//   });\r\n//   const[formdata,setFormdata]=useState({\r\n//     itemCode:\"\",\r\n//     itemName:\"\",\r\n//     category:\"\",\r\n//     HSN:\"\",\r\n//     SAC:\"\",\r\n//     sellerPoints:\"0\",\r\n//     description:\"\",\r\n//     image:\"\",\r\n//     discountType:\"\",\r\n//     discount:\"\",\r\n//     expenses:\"\",\r\n//     tax:\"\",\r\n//     taxType:\"\",\r\n//     salesPrice:\"\"\r\n//   })\r\n// const handleChange=(e)=>{\r\n//   const{name,value}=e.target;\r\n//   setFormdata((prev)=>({\r\n//     ...prev,\r\n//     [name]:value\r\n//   }))\r\n// }\r\n//  // Handle changes for select dropdowns\r\n//  const handleSelectChange = (name) => (selectedOption) => {\r\n//   setFormdata({ ...formdata, [name]: selectedOption }); // Update the corresponding field in formData\r\n// };\r\n\r\n// // Handle image file selection\r\n// const handleImageChange = (e) => {\r\n//   setFormdata({ ...formdata, image: e.target.files[0] }); // Store the selected image file\r\n// };\r\n\r\n// const handleSubmit=(e)=>{\r\n//   e.preventDefault();\r\n//   console.log(formdata)\r\n// }\r\n\r\n// const fetchService = async () => {\r\n//   try {\r\n//     const token = localStorage.getItem(\"token\");\r\n//     const response = await axios.get(`api/services`, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${token}`,\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     });\r\n//     console.log(response.data)\r\n    \r\n   \r\n//   } catch (err) {\r\n//     console.log(err.message);\r\n//   } \r\n// };\r\n// useEffect(()=>{fetchService()},[])\r\n\r\n//   return (\r\n//     <div className='flex flex-col h-screen'>\r\n//       {/* Navbar component with sidebar open state */}\r\n//       <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n//       <div className='flex flex-grow mt-20'>\r\n//         <div>\r\n//           {/* Sidebar component with open state */}\r\n//           <Sidebar isSidebarOpen={isSidebarOpen} />\r\n//         </div>\r\n\r\n//         {/* Container for the entire component */}\r\n//         <div className='w-full h-full px-6 pb-6 bg-gray-300'>\r\n\r\n//           <div className='flex flex-col items-start justify-between mt-4 sm:items-end md:flex-row'>\r\n//             <div className='flex flex-wrap items-end w-full md:w-1/2'> \r\n//               <div>\r\n//               <span className='text-3xl '>Customers</span>\r\n//               </div>\r\n//               <div>\r\n//               <span className='text-sm text-gray-700'>Enter User Information</span>               \r\n//               </div>\r\n//             </div>  \r\n//             <div className='flex flex-wrap w-auto gap-2 pl-2 mb-2 text-sm font-semibold text-black bg-gray-500 bg-opacity-50 rounded-md md:text-gray-500 md:justify-end md:w-1/2 md:bg-transparent'>\r\n//               {/* Navigation links for breadcrumb navigation */}\r\n//               <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\"><FaTachometerAlt />Home </NavLink>\r\n              \r\n//               <NavLink to=\"/customer/view\" className=\"text-gray-700 no-underline\">&gt;View Users</NavLink>\r\n              \r\n//               <NavLink to=\"/customer/add\" className=\"text-gray-700 no-underline\">&gt;Customers</NavLink>                   \r\n//             </div>\r\n//           </div> \r\n//           <form onSubmit={handleSubmit}>\r\n//           <div className='flex flex-col w-full gap-4 px-4 pt-2 pb-6 mx-auto bg-white border-t-4 border-blue-500 rounded-md sm:gap-5'>\r\n            \r\n//                   <Input div_class='flex flex-col' label='Item Code*' required label_class='text-sm font-semibold'  name=\"itemCode\"  className='px-4 py-2 mt-1 text-sm text-gray-800 border-[1px] border-gray-300 rounded-md lg:w-1/3 focus:outline-none focus:border-2 focus:border-blue-600 lg:w-1/4' value={formdata.itemCode} onChange={handleChange} />\r\n//                   <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n//                     <Input label=\"ItemName*\" value={formdata.itemName} onChange={handleChange} name=\"itemName\" required div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n//                     <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n//                       <label htmlFor=\"\" className='text-sm font-semibold' >Category</label>\r\n//                     <Select options={options.Category} value={formdata.category} onChange={handleSelectChange('category')} />\r\n//                     </div>\r\n//                     <Scanner/>\r\n//                   </div>  \r\n//             {/* div3         */}\r\n//             <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n//                     <Input label=\"SAC\" name='SAC' value={formdata.SAC} onChange={handleChange} div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n//                     <Input label=\"HSN\" div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold' name='HSN' value={formdata.HSN} onChange={handleChange}/>\r\n//                     <Input label=\"Seller Points\" type=\"number\" div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold' name=\"sellerPoints\" value={formdata.sellerPoints} onChange={handleChange}/>\r\n//             </div>\r\n//             {/* div4 */}\r\n//             <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n//                    <div className='flex flex-col w-full sm:w-1/4'>\r\n//                    <label  className='text-sm font-semibold'>Description</label>\r\n//                    <textarea name=\"description\" value={formdata.description} onChange={handleChange}  className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' ></textarea>\r\n//                    </div>\r\n//                    <div className='flex flex-col justify-between w-full sm:w-1/4'>\r\n//                        <label className='text-sm font-semibold'>Select Image</label>\r\n//                        <Input onChange={handleImageChange} type=\"file\" className='flex flex-wrap mt-1 text-sm font-medium'/>\r\n//                        <span className='text-sm text-red-700'>Max Width/Height: 1000px * 1000px & Size: 1MB</span>\r\n//                    </div>\r\n//                    <div className='flex-col hidden w-full sm:flex sm:w-1/4'>\r\n                       \r\n//                    </div>\r\n                   \r\n//             </div>\r\n//             {/* div5 */}\r\n//             <div className='flex flex-col justify-between gap-2 pt-5 border-t-2 border-gray-200 sm:py-5 sm:flex-row' >\r\n//             <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n//                       <label htmlFor=\"\" className='text-sm font-semibold'>Discount Type</label>\r\n//                     <Select options={options.Discounttype} />\r\n//             </div>\r\n//             <Input label=\"Discount\" name=\"discount\" value={formdata.discount} onChange={handleChange} div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n\r\n                   \r\n//                    <div className='flex-col hidden w-full sm:flex sm:w-1/4'>\r\n                       \r\n//                    </div>\r\n                   \r\n//             </div> \r\n//             {/* div6            */}\r\n//             <div className='flex flex-col justify-between gap-2 pt-5 border-t-2 border-gray-200 sm:flex-row' >\r\n//               <div className='w-full sm:w-1/4'>\r\n//             <Input label=\"Price(Expenses)*\"  className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' name=\"expenses\" value={formdata.expenses} onChange={handleChange} label_class='text-sm font-semibold'/>\r\n//                 <span className='text-sm text-blue-700'>Enter \"0\",If there is no expenses</span>\r\n//               </div>\r\n//             <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n//                       <label htmlFor=\"\" className='text-sm font-semibold'>Tax*</label>\r\n//                     <Select options={options.Tax}  onChange={handleSelectChange(\"tax\")}/>\r\n//             </div>\r\n\r\n//                    <div className='flex-col hidden w-full sm:flex sm:w-1/4'>\r\n                       \r\n//                    </div> \r\n                   \r\n//             </div> \r\n//             <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n//             <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n//                       <label htmlFor=\"\" className='text-sm font-semibold'>Sales Tax Type*</label>\r\n//                     <Select options={options.TaxType} onChange={handleSelectChange(\"taxType\")} />\r\n//             </div>\r\n//                     <Input label=\"Sales Price\" name=\"salesPrice\" value={formdata.salesPrice} onChange={handleChange} div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n//                     <div className='flex-col hidden w-full sm:flex sm:w-1/4'></div> \r\n//             </div>\r\n//             <div className='flex flex-col justify-center gap-2 py-4 border-t-2 border-gray-200 sm:flex-row' >\r\n//                 <Button className=\"w-full text-white bg-green-500 rounded cursor-pointer sm:max-w-80 hover:bg-green-600\" type='submit' text=\"Save\" /> {/* Save button */}\r\n//                  <Button className=\"w-full text-white bg-orange-500 rounded cursor-pointer sm:max-w-80 hover:bg-orange-600\" text=\"Close\" /> {/* Close button */}\r\n//             </div> \r\n//          </div>\r\n//          </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React,{useEffect, useState} from 'react'\r\nimport Navbar from '../Navbar';\r\nimport Sidebar from '../Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport Input from '../contact/Input';\r\nimport Button from '../contact/Button';\r\nimport Select from 'react-select'\r\nimport Scanner from './Scanner';\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading';\r\nexport default function AddService() {\r\n  // State to manage the active tab (Edit or Advanced)\r\n  // const[activeTab,setActiveTab]=useState(\"Edit\")\r\n  // State to manage the sidebar open/close status\r\n  const[isSidebarOpen,setSidebarOpen]=useState(true);\r\n  const[loading,setLoading]=useState(false)\r\n  const[error,setError]=useState(\"\")\r\n const [options, setOptions] = useState({\r\n    category:[],\r\n    discounttype: [\r\n      { label: \"Percentage(%)\", value: \"Percentage\" },\r\n      { label: \"Fixed\", value: \"Fixed\" }\r\n    ],\r\n    tax: [],\r\n    taxType: [\r\n      { label: \"Inclusive\", value: \"Inclusive\" },\r\n      { label: \"Exclusive\", value: \"Exclusive\" }\r\n    ],\r\n  });\r\n  const[formdata,setFormData]=useState({\r\n    barcode:\"\",\r\n    category:null,\r\n    description:\"\",\r\n    discount:0,\r\n    discountType:\"\",\r\n    hsn:\"\",\r\n    itemCode:\"\",\r\n    itemName:\"\",\r\n    priceWithoutTax:0,\r\n    sac:\"\",\r\n    salesPrice:0,\r\n    sellerPoints:0,\r\n    salesTaxType:\"\",\r\n    serviceImage:\"\",\r\n    tax:null,\r\n  })\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  const fetchCategory = async () => {\r\n    try {\r\n      const response = await axios.get('api/categories', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n  \r\n    console.log(response.data)\r\n      const newCategory=response.data.map((item)=>({\r\n        label:item.name,\r\n        value:item._id\r\n      }))\r\n      setOptions((prev)=>({...prev,category:newCategory}))\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchtax = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(`api/taxes`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(response.data)\r\n      const newunit=response.data.data.map((item)=>({\r\n        label:item.taxName,\r\n        value:item._id\r\n      }))\r\n     setOptions((prev)=>({...prev,tax:newunit}))\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } \r\n  };\r\nuseEffect(()=>{\r\n  try {\r\n    setLoading(true)\r\n    fetchCategory();\r\n    fetchService();\r\n    fetchtax();\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n  finally{\r\n    setLoading(false)\r\n  }\r\n},[])\r\n  \r\nconst handleChange=(e)=>{\r\n  const{name,value}=e.target;\r\n  setFormData((prev)=>({\r\n    ...prev,\r\n    [name]:(e.target.type==='number')?Number(value):value\r\n  }))\r\n}\r\n // Handle changes for select dropdowns\r\n const handleSelectChange = (name) => (selectedOption) => {\r\n  setFormData({ ...formdata, [name]: selectedOption.value }); // Update the corresponding field in formData\r\n};\r\n\r\n// Handle image file selection\r\nconst handleImageChange = (e) => {\r\n  setFormData({ ...formdata, image: e.target.files[0].name }); // Store the selected image file\r\n};\r\nconst postData = async () => {\r\n  try {\r\n   \r\n  \r\n    console.log(\"Sending FormData:\", formdata);\r\n\r\n    const response = await axios.post(\r\n      \"api/services\",\r\n      formdata,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\", // Change Content-Type\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"Response:\", response.data);\r\n    alert(\"Service Added Successfully\");\r\n  } catch (err) {\r\n    console.error(\"Error:\", err.response?.data || err.message);\r\n    alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n  }\r\n};\r\nconst handleSubmit= async(e)=>{\r\n  e.preventDefault(); // Prevent default form submission behavior\r\n    // Perform validation here (if needed)\r\n    \r\n    // Send formData to API or handle it as needed\r\n    setLoading(true)\r\n   try {\r\n    await postData(); // ✅ Send data to backend\r\n    console.log(\"Form submitted successfully!\");\r\n  } catch (err) {\r\n    console.error(\"Form submission failed:\", err);\r\n  }\r\n  finally{\r\n    setLoading(false)\r\n  }\r\n  setFormData({\r\n    barcode:\"\",\r\n    category:null,\r\n    description:\"\",\r\n    discount:0,\r\n    discountType:\"\",\r\n    hsn:\"\",\r\n    itemCode:\"\",\r\n    itemName:\"\",\r\n    priceWithoutTax:0,\r\n    sac:\"\",\r\n    salesPrice:0,\r\n    sellerPoints:0,\r\n    salesTaxType:\"\",\r\n    serviceImage:\"\",\r\n    tax:null,\r\n  })\r\n}\r\nconst generateItemCode = (lastItemCode) => {\r\n  // Extract numeric part from the last item code\r\n  const match = lastItemCode.match(/(\\D+)(\\d+)/);\r\n  if(!match) return \"IT050031\"\r\n\r\n  const prefix = match[1];  // \"IT\"\r\n  const number = parseInt(match[2], 10) + 1; // Increment number\r\n\r\n  return `${prefix}${number.toString().padStart(6, \"0\")}`; // Ensure it stays 6 digits\r\n};\r\n\r\nconst fetchService = async () => {\r\n  try {\r\n    setLoading(true)\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.get(`api/services`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    console.log(response.data)\r\n    if (response.data.data.length > 0) {\r\n      // Get the latest item from the list (assuming the API returns sorted data)\r\n      const lastItem = response.data.data[response.data.data.length - 1];  \r\n      const lastCode = lastItem.itemCode || \"IT050055\"; // Default if API is empty\r\n\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        itemCode: generateItemCode(lastCode),\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        itemCode: \"IT050060\", // Default if no items exist\r\n      }));\r\n    }\r\n   \r\n  } catch (err) {\r\n    console.log(err.message);\r\n  } \r\n  finally{\r\n    setLoading(false)\r\n  }\r\n};\r\nuseEffect(()=>{fetchService()},[])\r\nif(loading) return (<LoadingScreen />)\r\n  return (\r\n    <div className='flex flex-col h-screen'>\r\n      {/* Navbar component with sidebar open state */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className='flex flex-grow '>\r\n    \r\n          {/* Sidebar component with open state */}\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        \r\n\r\n        {/* Container for the entire component */}\r\n        <div className='w-full h-full px-6 pb-6 bg-gray-300'>\r\n\r\n          <div className='flex flex-col items-start justify-between mt-4 sm:items-end md:flex-row'>\r\n            <div className='flex flex-wrap items-end w-full md:w-1/2'> \r\n              <div>\r\n              <span className='text-3xl '>Services</span>\r\n              </div>\r\n              <div>\r\n              <span className='text-sm text-gray-700'>Add/Update Services</span>               \r\n              </div>\r\n            </div>  \r\n            <div className='flex flex-wrap w-full gap-2 px-2 py-2 mb-2 text-sm font-semibold text-black bg-gray-500 bg-opacity-50 rounded-md md:text-gray-500 md:justify-end md:w-1/2 md:bg-transparent'>\r\n              {/* Navigation links for breadcrumb navigation */}\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\"><FaTachometerAlt />Home </NavLink>\r\n              \r\n              <NavLink to=\"/services/view\" className=\"text-gray-700 no-underline\">&gt;View Services</NavLink>\r\n              \r\n              <NavLink to=\"/services/add\" className=\"text-gray-700 no-underline\">&gt;Services</NavLink>                   \r\n            </div>\r\n          </div> \r\n          <form onSubmit={handleSubmit}>\r\n          <div className='flex flex-col w-full gap-4 px-4 pt-2 pb-6 mx-auto bg-white border-t-4 border-blue-500 rounded-md sm:gap-5'>\r\n            \r\n                  <Input div_class='flex flex-col' label='Item Code*' required label_class='text-sm font-semibold'  name=\"itemCode\"  className='px-4 py-2 mt-1 text-sm text-gray-800 border-[1px] border-gray-300 rounded-md lg:w-1/3 focus:outline-none focus:border-2 focus:border-blue-600 lg:w-1/4' value={formdata.itemCode} onChange={handleChange} />\r\n                  <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n                    <Input label=\"ItemName*\" value={formdata.itemName} onChange={handleChange} name=\"itemName\" required div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n                    <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n                      <label htmlFor=\"\" className='text-sm font-semibold' >Category</label>\r\n                    <Select options={options.category} value={formdata.category} onChange={handleSelectChange('category')}  className='w-full -z-1'/>\r\n                    </div>\r\n                    <Scanner formData={formdata} setFormData={setFormData}/>\r\n                  </div>  \r\n            {/* div3         */}\r\n            <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n                    <Input label=\"SAC\" name='sac' value={formdata.sac} onChange={handleChange} div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n                    <Input label=\"hsn\" div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold' name='hsn' value={formdata.hsn} onChange={handleChange}/>\r\n                    <Input label=\"Seller Points\" type=\"number\" min='0' div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold' name=\"sellerPoints\" value={formdata.sellerPoints} onChange={handleChange}/>\r\n                    \r\n            </div>\r\n            {/* div4 */}\r\n            <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n                   <div className='flex flex-col w-full sm:w-1/4'>\r\n                   <label  className='text-sm font-semibold'>Description</label>\r\n                   <textarea name=\"description\" value={formdata.description} onChange={handleChange}  className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' ></textarea>\r\n                   </div>\r\n                   <div className='flex flex-col justify-between w-full sm:w-1/4'>\r\n                       <label className='text-sm font-semibold'>Select Image</label>\r\n                       <Input onChange={handleImageChange} type=\"file\" className='flex flex-wrap mt-1 text-sm font-medium'/>\r\n                       <span className='text-sm text-red-700'>Max Width/Height: 1000px * 1000px & Size: 1MB</span>\r\n                   </div>\r\n                   <div className='flex-col hidden w-full sm:flex sm:w-1/4'>\r\n                       \r\n                   </div>\r\n                   \r\n            </div>\r\n            {/* div5 */}\r\n            <div className='flex flex-col justify-between gap-2 pt-5 border-t-2 border-gray-200 sm:py-5 sm:flex-row' >\r\n            <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n                      <label htmlFor=\"\" className='text-sm font-semibold'>Discount Type</label>\r\n                    <Select options={options.discounttype} onChange={handleSelectChange('discountType')}/>\r\n            </div>\r\n            <Input label=\"Discount\" type='Number' min='0' name=\"discount\" value={formdata.discount} onChange={handleChange} div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n\r\n                   \r\n                   <div className='flex-col hidden w-full sm:flex sm:w-1/4'>\r\n                       \r\n                   </div>\r\n                   \r\n            </div> \r\n            {/* div6            */}\r\n            <div className='flex flex-col justify-between gap-2 pt-5 border-t-2 border-gray-200 sm:flex-row' >\r\n              <div className='w-full sm:w-1/4'>\r\n            <Input label=\"Price(Expenses)*\"  className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' name=\"priceWithoutTax\" value={formdata.priceWithoutTax} onChange={handleChange} type='Number' min='0'label_class='text-sm font-semibold'/>\r\n                <span className='text-sm text-blue-700'>Enter \"0\",If there is no expenses</span>\r\n              </div>\r\n            <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n                      <label htmlFor=\"\" className='text-sm font-semibold'>Tax*</label>\r\n                    <Select options={options.tax}  onChange={handleSelectChange(\"tax\")}/>\r\n            </div>\r\n\r\n                   <div className='flex-col hidden w-full sm:flex sm:w-1/4'>\r\n                       \r\n                   </div> \r\n                   \r\n            </div> \r\n            <div className='flex flex-col justify-between gap-2 sm:flex-row'>\r\n            <div className='flex flex-col w-full gap-1 sm:w-1/4'>\r\n                      <label htmlFor=\"\" className='text-sm font-semibold'>Sales Tax Type*</label>\r\n                    <Select options={options.taxType} onChange={handleSelectChange(\"salesTaxType\")} />\r\n            </div>\r\n                    <Input label=\"Sales Price\" name=\"salesPrice\" type='Number'min='0' value={formdata.salesPrice} onChange={handleChange} div_class='flex flex-col  w-full sm:w-1/4' className='w-full px-4 py-2 mt-1 text-sm text-gray-800 border-gray-300 rounded-md border-[1px] focus:outline-none focus:border-2 focus:border-blue-600' label_class='text-sm font-semibold'/>\r\n                    <div className='flex-col hidden w-full sm:flex sm:w-1/4'></div> \r\n            </div>\r\n            <div className='flex flex-col justify-center gap-2 py-4 border-t-2 border-gray-200 sm:flex-row' >\r\n                <Button className=\"w-full text-white bg-green-500 rounded cursor-pointer sm:max-w-80 hover:bg-green-600\" type='submit' text=\"Save\" /> {/* Save button */}\r\n                 <Button className=\"w-full text-white bg-orange-500 rounded cursor-pointer sm:max-w-80 hover:bg-orange-600\" text=\"Close\" /> {/* Close button */}\r\n            </div> \r\n         </div>\r\n         </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport Input from \"../contact/Input\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBarcode } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst addUnique = (arr = [], code = \"\") => {\r\n  const trimmed = code.trim();\r\n  return trimmed && !arr.includes(trimmed) ? [...arr, trimmed] : arr;\r\n};\r\n\r\n\r\nconst removeAt = (arr = [], i) => arr.filter((_, idx) => idx !== i);\r\n\r\n\r\n\r\nconst Scanner = ({ formData = {}, setFormData, fieldName = \"barcodes\" }) => {\r\n\r\n  const [scanning, setScanning] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const videoRef       = useRef(null);\r\n  const codeReaderRef  = useRef(null);\r\n\r\n  const barcodes = formData[fieldName] || [];\r\n\r\n  const pushCode = (code) =>\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [fieldName]: addUnique(prev[fieldName], code),\r\n    }));\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    let value = e.target.value;\r\n\r\n  \r\n    if (value.endsWith(\",\")) {\r\n      pushCode(value.slice(0, -1));\r\n      value = \"\";\r\n    }\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      pushCode(inputValue);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    pushCode(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n\r\n\r\n  const handleDelete = (idx) =>\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [fieldName]: removeAt(prev[fieldName], idx),\r\n    }));\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!scanning) return;\r\n\r\n    const stopScanner = () => {\r\n      videoRef.current?.srcObject?.getTracks().forEach((t) => t.stop());\r\n      codeReaderRef.current?.reset?.();\r\n      setScanning(false);\r\n    };\r\n\r\n    const startScanner = async () => {\r\n      const codeReader = new BrowserMultiFormatReader();\r\n      codeReaderRef.current = codeReader;\r\n\r\n      const decode = (facingMode) =>\r\n        codeReader.decodeFromConstraints(\r\n          { video: { facingMode } },\r\n          videoRef.current,\r\n          (result, err) => {\r\n            if (result) {\r\n              pushCode(result.getText());\r\n              window.navigator?.vibrate?.(160);\r\n              try {\r\n                new Audio(\"/beep.mp3\").play();\r\n              } catch {}\r\n              stopScanner();\r\n            }\r\n\r\n            if (err && err.name !== \"NotFoundException\")\r\n              console.error(\"Scan error:\", err);\r\n          }\r\n        );\r\n\r\n      try {\r\n        await decode({ exact: \"environment\" });   // back cam first\r\n      } catch {\r\n        try {\r\n          await decode(\"user\");                   // fallback front cam\r\n        } catch (e) {\r\n          console.error(\"Camera error:\", e);\r\n          stopScanner();\r\n        }\r\n      }\r\n    };\r\n\r\n    startScanner();\r\n\r\n\r\n    return () => stopScanner();\r\n  }, [scanning]); \r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-start w-full\">\r\n      {/* text input + scan button */}\r\n      <div className=\"flex items-start w-full\">\r\n        <Input\r\n          label=\"Barcodes\"\r\n          placeholder=\"Type or scan – comma or Enter to save\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          onBlur={handleBlur}\r\n          div_class=\"flex flex-col w-full\"\r\n          className=\"w-full px-4 py-2 mt-1 text-sm text-gray-800 bg-white\r\n                     border-2 border-gray-300 rounded-l-md focus:border-blue-600\"\r\n          label_class=\"text-sm font-semibold\"\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faBarcode}\r\n          title=\"Scan barcode\"\r\n          onClick={() => setScanning(true)}\r\n          className=\"px-3 mt-4 py-[10px] text-gray-800 bg-gray-100 border-2\r\n                     border-l-0 border-gray-300 rounded-r-md cursor-pointer\"\r\n        />\r\n      </div>\r\n\r\n      {/* chip list with delete buttons */}\r\n      {barcodes.length > 0 && (\r\n        <div className=\"flex flex-wrap gap-2 mt-2\">\r\n          {barcodes.map((code, idx) => (\r\n            <span\r\n              key={idx}\r\n              className=\"flex items-center px-2 py-1 text-xs bg-gray-200 rounded-full\"\r\n            >\r\n              {code}\r\n              <button\r\n                type=\"button\"\r\n                className=\"ml-1 text-red-600 hover:text-red-800 focus:outline-none\"\r\n                onClick={() => handleDelete(idx)}\r\n              >\r\n                ×\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* full-screen scanner modal */}\r\n      {scanning && (\r\n        <div className=\"absolute inset-0 z-50 flex flex-col items-center\r\n                        justify-center bg-black bg-opacity-50\">\r\n          <div className=\"relative overflow-hidden border-4 border-white\r\n                          rounded-lg shadow-xl w-72 h-72\">\r\n            <video\r\n              ref={videoRef}\r\n              className=\"absolute object-cover w-full h-full\"\r\n              autoPlay muted playsInline\r\n            />\r\n            <div className=\"absolute w-full h-1 bg-red-500 animate-scan\" />\r\n          </div>\r\n          <button\r\n            onClick={() => setScanning(false)}\r\n            className=\"px-4 py-2 mt-6 text-white bg-red-600 rounded hover:bg-red-700\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* ---------- sensible defaults ----------------------------------- */\r\nScanner.defaultProps = {\r\n  formData: { barcodes: [] },\r\n  setFormData: () => {},\r\n  fieldName: \"barcodes\",\r\n};\r\n\r\nexport default Scanner;\r\n","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["AddService","isSidebarOpen","setSidebarOpen","useState","loading","setLoading","error","setError","options","setOptions","category","discounttype","label","value","tax","taxType","formdata","setFormData","barcode","description","discount","discountType","hsn","itemCode","itemName","priceWithoutTax","sac","salesPrice","sellerPoints","salesTaxType","serviceImage","useEffect","window","innerWidth","async","response","axios","get","headers","Authorization","localStorage","getItem","console","log","data","newCategory","map","item","name","_id","prev","err","message","fetchCategory","fetchService","token","newunit","taxName","fetchtax","handleChange","e","target","type","Number","handleSelectChange","selectedOption","generateItemCode","lastItemCode","match","parseInt","toString","padStart","length","lastCode","_jsx","LoadingScreen","_jsxs","className","children","Navbar","Sidebar","NavLink","to","FaTachometerAlt","onSubmit","preventDefault","post","alert","_err$response","_err$response2","_err$response2$data","postData","Input","div_class","required","label_class","onChange","htmlFor","Select","Scanner","formData","min","image","files","Button","text","_ref","id","placeholder","props","ID","useId","addUnique","arr","arguments","undefined","trimmed","trim","includes","removeAt","i","filter","_","idx","fieldName","scanning","setScanning","inputValue","setInputValue","videoRef","useRef","codeReaderRef","barcodes","pushCode","code","stopScanner","_videoRef$current","_videoRef$current$src","_codeReaderRef$curren","_codeReaderRef$curren2","current","srcObject","getTracks","forEach","t","stop","reset","call","codeReader","BrowserMultiFormatReader","decode","facingMode","decodeFromConstraints","video","result","_window$navigator","_window$navigator$vib","getText","navigator","vibrate","Audio","play","exact","startScanner","endsWith","slice","onKeyDown","key","onBlur","handleBlur","FontAwesomeIcon","icon","faBarcode","title","onClick","handleDelete","ref","autoPlay","muted","playsInline","defaultProps","_typeof","o","Symbol","iterator","constructor","prototype"],"sourceRoot":""}