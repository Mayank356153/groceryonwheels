{"version":3,"file":"static/js/9138.b6905453.chunk.js","mappings":"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","sources":["Loading.jsx","components/store/SubscriptionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","// SubscriptionList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { FaTachometerAlt, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\nimport LoadingScreen from \"../../Loading\";\r\n\r\nconst SubscriptionList = () => {\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entries, setEntries] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n  // Use searchParams to extract the storeId from the URL if available.\r\n  const [searchParams] = useSearchParams();\r\n  const storeId = searchParams.get(\"storeId\");\r\n\r\n  // Fetch subscriptions from the backend.\r\n  const fetchSubscriptions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      // If storeId is provided, filter by it\r\n      const url = storeId \r\n        ? `api/subscriptions?storeId=${storeId}` \r\n        : `api/subscriptions`;\r\n      const res = await axios.get(url, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setSubscriptions(res.data.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching subscriptions:\", error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSubscriptions();\r\n  }, [storeId]);\r\n\r\n  // Filter subscriptions by packageName (case insensitive)\r\n  const filteredSubscriptions = subscriptions.filter((sub) =>\r\n    sub.packageName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Pagination calculations\r\n  const indexOfLastItem = currentPage * entries;\r\n  const indexOfFirstItem = indexOfLastItem - entries;\r\n  const currentItems = filteredSubscriptions.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredSubscriptions.length / entries);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  // Export functionalities\r\n  const handleCopy = () => {\r\n    const data = filteredSubscriptions\r\n      .map(\r\n        (sub) =>\r\n          `${sub.packageName}, ${sub.category}, ${sub.productCount}, ${sub.total}, ${sub.status}`\r\n      )\r\n      .join(\"\\n\");\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"Data copied to clipboard!\");\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filteredSubscriptions);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Subscriptions\");\r\n    XLSX.writeFile(wb, \"subscriptions.xlsx\");\r\n  };\r\n\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Subscriptions List\", 20, 20);\r\n    const tableData = filteredSubscriptions.map((sub) => [\r\n      sub.packageName,\r\n      sub.category,\r\n      sub.productCount,\r\n      sub.total,\r\n      sub.status,\r\n    ]);\r\n    autoTable(doc, {\r\n      head: [[\"Package Name\", \"Category\", \"Product Count\", \"Total\", \"Status\"]],\r\n      body: tableData,\r\n    });\r\n    doc.save(\"subscriptions.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      filteredSubscriptions\r\n        .map((sub) =>\r\n          `${sub.packageName},${sub.category},${sub.productCount},${sub.total},${sub.status}`\r\n        )\r\n        .join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"subscriptions.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Delete a subscription\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this subscription?\")) return;\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.delete(`api/subscriptions/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      alert(\"Subscription deleted successfully!\");\r\n      fetchSubscriptions();\r\n    } catch (error) {\r\n      console.error(\"Error deleting subscription:\", error.message);\r\n      alert(\"Error deleting subscription\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      {/* Main Layout */}\r\n      <div className=\"flex flex-grow\">\r\n        <div className=\"w-auto\">\r\n          \r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        <div className={`overflow-x-auto  p-4 transition-all duration-300 w-full`}>\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-4 bg-gray-100 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex flex-col items-center gap-1 sm:flex-row\">\r\n              <h1 className=\"text-lg font-semibold sm:text-xl\">Subscriptions List</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Subscriptions</span>\r\n            </div>\r\n            {/* Show the \"Add Subscription\" button only if storeId exists */}\r\n            {storeId && (\r\n              <div>\r\n                <button\r\n                  className=\"px-4 py-2 text-white rounded bg-cyan-500\"\r\n                  onClick={() => navigate(`/add-subscription?storeId=${storeId}`)}\r\n                >\r\n                  + New Subscription\r\n                </button>\r\n              </div>\r\n            )}\r\n          </header>\r\n\r\n          {/* Table Controls */}\r\n          <div className=\"flex flex-col justify-between w-full mt-4 mb-4 space-y-2 lg:flex-row lg:space-y-0 lg:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entries}   onChange={(e) => {\r\n                    setEntries(Number(e.target.value));\r\n                    setCurrentPage(1);\r\n                  }}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col justify-around w-full gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-around flex-1 w-full gap-1 px-2'>\r\n                <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm md:w-auto\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n          {/* Subscriptions Table */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white rounded-lg shadow-lg\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"px-4 py-2 border\">Package Name</th>\r\n                  <th className=\"px-4 py-2 border\">Category</th>\r\n                  <th className=\"px-4 py-2 border\">Product Count</th>\r\n                  <th className=\"px-4 py-2 border\">Total (₹)</th>\r\n                  <th className=\"px-4 py-2 border\">Payment Type</th>\r\n                  <th className=\"px-4 py-2 border\">Status</th>\r\n                  <th className=\"px-4 py-2 border\">Start Date</th>\r\n                  <th className=\"px-4 py-2 border\">End Date</th>\r\n                  <th className=\"px-4 py-2 text-center border\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentItems.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan=\"9\" className=\"p-4 text-center text-gray-500\">\r\n                      No matching records found\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  currentItems.map((sub) => (\r\n                    <tr key={sub._id} className=\"border-b\">\r\n                      <td className=\"px-4 py-2 border\">{sub.packageName}</td>\r\n                      <td className=\"px-4 py-2 border\">{sub.category}</td>\r\n                      <td className=\"px-4 py-2 border\">{sub.productCount}</td>\r\n                      <td className=\"px-4 py-2 border\">{sub.total}</td>\r\n                      <td className=\"px-4 py-2 border\">\r\n                        {sub.paymentType?.paymentTypeName || \"N/A\"}\r\n                      </td>\r\n                      <td className=\"px-4 py-2 border\">{sub.status}</td>\r\n                      <td className=\"px-4 py-2 border\">{new Date(sub.startDate).toLocaleDateString()}</td>\r\n                      <td className=\"px-4 py-2 border\">\r\n                        {sub.endDate ? new Date(sub.endDate).toLocaleDateString() : \"N/A\"}\r\n                      </td>\r\n                      <td className=\"px-4 py-2 text-center border\">\r\n                        <button\r\n                          className=\"px-2 py-1 mr-2 text-white rounded bg-cyan-600 hover:bg-cyan-500\"\r\n                          onClick={() => navigate(`/edit-subscription/${sub._id}?storeId=${storeId}`)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          className=\"px-2 py-1 text-white bg-red-600 rounded hover:bg-red-500\"\r\n                          onClick={() => handleDelete(sub._id)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"flex justify-between mt-4\">\r\n            <div>\r\n              Showing {indexOfFirstItem + 1} to {Math.min(indexOfLastItem, filteredSubscriptions.length)} of {filteredSubscriptions.length} entries\r\n            </div>\r\n            <div>\r\n              <button\r\n                onClick={() => paginate(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n                className=\"px-2 py-1 mr-2 text-gray-700 bg-gray-300 rounded disabled:opacity-50\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={() => paginate(currentPage + 1)}\r\n                disabled={indexOfLastItem >= filteredSubscriptions.length}\r\n                className=\"px-2 py-1 ml-2 text-gray-700 bg-gray-300 rounded disabled:opacity-50\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionList;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","SubscriptionList","navigate","useNavigate","subscriptions","setSubscriptions","loading","setLoading","searchTerm","setSearchTerm","entries","setEntries","currentPage","setCurrentPage","searchParams","useSearchParams","storeId","get","fetchSubscriptions","async","token","localStorage","getItem","url","res","axios","headers","Authorization","data","error","console","message","useEffect","filteredSubscriptions","filter","sub","packageName","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","paginate","pageNumber","onClick","value","onChange","e","Number","target","handleCopy","map","category","productCount","total","status","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","autoTable","head","body","save","handlePrint","window","print","handleCsvDownload","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","type","placeholder","colSpan","_sub$paymentType","paymentType","paymentTypeName","Date","startDate","toLocaleDateString","endDate","_id","confirm","delete","id","handleDelete","min","disabled"],"sourceRoot":""}