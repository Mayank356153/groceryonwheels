{"version":3,"file":"static/js/1200.ea5e20fa.chunk.js","mappings":"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","sources":["components/Settings/PaymentTypes.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction PaymentTypesList() {\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  // Data from backend\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n  // Searching\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  // Pagination\r\n  const [entries, setEntries] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // 1) Fetch payment types from /api/payment-types\r\n  const fetchPaymentTypes = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\"api/payment-types\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      // data should be in res.data.data\r\n      setPaymentTypes(res.data.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching payment types:\", error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPaymentTypes();\r\n  }, []);\r\n\r\n  // 2) Client-side search filter\r\n  const filteredTypes = paymentTypes.filter((pt) =>\r\n    pt.paymentTypeName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // 3) Pagination\r\n  const indexOfLastItem = currentPage * entries;\r\n  const indexOfFirstItem = indexOfLastItem - entries;\r\n  const currentItems = filteredTypes.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredTypes.length / entries);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  // 4) Export functionalities\r\n  const handleCopy = () => {\r\n    const data = filteredTypes\r\n      .map((pt) => `${pt.paymentTypeName}, ${pt.status}`)\r\n      .join(\"\\n\");\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"Data copied to clipboard!\");\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filteredTypes);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"PaymentTypes\");\r\n    XLSX.writeFile(wb, \"payment_types.xlsx\");\r\n  };\r\n\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Payment Types List\", 20, 20);\r\n    const tableData = filteredTypes.map((pt) => [\r\n      pt.paymentTypeName,\r\n      pt.status,\r\n    ]);\r\n    autoTable(doc, {\r\n      head: [[\"Payment Type Name\", \"Status\"]],\r\n      body: tableData,\r\n    });\r\n    doc.save(\"payment_types.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      filteredTypes\r\n        .map((pt) => `${pt.paymentTypeName},${pt.status}`)\r\n        .join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"payment_types.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // 5) Toggle status (active <-> inactive)\r\n  const handleToggleStatus = async (paymentType) => {\r\n    try {\r\n      const newStatus =\r\n        paymentType.status === \"active\" ? \"inactive\" : \"active\";\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.put(\r\n        `api/payment-types/${paymentType._id}`,\r\n        { status: newStatus },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      fetchPaymentTypes(); // Refresh list\r\n    } catch (error) {\r\n      console.error(\"Error toggling status:\", error.message);\r\n    }\r\n  };\r\n\r\n  // 6) Delete\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this payment type?\"))\r\n      return;\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.delete(\r\n        `api/payment-types/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      alert(\"Payment Type deleted successfully!\");\r\n      fetchPaymentTypes();\r\n    } catch (error) {\r\n      console.error(\"Error deleting payment type:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        {/* Sidebar */}\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        {/* Content */}\r\n        <div\r\n          className={`flex-grow flex flex-col p-2 md:p-2 min-h-screen w-full`}\r\n        >\r\n          {/* Header */}\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-2 bg-gray-100 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">\r\n                Payment Types\r\n              </h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">\r\n                View/Search Records\r\n              </span>\r\n            </div>\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" />{\" \"}\r\n                Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-1 sm:mx-2\" />\r\n              <a\r\n                href=\"#\"\r\n                className=\"text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                Payment Types List\r\n              </a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Main Card */}\r\n          <div className=\"p-4 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n            <header className=\"flex items-center justify-between mb-4\">\r\n              <h2 className=\"text-lg font-semibold\">Payment Types</h2>\r\n              <button\r\n                className=\"px-4 py-2 text-white rounded bg-cyan-500\"\r\n                onClick={() => navigate(\"/add-payment-type\")}\r\n              >\r\n                + Create New\r\n              </button>\r\n            </header>\r\n\r\n            {/* Table Controls */}\r\n            <div className=\"flex flex-col justify-between w-full mt-4 mb-4 space-y-2 lg:flex-row lg:space-y-0 lg:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entries}   onChange={(e) => {\r\n                    setEntries(Number(e.target.value));\r\n                    setCurrentPage(1);\r\n                  }}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col justify-around w-full gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-around flex-1 w-full gap-1 px-2'>\r\n                <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm md:w-auto\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Table */}\r\n            <table className=\"min-w-full bg-white border-collapse rounded-lg shadow-lg\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                  <th className=\"px-4 py-2 border\">Payment Type Name</th>\r\n                  <th className=\"px-4 py-2 border\">Status</th>\r\n                  <th className=\"px-4 py-2 border\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentItems.length === 0 ? (\r\n                  <tr>\r\n                    <td\r\n                      colSpan=\"3\"\r\n                      className=\"p-4 text-center text-gray-500 border\"\r\n                    >\r\n                      No matching records found\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  currentItems.map((pt) => (\r\n                    <tr key={pt._id} className=\"border-b\">\r\n                      <td className=\"px-4 py-2 border\">{pt.paymentTypeName}</td>\r\n                      <td className=\"px-4 py-2 border\">\r\n                        <button\r\n                          className={`px-2 py-1 rounded-lg ${\r\n                            pt.status === \"active\"\r\n                              ? \"bg-green-500 text-white\"\r\n                              : \"bg-red-500 text-white\"\r\n                          }`}\r\n                          onClick={() => handleToggleStatus(pt)}\r\n                        >\r\n                          {pt.status}\r\n                        </button>\r\n                      </td>\r\n                      <td className=\"px-4 py-2 text-center border\">\r\n                        <button\r\n                          className=\"px-2 py-1 mr-2 text-white rounded bg-cyan-600 hover:bg-cyan-500 focus:outline-none\"\r\n                          onClick={() =>\r\n                            navigate(`/edit-payment-type/${pt._id}`)\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          className=\"px-2 py-1 text-white bg-red-600 rounded hover:bg-red-500 focus:outline-none\"\r\n                          onClick={() => handleDelete(pt._id)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"flex justify-between mt-4\">\r\n              <div>\r\n                Showing {indexOfFirstItem + 1} to{\" \"}\r\n                {Math.min(indexOfLastItem, filteredTypes.length)} of{\" \"}\r\n                {filteredTypes.length} entries\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={() => paginate(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-2 py-1 mr-2 text-gray-700 bg-gray-300 rounded disabled:opacity-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={() => paginate(currentPage + 1)}\r\n                  disabled={indexOfLastItem >= filteredTypes.length}\r\n                  className=\"px-2 py-1 ml-2 text-gray-700 bg-gray-300 rounded disabled:opacity-50\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentTypesList;\r\n"],"names":["navigate","useNavigate","isSidebarOpen","setSidebarOpen","useState","useEffect","window","innerWidth","paymentTypes","setPaymentTypes","searchTerm","setSearchTerm","entries","setEntries","currentPage","setCurrentPage","fetchPaymentTypes","async","token","localStorage","getItem","res","axios","get","headers","Authorization","data","error","console","message","filteredTypes","filter","pt","paymentTypeName","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","paginate","pageNumber","_jsxs","className","children","_jsx","Navbar","Sidebar","href","FaTachometerAlt","BiChevronRight","onClick","value","onChange","e","Number","target","handleCopy","map","status","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","type","placeholder","colSpan","newStatus","paymentType","put","_id","handleToggleStatus","confirm","delete","id","handleDelete","min","disabled"],"sourceRoot":""}