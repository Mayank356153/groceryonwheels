{"version":3,"file":"static/js/2037.3cbc09b6.chunk.js","mappings":"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","sources":["components/Sales/ViewPayment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ViewPayment = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const saleId = queryParams.get('saleId');\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [paymentData, setPaymentData] = useState({\r\n    customer: '',\r\n    saleCode: '',\r\n    saleDate: '',\r\n    totalAmount: 0,\r\n    totalPaid: 0,\r\n    payments: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!saleId) {\r\n      alert(\"Invalid sale ID\");\r\n      navigate('/sale-list');\r\n      return;\r\n    }\r\n    fetchPaymentDetails();\r\n  }, [saleId, navigate]);\r\n\r\n  const fetchPaymentDetails = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"No token found, please log in\");\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Fetch payment details\r\n      const paymentResponse = await axios.get(`api/payments/${saleId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      // Fetch invoices to get the correct totalAmount\r\n      const invoicesResponse = await axios.get(`api/pos/invoices`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      if (!paymentResponse.data || !invoicesResponse.data) {\r\n        throw new Error(\"No data returned from API\");\r\n      }\r\n\r\n      // Find the matching invoice by saleId\r\n      const matchingInvoice = invoicesResponse.data.find(invoice => invoice._id.toString() === saleId);\r\n      if (!matchingInvoice) {\r\n        throw new Error(\"Invoice not found for this sale ID\");\r\n      }\r\n\r\n      // Use the amount from the invoices API as totalAmount\r\n      const totalAmount = matchingInvoice.amount || 0;\r\n\r\n      setPaymentData({\r\n        customer: paymentResponse.data.customer || \"N/A\",\r\n        saleCode: paymentResponse.data.saleCode || \"N/A\",\r\n        saleDate: paymentResponse.data.saleDate && !isNaN(new Date(paymentResponse.data.saleDate).getTime())\r\n          ? new Date(paymentResponse.data.saleDate).toLocaleDateString()\r\n          : \"N/A\",\r\n        totalAmount: totalAmount,\r\n        totalPaid: paymentResponse.data.totalPaid || 0,\r\n        payments: paymentResponse.data.payments || []\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching payment details:\", error);\r\n      alert(`Could not load payment details: ${error.message}`);\r\n      navigate('/sale-list');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleDelete = (payment) => {\r\n    alert(\"Delete functionality not implemented. Please add a backend endpoint to handle payment deletion.\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    navigate('/sale-list');\r\n  };\r\n\r\n  // Calculate due amount, allowing negative values for overpayments\r\n  const dueAmount = paymentData.totalAmount - paymentData.totalPaid;\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-4xl\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-semibold\">Payments</h2>\r\n          <button onClick={handleClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n          <div>\r\n            <h3 className=\"font-semibold text-gray-700\">Customer Details</h3>\r\n            <p>{paymentData.customer}</p>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"font-semibold text-gray-700\">Sales Details</h3>\r\n            <p>Invoice #: {paymentData.saleCode}</p>\r\n            <p>Date: {paymentData.saleDate}</p>\r\n            <p>Grand Total: ₹{paymentData.totalAmount.toFixed(2)}</p>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"font-semibold text-gray-700\">Payment</h3>\r\n            <p>Paid Amount: ₹{paymentData.totalPaid.toFixed(2)}</p>\r\n            <p>Due Amount: ₹{dueAmount.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full bg-white border border-gray-300 shadow-sm\">\r\n            <thead className=\"bg-cyan-500 text-white\">\r\n              <tr>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">#</th>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">Payment Date</th>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">Payment</th>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">Payment Type</th>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">Payment Note</th>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">Created by</th>\r\n                <th className=\"px-4 py-2 text-sm font-medium text-left border\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paymentData.payments.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"8\" className=\"p-4 text-center text-gray-500 border\">\r\n                    No payments available\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                paymentData.payments.map((payment, index) => (\r\n                  <tr key={index}>\r\n                    <td className=\"border px-4 py-2\">{index + 1}</td>\r\n                    <td className=\"border px-4 py-2\">\r\n                      {payment.paymentDate && !isNaN(new Date(payment.paymentDate).getTime())\r\n                        ? new Date(payment.paymentDate).toLocaleDateString()\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"border px-4 py-2\">₹{payment.paymentAmount.toFixed(2)}</td>\r\n                    <td className=\"border px-4 py-2\">{payment.paymentType || \"Cash\"}</td>\r\n                    <td className=\"border px-4 py-2\">{payment.paymentNote || \"N/A\"}</td>\r\n                    <td className=\"border px-4 py-2\">{payment.creatorName || \"N/A\"}</td>\r\n                    <td className=\"border px-4 py-2 flex space-x-2\">\r\n                      <button onClick={handlePrint} className=\"text-blue-500 hover:text-blue-700\">\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\"></path>\r\n                        </svg>\r\n                      </button>\r\n                      <button onClick={() => handleDelete(payment)} className=\"text-red-500 hover:text-red-700\">\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4a1 1 0 011 1v1H9V4a1 1 0 011-1zm-5 4h12\"></path>\r\n                        </svg>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"flex justify-end mt-4\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPayment;"],"names":["ViewPayment","navigate","useNavigate","location","useLocation","saleId","URLSearchParams","search","get","loading","setLoading","useState","paymentData","setPaymentData","customer","saleCode","saleDate","totalAmount","totalPaid","payments","useEffect","alert","fetchPaymentDetails","async","token","localStorage","getItem","paymentResponse","axios","headers","Authorization","invoicesResponse","data","Error","matchingInvoice","find","invoice","_id","toString","amount","isNaN","Date","getTime","toLocaleDateString","error","console","message","handlePrint","window","print","handleClose","dueAmount","_jsx","children","className","_jsxs","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","toFixed","length","colSpan","map","payment","index","paymentDate","paymentAmount","paymentType","paymentNote","creatorName"],"sourceRoot":""}