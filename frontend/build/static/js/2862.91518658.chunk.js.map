{"version":3,"file":"static/js/2862.91518658.chunk.js","mappings":"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","sources":["Loading.jsx","components/Stock/AddStockAdjustment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\nfunction AddStockAdjustment() {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const id = searchParams.get(\"id\"); // if present, we are editing\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Warehouse dropdown data\r\n  const [warehouses, setWarehouses] = useState([]);\r\n\r\n  // Items for searching\r\n  const [allItems, setAllItems] = useState([]);\r\n  const [filteredItemsByWarehouse, setFilteredItemsByWarehouse] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // Table of selected items\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  // Stock Adjustment form data\r\n  const [formData, setFormData] = useState({\r\n    warehouse: \"\",                                  // ⬅️ will default later if not editing\r\n    adjustmentDate: new Date().toLocaleDateString(\"en-CA\"),\r\n    referenceNo: \"\",\r\n    note: \"\",\r\n    totalQuantity: 0,\r\n  });\r\n\r\n  // Compute total quantity from selected items\r\n  const totalQuantity = selectedItems.reduce(\r\n    (sum, it) => sum + (it.quantity || 0),\r\n    0\r\n  );\r\n\r\n  // ─── FETCH INITIAL DATA ─────────────────────────────────────────────────\r\n  useEffect(() => {\r\n    fetchWarehouses();\r\n    if (!id) {\r\n      generateNextRefNumber();\r\n    }\r\n  }, []);\r\n\r\n  // Whenever formData.warehouse changes (including the automatic default),\r\n  // re-fetch items for that warehouse.\r\n  useEffect(() => {\r\n    if (formData.warehouse) {\r\n      fetchItems(formData.warehouse);\r\n    } else {\r\n      setAllItems([]);\r\n      setFilteredItemsByWarehouse([]);\r\n      if (!id) {\r\n        setSelectedItems([]);\r\n      }\r\n    }\r\n  }, [formData.warehouse, id]);\r\n\r\n  // If we’re in “edit” mode, wait for warehouses ➝ items ➝ then load the existing adjustment.\r\n  useEffect(() => {\r\n    if (id && formData.warehouse && allItems.length > 0) {\r\n      loadStockAdjustment(id);\r\n    }\r\n  }, [id, formData.warehouse, allItems]);\r\n\r\n  // ─── FETCH AND SET WAREHOUSES ─────────────────────────────────────────────\r\n  const fetchWarehouses = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\"api/warehouses\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      // Only “Active” warehouses\r\n      const activeWh = (res.data.data || [])\r\n        .filter((w) => w.status === \"Active\")\r\n        .map((w) => ({\r\n          ...w,\r\n          label: w.warehouseName,\r\n          value: w._id,\r\n        }));\r\n\r\n      setWarehouses(activeWh);\r\n\r\n      // ⬅️ If not editing, pick the “store’s warehouse” (the restricted one) as default:\r\n      if (!id && activeWh.length > 0) {\r\n        // assume your “store’s warehouse” is flagged with isRestricted === true\r\n        const restricted = activeWh.find((w) => w.isRestricted);\r\n        const defaultWhId = restricted ? restricted._id : activeWh[0]._id;\r\n        setFormData((prev) => ({ ...prev, warehouse: defaultWhId }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching warehouses:\", error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ─── FETCH ITEMS FOR THE SELECTED WAREHOUSE ───────────────────────────────\r\n  const fetchItems = async (warehouseId = null) => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const params = warehouseId ? { warehouse: warehouseId } : {};\r\n      const res = await axios.get(\"api/items\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params,\r\n      });\r\n      const items = res.data.data || [];\r\n      const flattenedItems = items.map((it) => {\r\n        const isVariant = Boolean(it.parentItemId);\r\n        return {\r\n          ...it,\r\n          parentId: isVariant ? it.parentItemId : it._id,\r\n          variantId: isVariant ? it._id : null,\r\n          displayName: isVariant\r\n            ? `${it.itemName} / ${it.variantName || \"Variant\"}`\r\n            : it.itemName,\r\n          itemCode: it.itemCode || \"\",\r\n          barcode: it.barcodes?.[0] || \"\",\r\n          barcodes: it.barcodes || [],\r\n          isVariant,\r\n        };\r\n      });\r\n      setAllItems(flattenedItems);\r\n      setFilteredItemsByWarehouse(flattenedItems);\r\n    } catch (error) {\r\n      console.error(\"Error fetching items:\", error.message);\r\n      setAllItems([]);\r\n      setFilteredItemsByWarehouse([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ─── LOAD EXISTING STOCK ADJUSTMENT FOR EDITING ─────────────────────────\r\n  const loadStockAdjustment = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\r\n        `api/stock-adjustments/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const data = res.data.data;\r\n\r\n      // Populate form fields\r\n      setFormData({\r\n        warehouse: data.warehouse?._id || data.warehouse || \"\",\r\n        adjustmentDate: data.adjustmentDate\r\n          ? data.adjustmentDate.split(\"T\")[0]\r\n          : \"\",\r\n        referenceNo: data.referenceNo || \"\",\r\n        note: data.note || \"\",\r\n        totalQuantity: data.totalQuantity || 0,\r\n      });\r\n\r\n      // If the fetched warehouse differs, refetch items for that warehouse:\r\n      if (data.warehouse?._id && formData.warehouse !== data.warehouse?._id) {\r\n        await fetchItems(data.warehouse._id);\r\n      }\r\n\r\n      // Map existing items into selectedItems state\r\n      const itemsArray = (data.items || []).map((it) => {\r\n        const item = allItems.find(\r\n          (i) => i._id === (it.item?._id || it.item)\r\n        ) || {};\r\n        return {\r\n          itemId: it.item?._id || it.item,\r\n          itemName:\r\n            item.displayName || it.item?.itemName || \"Unknown Item\",\r\n          quantity: it.quantity || 0,\r\n          isVariant: item.isVariant || false,\r\n          variantName: item.variantName || \"\",\r\n        };\r\n      });\r\n\r\n      setSelectedItems(itemsArray);\r\n    } catch (error) {\r\n      console.error(\"Error loading stock adjustment:\", error.message);\r\n      alert(\"Error loading stock adjustment\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ─── GENERATE NEXT REFERENCE NUMBER ─────────────────────────────────────\r\n  const generateNextRefNumber = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\"api/stock-adjustments\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const adjustments = res.data.data || [];\r\n      const year = new Date().getFullYear();\r\n      let nextRef = `ADJ/${year}/01`;\r\n      if (adjustments.length > 0) {\r\n        const sorted = adjustments\r\n          .filter((a) => !a.isReturn && !!a.referenceNo)\r\n          .sort(\r\n            (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n          );\r\n        if (sorted.length > 0) {\r\n          const latest = sorted[0].referenceNo;\r\n          const [prefix, yr, num] = latest.split(\"/\");\r\n          if (\r\n            prefix === \"ADJ\" &&\r\n            yr === year.toString() &&\r\n            !isNaN(num)\r\n          ) {\r\n            const nextNum = parseInt(num, 10) + 1;\r\n            nextRef = `ADJ/${year}/${nextNum\r\n              .toString()\r\n              .padStart(2, \"0\")}`;\r\n          }\r\n        }\r\n      }\r\n      setFormData((prev) => ({ ...prev, referenceNo: nextRef }));\r\n    } catch (error) {\r\n      console.error(\"Error generating next reference number:\", error.message);\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        referenceNo: `ADJ/${new Date().getFullYear()}/01`,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // ─── FILTERED ITEMS FOR AUTOCOMPLETE DROPDOWN ──────────────────────────\r\n  const filteredItems = searchQuery\r\n    ? filteredItemsByWarehouse.filter((item) => {\r\n        const q = searchQuery.toLowerCase();\r\n        return (\r\n          item.displayName?.toLowerCase().includes(q) ||\r\n          item.itemCode?.toLowerCase().includes(q) ||\r\n          (item.barcodes &&\r\n            item.barcodes.some((b) =>\r\n              b.toLowerCase().includes(q)\r\n            ))\r\n        );\r\n      })\r\n    : [];\r\n\r\n  // ─── ADD AN ITEM TO SELECTED ITEMS ─────────────────────────────────────\r\n  const handleAddItem = (targetItem) => {\r\n  if (!targetItem) return;\r\n\r\n  // see if it's already in the list\r\n  const existing = selectedItems.find(it => it.itemId === targetItem._id);\r\n\r\n  if (existing) {\r\n    // increment its quantity\r\n    setSelectedItems(selectedItems.map(it =>\r\n      it.itemId === targetItem._id\r\n        ? { ...it, quantity: it.quantity + 1 }\r\n        : it\r\n    ));\r\n  } else {\r\n    // otherwise add new with qty 1\r\n    setSelectedItems([\r\n      ...selectedItems,\r\n      {\r\n        itemId:       targetItem._id,\r\n        itemName:     targetItem.displayName,\r\n        quantity:     1,\r\n        isVariant:    targetItem.isVariant,\r\n        variantName:  targetItem.variantName,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  // clear search box in both cases\r\n  setSearchQuery(\"\");\r\n};\r\n\r\n  // ─── REMOVE AN ITEM FROM SELECTED ITEMS ───────────────────────────────\r\n  const handleRemoveItem = (itemId) => {\r\n    setSelectedItems(\r\n      selectedItems.filter((it) => it.itemId !== itemId)\r\n    );\r\n  };\r\n\r\n  // ─── UPDATE QUANTITY IN SELECTED ITEMS ─────────────────────────────────\r\n  const handleQuantityChange = (itemId, qty) => {\r\n    const newItems = selectedItems.map((it) =>\r\n      it.itemId === itemId\r\n        ? { ...it, quantity: parseInt(qty) || 0 }\r\n        : it\r\n    );\r\n    setSelectedItems(newItems);\r\n  };\r\n\r\n  // ─── HANDLE FORM FIELD CHANGES ────────────────────────────────────────\r\n  const handleFormChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // ─── SUBMIT (CREATE OR UPDATE) ─────────────────────────────────────────\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.warehouse) {\r\n      alert(\"Please select a warehouse.\");\r\n      return;\r\n    }\r\n    if (selectedItems.length === 0) {\r\n      alert(\"Please add at least one item.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const itemsPayload = selectedItems.map((it) => ({\r\n        item: it.itemId,\r\n        quantity: it.quantity,\r\n      }));\r\n\r\n      const payload = {\r\n        warehouse: formData.warehouse,\r\n        adjustmentDate: formData.adjustmentDate,\r\n        referenceNo: formData.referenceNo,\r\n        items: itemsPayload,\r\n        totalQuantity: totalQuantity,\r\n        note: formData.note,\r\n      };\r\n      const token = localStorage.getItem(\"token\");\r\n      if (id) {\r\n        await axios.put(\r\n          `api/stock-adjustments/${id}`,\r\n          payload,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        alert(\"Stock Adjustment updated successfully!\");\r\n      } else {\r\n        await axios.post(\r\n          \"api/stock-adjustments\",\r\n          payload,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        alert(\"Stock Adjustment created successfully!\");\r\n      }\r\n      navigate(\"/stock-adjustment\");\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error submitting stock adjustment:\",\r\n        error.message\r\n      );\r\n      alert(\"Error submitting stock adjustment\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ─── CLOSE OR CANCEL ───────────────────────────────────────────────────\r\n  const handleClose = () => {\r\n    navigate(\"/stock-adjustment\");\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <Navbar\r\n        isSidebarOpen={isSidebarOpen}\r\n        setSidebarOpen={setSidebarOpen}\r\n      />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className={`flex-grow p-4 transition-all duration-300 w-full`}>\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-2 bg-white rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-baseline gap-2 text-sm sm:flex-row\">\r\n              <h1 className=\"text-sm font-semibold text-gray-800 md:text-xl\">\r\n                {id ? \"Edit Stock Adjustment\" : \"Add Stock Adjustment\"}\r\n              </h1>\r\n              <span className=\"text-sm text-gray-600\">\r\n                {id\r\n                  ? \"Update Stock Adjustment\"\r\n                  : \"Create Stock Adjustment\"}\r\n              </span>\r\n            </div>\r\n            <nav className=\"flex items-center text-sm text-gray-500\">\r\n              <a\r\n                href=\"/dashboard\"\r\n                className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                <FaTachometerAlt className=\"mr-2\" />\r\n                Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2\" />\r\n              <a\r\n                href=\"/adjustment-list\"\r\n                className=\"text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                Stock Adjustment List\r\n              </a>\r\n            </nav>\r\n          </header>\r\n\r\n          <div className=\"p-4 bg-white border-t-4 rounded-md shadow-md border-cyan-500\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"grid grid-cols-1 gap-4 mb-4 md:grid-cols-3\">\r\n                <div>\r\n                  <label className=\"block mb-1 font-semibold\">\r\n                    Warehouse\r\n                  </label>\r\n                  <select\r\n                    name=\"warehouse\"\r\n                    value={formData.warehouse}\r\n                    onChange={handleFormChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Warehouse</option>\r\n                    {warehouses.map((wh) => (\r\n                      <option key={wh._id} value={wh._id}>\r\n                        {wh.warehouseName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block mb-1 font-semibold\">Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"adjustmentDate\"\r\n                    value={formData.adjustmentDate}\r\n                    onChange={handleFormChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block mb-1 font-semibold\">\r\n                    Reference No.\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"referenceNo\"\r\n                    value={formData.referenceNo}\r\n                    onChange={handleFormChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* ─── SEARCH & AUTOCOMPLETE ───────────────────────────────── */}\r\n              <div className=\"relative w-full mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">\r\n                  Search Item\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Item name / Barcode / Itemcode\"\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => {\r\n                    const val = e.target.value.trim();\r\n                    setSearchQuery(val);\r\n\r\n                    // ⬅️ If user typed a full barcode (or exact itemCode), add immediately:\r\n                    const hit = allItems.find(\r\n                      (i) =>\r\n                        i.barcodes?.includes(val) ||\r\n                        i.itemCode === val\r\n                    );\r\n                    if (hit) {\r\n                      handleAddItem(hit);\r\n                      setSearchQuery(\"\");\r\n                    }\r\n                  }}\r\n                  disabled={!formData.warehouse}\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === \"Enter\" && filteredItems[0]) {\r\n                      handleAddItem(filteredItems[0]);\r\n                      setSearchQuery(\"\");\r\n                    }\r\n                  }}\r\n                />\r\n\r\n                {/* ⬅️ AUTOCOMPLETE DROPDOWN */}\r\n                {searchQuery && filteredItems.length > 0 && (\r\n                  <div\r\n                    className=\"absolute z-50 w-full overflow-y-auto bg-white border rounded-lg shadow-lg top-14 sm:w-96 max-h-60 touch-auto\"\r\n                    style={{ WebkitOverflowScrolling: \"touch\" }}\r\n                  >\r\n                    <ul>\r\n                      {filteredItems.map((list) => (\r\n                        <li\r\n                          key={list._id}\r\n                          onClick={() => {\r\n                            handleAddItem(list);\r\n                            setSearchQuery(\"\");\r\n                          }}\r\n                          className=\"p-2 cursor-pointer hover:bg-gray-100\"\r\n                        >\r\n                          <strong>{list.itemCode}</strong> -{\" \"}\r\n                          {list.displayName}{\" \"}\r\n                          {list.isVariant\r\n                            ? `(${list.variantName})`\r\n                            : \"\"}\r\n                          {list.barcodes?.[0] && (\r\n                            <span className=\"text-gray-500\">\r\n                              {\" \"}\r\n                              - {list.barcodes[0]}\r\n                            </span>\r\n                          )}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* ─── SELECTED ITEMS TABLE ───────────────────────────────────── */}\r\n              <div className=\"p-4 mb-4 bg-white rounded-md shadow-md\">\r\n                <div className=\"flex justify-center gap-2 py-2 text-sm font-semibold text-white bg-cyan-600\">\r\n                  <div className=\"w-64 text-center\">Item Name</div>\r\n                  <div className=\"w-32 text-center\">\r\n                    Quantity (Negative to Decrease)\r\n                  </div>\r\n                  <div className=\"w-24 text-center\">Action</div>\r\n                </div>\r\n\r\n                {selectedItems.length === 0 ? (\r\n                  <div className=\"py-4 text-center text-gray-500\">\r\n                    No items selected.\r\n                  </div>\r\n                ) : (\r\n                  selectedItems.map((sel) => (\r\n                    <div\r\n                      key={sel.itemId}\r\n                      className=\"flex items-center justify-center gap-2 py-2 border-t\"\r\n                    >\r\n                      <div className=\"w-64 text-center\">\r\n                        {sel.itemName}\r\n                      </div>\r\n                      <div className=\"w-32 text-center\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"w-16 text-center border border-gray-300 rounded\"\r\n                          value={sel.quantity}\r\n                          onChange={(e) =>\r\n                            handleQuantityChange(\r\n                              sel.itemId,\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          min=\"-9999\"\r\n                          max=\"9999\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-24 text-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"px-2 py-1 text-white bg-red-500 rounded\"\r\n                          onClick={() =>\r\n                            handleRemoveItem(sel.itemId)\r\n                          }\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex items-center mb-4\">\r\n                <label className=\"mr-2 font-semibold text-gray-700\">\r\n                  Total Quantity:\r\n                </label>\r\n                <span className=\"text-gray-600\">\r\n                  {totalQuantity}\r\n                </span>\r\n                <span className=\"ml-2 text-sm text-gray-500\">\r\n                  (Negative indicates decrease)\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">\r\n                  Note\r\n                </label>\r\n                <textarea\r\n                  name=\"note\"\r\n                  rows=\"2\"\r\n                  value={formData.note}\r\n                  onChange={handleFormChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 font-semibold text-white bg-green-500 rounded-md shadow hover:bg-green-600\"\r\n                >\r\n                  {id ? \"Update\" : \"Save\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-6 py-2 font-semibold text-white bg-orange-500 rounded-md shadow hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddStockAdjustment;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","navigate","useNavigate","searchParams","useSearchParams","id","get","loading","setLoading","warehouses","setWarehouses","allItems","setAllItems","filteredItemsByWarehouse","setFilteredItemsByWarehouse","searchQuery","setSearchQuery","selectedItems","setSelectedItems","formData","setFormData","warehouse","adjustmentDate","Date","toLocaleDateString","referenceNo","note","totalQuantity","reduce","sum","it","quantity","useEffect","fetchWarehouses","generateNextRefNumber","fetchItems","length","loadStockAdjustment","async","token","localStorage","getItem","activeWh","axios","headers","Authorization","data","filter","w","status","map","label","warehouseName","value","_id","restricted","find","isRestricted","defaultWhId","prev","error","console","message","warehouseId","arguments","undefined","params","res","flattenedItems","_it$barcodes","isVariant","Boolean","parentItemId","parentId","variantId","displayName","itemName","variantName","itemCode","barcode","barcodes","_data$warehouse","_data$warehouse2","_data$warehouse3","split","itemsArray","items","_it$item2","_it$item3","item","i","_it$item","itemId","alert","adjustments","year","getFullYear","nextRef","sorted","a","isReturn","sort","b","createdAt","latest","prefix","yr","num","toString","isNaN","nextNum","parseInt","padStart","filteredItems","_item$displayName","_item$itemCode","q","toLowerCase","includes","some","handleAddItem","targetItem","existing","handleFormChange","e","target","name","href","FaTachometerAlt","BiChevronRight","onSubmit","preventDefault","itemsPayload","payload","put","post","onChange","required","wh","type","readOnly","placeholder","val","trim","hit","_i$barcodes","disabled","onKeyPress","key","style","WebkitOverflowScrolling","list","_list$barcodes","onClick","sel","handleQuantityChange","qty","newItems","min","max","handleRemoveItem","rows","handleClose"],"sourceRoot":""}