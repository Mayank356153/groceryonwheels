{"version":3,"file":"static/js/4069.f975c554.chunk.js","mappings":"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","sources":["components/utils/escposEncoder.js","components/Settings/BluetoothPrinterConnector.jsx"],"sourcesContent":["// utils/escposEncoder.js\nexport default class EscPosEncoder {\n  constructor() {\n    this._buf = [];\n  }\n  initialize() {\n    // ESC @\n    this._buf.push(0x1b, 0x40);\n    return this;\n  }\n  newline() {\n    this._buf.push(0x0a);\n    return this;\n  }\n  align(mode = 'lt') {\n    const m = { lt: 0, ct: 1, rt: 2 }[mode] || 0;\n    this._buf.push(0x1b, 0x61, m);\n    return this;\n  }\n  line(text = '') {\n    for (let i = 0; i < text.length; i++) {\n      this._buf.push(text.charCodeAt(i));\n    }\n    return this;\n  }\n  leftRight(left = '', right = '') {\n    const width = 32; // chars per line\n    const pad = width - left.length - right.length;\n    const line = left + ' '.repeat(pad < 0 ? 1 : pad) + right;\n    return this.line(line);\n  }\n  cut() {\n    // GS V 1\n    this._buf.push(0x1d, 0x56, 1);\n    return this;\n  }\n  encode() {\n    return new Uint8Array(this._buf);\n  }\n}\n","import React, { useState } from 'react';\nimport EscPosEncoder from '../utils/escposEncoder';\n\n/**\n * React component to connect and print to any Bluetooth ESC‑POS printer.\n * \n * • Web (Android Chrome) via Web Bluetooth: dynamically discovers a writable characteristic.\n * • Hybrid (Cordova/Capacitor) via cordova-plugin-bluetooth-serial.\n *\n * Props:\n *   rows      – Array of { itemName, quantity, salesPrice }\n *   storeInfo – { storeName: string }\n */\nexport default function BluetoothPrinterConnector({ rows = [], storeInfo = {} }) {\n  const [characteristic, setCharacteristic] = useState(null);\n  const [usingBLE, setUsingBLE] = useState(false);\n\n  // 1️⃣ Connect: BLE dynamic discovery or Classic SPP fallback\n  async function connectPrinter() {\n    // BLE path\n    if (navigator.bluetooth) {\n      try {\n        // show all devices so we can connect to any BLE printer\n        const device = await navigator.bluetooth.requestDevice({ acceptAllDevices: true });\n        const server = await device.gatt.connect();\n\n        // discover a writable characteristic\n        const services = await server.getPrimaryServices();\n        let writeChar = null;\n        for (const svc of services) {\n          const chars = await svc.getCharacteristics();\n          for (const ch of chars) {\n            if (ch.properties.write || ch.properties.writeWithoutResponse) {\n              writeChar = ch;\n              break;\n            }\n          }\n          if (writeChar) break;\n        }\n\n        if (!writeChar) {\n          throw new Error('No writable characteristic found');\n        }\n\n        setCharacteristic(writeChar);\n        setUsingBLE(true);\n        alert('Connected via Web Bluetooth');\n      } catch (err) {\n        console.error(err);\n        alert('BLE connection failed: ' + err.message);\n      }\n\n    // Classic SPP fallback\n    } else if (window.bluetoothSerial) {\n      window.bluetoothSerial.list(\n        devices => {\n          const target = devices[0]; // pick first device or apply your filter\n          window.bluetoothSerial.connect(\n            target.id,\n            () => {\n              setUsingBLE(false);\n              alert('Connected via Bluetooth Serial');\n            },\n            err => alert('SPP connect failed: ' + err)\n          );\n        },\n        err => alert('Device list failed: ' + err)\n      );\n    } else {\n      alert('Bluetooth API not supported');\n    }\n  }\n\n  // 2️⃣ Print: build ESC‑POS and send\n  async function printReceipt() {\n    if (!characteristic && !window.bluetoothSerial) {\n      alert('Printer not connected');\n      return;\n    }\n\n    // build ESC‑POS commands\n    const encoder = new EscPosEncoder();\n    let data = encoder.initialize()\n      .align('ct')\n      .line(storeInfo.storeName || 'Receipt')\n      .newline();\n\n    rows.forEach(r => {\n      const line = `${r.itemName}`;\n      const amount = (r.quantity * r.salesPrice).toFixed(2);\n      data = data.leftRight(line, amount).newline();\n    });\n\n    data = data.cut().encode(); // Uint8Array\n\n    if (usingBLE && characteristic) {\n      try {\n        await characteristic.writeValue(data);\n        alert('Printed via BLE');\n      } catch (err) {\n        console.error(err);\n        alert('BLE write failed: ' + err.message);\n      }\n    } else {\n      // Classic SPP write\n      try {\n        await new Promise((res, rej) => {\n          window.bluetoothSerial.write(data.buffer,\n            () => res(),\n            e => rej(e)\n          );\n        });\n        alert('Printed via SPP');\n      } catch (err) {\n        console.error(err);\n        alert('SPP write failed: ' + err);\n      }\n    }\n  }\n\n  // 3️⃣ Disconnect\n  function disconnectPrinter() {\n    if (usingBLE && characteristic && characteristic.service.device.gatt.connected) {\n      characteristic.service.device.gatt.disconnect();\n      alert('BLE printer disconnected');\n    } else if (window.bluetoothSerial) {\n      window.bluetoothSerial.disconnect();\n      alert('Bluetooth Serial disconnected');\n    }\n    setCharacteristic(null);\n    setUsingBLE(false);\n  }\n\n  return (\n    <div className=\"flex gap-4\">\n      <button onClick={connectPrinter} className=\"px-4 py-2 bg-blue-600 text-white rounded\">Connect</button>\n      <button onClick={printReceipt} className=\"px-4 py-2 bg-green-600 text-white rounded\" disabled={!characteristic && !window.bluetoothSerial}>Print</button>\n      <button onClick={disconnectPrinter} className=\"px-4 py-2 bg-red-600 text-white rounded\" disabled={!characteristic && !window.bluetoothSerial}>Disconnect</button>\n    </div>\n  );\n}\n"],"names":["EscPosEncoder","constructor","this","_buf","initialize","push","newline","align","m","lt","ct","rt","arguments","length","undefined","line","text","i","charCodeAt","leftRight","left","right","pad","repeat","cut","encode","Uint8Array","BluetoothPrinterConnector","_ref","rows","storeInfo","characteristic","setCharacteristic","useState","usingBLE","setUsingBLE","_jsxs","className","children","_jsx","onClick","async","navigator","bluetooth","device","requestDevice","acceptAllDevices","server","gatt","connect","services","getPrimaryServices","writeChar","svc","chars","getCharacteristics","ch","properties","write","writeWithoutResponse","Error","alert","err","console","error","message","window","bluetoothSerial","list","devices","target","id","data","storeName","forEach","r","itemName","amount","quantity","salesPrice","toFixed","writeValue","Promise","res","rej","buffer","e","disabled","service","connected","disconnect"],"sourceRoot":""}