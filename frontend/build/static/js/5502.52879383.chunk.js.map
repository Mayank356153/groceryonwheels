{"version":3,"file":"static/js/5502.52879383.chunk.js","mappings":"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","sources":["components/Order/OrderList/CustomerView.jsx","components/Order/OrderList/PriceView.jsx","components/Order/OrderList/AssignRider.jsx","components/Order/OrderList/AssignVan.jsx","components/Order/OrderList/ItemListPage.jsx","components/Order/OrderList/OrderList.jsx"],"sourcesContent":["import React, { useState ,useEffect} from 'react';\r\nimport {\r\n  Card,\r\n  Descriptions,\r\n  Tag,\r\n  Button,\r\n  Divider,\r\n  notification,\r\n  Modal\r\n} from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  EnvironmentOutlined,\r\n  EditOutlined,\r\n  CloseOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst CustomerProfile = ({ customerData, visible, onClose }) => {\r\n  const [customer, setCustomer] = useState(customerData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [address, setAddress] = useState({});\r\n  const handleStatusToggle = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const newStatus = customer.status === 'active' ? 'inactive' : 'active';\r\n\r\n      const response = await axios.patch(`customers/${customer._id}`, {\r\n        status: newStatus\r\n      });\r\n\r\n      setCustomer({\r\n        ...customer,\r\n        status: newStatus\r\n      });\r\n\r\n      notification.success({\r\n        message: 'Status Updated',\r\n        description: `Customer status changed to ${newStatus}`\r\n      });\r\n    } catch (error) {\r\n      notification.error({\r\n        message: 'Update Failed',\r\n        description: error.response?.data?.message || 'Failed to update status'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n   \r\n   useEffect(()=>{\r\n     const fetchAddress = async () => {\r\n      try {\r\n        const response = await axios.get(`https://pos.inspiredgrow.in/vps/api/addresses/admin/all`,\r\n          {\r\n               headers:{\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n          }\r\n        );\r\n        const addressData = response.data.data.find(address => address.user?._id === customer._id);\r\n        setAddress(addressData || {});\r\n        console.log('Address Data:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching customer data:', error);\r\n      }\r\n    };\r\n    fetchAddress();\r\n  },[])\r\n\r\n  const statusTag = {\r\n    active: <Tag color=\"green\">Active</Tag>,\r\n    inactive: <Tag color=\"red\">Inactive</Tag>,\r\n    pending: <Tag color=\"orange\">Pending</Tag>,\r\n    suspended: <Tag color=\"volcano\">Suspended</Tag>\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      closable={false}\r\n      centered\r\n      width={800}\r\n      bodyStyle={{\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none',\r\n        padding: 0\r\n      }}\r\n    >\r\n      <div className=\"relative\">\r\n        {/* Close Button */}\r\n        <Button\r\n          icon={<CloseOutlined />}\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 10,\r\n            right: 10,\r\n            zIndex: 10\r\n          }}\r\n          shape=\"circle\"\r\n        />\r\n\r\n        <Card\r\n          title={\r\n            <div className=\"flex items-center justify-between\">\r\n              <span>\r\n                <UserOutlined className=\"mr-2\" />\r\n                Customer Profile\r\n              </span>\r\n             \r\n            </div>\r\n          }\r\n          style={{ borderRadius: '10px' }}\r\n        >\r\n          <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\r\n            {/* Basic Information */}\r\n            <div>\r\n              <Descriptions title=\"Basic Information\" column={1}>\r\n                <Descriptions.Item label=\"Customer ID\">\r\n                  {customer._id || 'N/A'}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Name\">\r\n                  {customer.name}\r\n                </Descriptions.Item>\r\n               \r\n                <Descriptions.Item label=\"Join Date\">\r\n                  {new Date(customer.createdAt).toLocaleDateString()}\r\n                </Descriptions.Item>\r\n              </Descriptions>\r\n            </div>\r\n\r\n            {/* Contact Information */}\r\n            <div>\r\n              <Descriptions title=\"Contact Information\" column={1}>\r\n                <Descriptions.Item label={<><MailOutlined /> Email</>}>\r\n                  {customer.email || 'N/A'}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label={<><PhoneOutlined /> Phone</>}>\r\n                  {customer.mobile || customer.phone || 'N/A'}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label={<><EnvironmentOutlined /> Address</>}>\r\n                  {address ? (\r\n                    <>\r\n                     {address.houseNo && `${address.houseNo}, `}\r\n                      {address.area && `${address.area}, `}\r\n                      {address.city && `${address.city}, `}\r\n                      {address.state && `${address.state}, `}\r\n                      {address.postalCode && `${address.postalCode}`}\r\n                    </>\r\n                  ) : 'N/A'}\r\n                </Descriptions.Item>\r\n              </Descriptions>\r\n            </div>\r\n          </div>\r\n\r\n          <Divider />\r\n\r\n          {/* Additional Information */}\r\n          <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\r\n            <div>\r\n              <h3 className=\"font-semibold\">Account Details</h3>\r\n              <p>Credit Limit: Rs.{customer.creditLimit?.toFixed(2) || '0.00'}</p>\r\n              <p>Previous Due: Rs.{customer.previousDue?.toFixed(2) || '0.00'}</p>\r\n              <p>Price Level: {customer.priceLevelType || 'Standard'}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"font-semibold\">Tax Information</h3>\r\n              <p>GST Number: {customer.gstNumber || 'N/A'}</p>\r\n              <p>PAN Number: {customer.panNumber || 'N/A'}</p>\r\n              <p>Tax Number: {customer.taxNumber || 'N/A'}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"font-semibold\">Shipping Information</h3>\r\n              {customer.shippingAddress ? (\r\n                <>\r\n                  <p>\r\n                    {customer.shippingAddress.houseNo && `${customer.shippingAddress.houseNo}, `}\r\n                    {customer.shippingAddress.area && `${customer.shippingAddress.area}, `}\r\n                    {customer.shippingAddress.city && `${customer.shippingAddress.city}`}\r\n                  </p>\r\n                  <p>\r\n                    {customer.shippingAddress.state && `${customer.shippingAddress.state}, `}\r\n                    {customer.shippingAddress.postalCode && `${customer.shippingAddress.postalCode}`}\r\n                  </p>\r\n                  {customer.shippingAddress.locationLink && (\r\n                    <a\r\n                      href={customer.shippingAddress.locationLink}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"text-blue-500\"\r\n                    >\r\n                      View on Map\r\n                    </a>\r\n                  )}\r\n                </>\r\n              ) : <p>Same as billing address</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <Divider />\r\n\r\n          {/* Customer Image/Attachments\r\n          {customer.customerImage && (\r\n            <div>\r\n              <h3 className=\"font-semibold\">Customer Image</h3>\r\n              <img\r\n                src={`uploads/${customer.customerImage}`}\r\n                alt=\"Customer\"\r\n                className=\"object-cover w-32 h-32 border rounded-md\"\r\n              />\r\n            </div>\r\n          )} */}\r\n        </Card>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomerProfile;\r\n","\r\nimport React, { useRef } from 'react';\r\nimport { Modal, Card, Table, Divider, Tag, Descriptions, Button } from 'antd';\r\nimport {\r\n  ShoppingCartOutlined,\r\n  DollarOutlined,\r\n  PercentageOutlined,\r\n  FilePdfOutlined,\r\n  PrinterOutlined,\r\n  ShareAltOutlined,\r\n  CloseOutlined\r\n} from '@ant-design/icons';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nconst PriceBreakdownModal = ({ visible, onClose, order }) => {\r\n   const[address, setAddress] = useState({});\r\n  useEffect(()=>{\r\n     const fetchAddress = async () => {\r\n      try {\r\n        const response = await axios.get(`https://pos.inspiredgrow.in/vps/api/addresses/admin/all`,\r\n          {\r\n               headers:{\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n          }\r\n        );\r\n        const addressData = response.data.data.find(address => address.user?._id === order.customer._id);\r\n        setAddress(addressData || {});\r\n        console.log('Address Data:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching customer data:', error);\r\n       \r\n      }\r\n    };\r\n    fetchAddress();\r\n  },[])\r\n  const contentRef = useRef();\r\n\r\n  if (!order) return null;\r\n\r\n  const calculateBreakdown = () => {\r\n    let subtotal = 0;\r\n    let totalDiscount = 0;\r\n    let itemDetails = [];\r\n\r\n    order.items.forEach(item => {\r\n      const itemSubtotal = item.salesPrice * item.quantity;\r\n      const itemDiscount = item.discount || 0;\r\n      subtotal += itemSubtotal;\r\n      totalDiscount += itemDiscount;\r\n\r\n      const itemTax = ((itemSubtotal - itemDiscount) * ((order.tax || 0) / 100));\r\n      itemDetails.push({\r\n        ...item,\r\n        itemTotal: itemSubtotal,\r\n        itemTax,\r\n        finalPrice: itemSubtotal - itemDiscount + itemTax,\r\n      });\r\n    });\r\n\r\n    const totalTax = itemDetails.reduce((sum, item) => sum + item.itemTax, 0);\r\n    const grandTotal = subtotal - totalDiscount + totalTax + (order.shippingFee || 0);\r\n\r\n    return {\r\n      itemDetails,\r\n      subtotal,\r\n      totalTax,\r\n      totalDiscount,\r\n      grandTotal,\r\n    };\r\n  };\r\n\r\n  const breakdown = calculateBreakdown();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Item',\r\n      dataIndex: ['item', 'name'],\r\n      key: 'itemName',\r\n      render: (_, record) => (\r\n        <div>{record.item?.itemName || 'Unnamed Item'}</div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Unit Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      align: 'right',\r\n      render:  (_,record) => `${record.item.salesPrice?.toFixed(2)}`,\r\n    },\r\n    {\r\n      title: 'Qty',\r\n      dataIndex: 'quantity',\r\n      key: 'quantity',\r\n      align: 'center',\r\n    },\r\n    {\r\n      title: 'Discount',\r\n      dataIndex: 'discount',\r\n      key: 'discount',\r\n      align: 'right',\r\n      render: discount => discount > 0 ? (\r\n        <Tag color=\"orange\">-{discount.toFixed(2)}</Tag>\r\n      ) : '0',\r\n    },\r\n    {\r\n      title: 'Tax',\r\n      dataIndex: 'itemTax',\r\n      key: 'tax',\r\n      align: 'right',\r\n      render: tax => `${tax.toFixed(2)}`,\r\n    },\r\n    {\r\n      title: 'Total',\r\n      dataIndex: 'finalPrice',\r\n      key: 'total',\r\n      align: 'right',\r\n      render: total => <span className=\"font-medium\">{total.toFixed(2)}</span>,\r\n    },\r\n  ];\r\n\r\n  const handlePrint = () => {\r\n    const content = contentRef.current;\r\n    const printWindow = window.open('', '', 'width=900,height=650');\r\n    printWindow.document.write(`<html><head><title>Print Order</title></head><body>${content.innerHTML}</body></html>`);\r\n    printWindow.document.close();\r\n    printWindow.focus();\r\n    setTimeout(() => {\r\n      printWindow.print();\r\n      printWindow.close();\r\n    }, 500);\r\n  };\r\n\r\n  const handleExportPDF = async () => {\r\n    const canvas = await html2canvas(contentRef.current);\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const pdf = new jsPDF('p', 'mm', 'a4');\r\n    const width = pdf.internal.pageSize.getWidth();\r\n    const height = (canvas.height * width) / canvas.width;\r\n    pdf.addImage(imgData, 'PNG', 0, 0, width, height);\r\n    pdf.save(`order_${order.orderId}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={visible}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      width={900}\r\n      title={\r\n        <div className=\"flex items-center justify-between\">\r\n          <span><ShoppingCartOutlined className=\"mr-2\" />Order #{order.orderId}</span>\r\n          <Tag color=\"blue\">{order.status}</Tag>\r\n        </div>\r\n      }\r\n    >\r\n      <div ref={contentRef}>\r\n        <Card bordered={false}>\r\n          <Descriptions bordered size=\"small\" column={2}>\r\n            <Descriptions.Item label=\"Order Time\">\r\n              {new Date(order.orderTime).toLocaleString()}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Customer\">\r\n              {order.customer?.name || 'N/A'}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Payment Method\">\r\n              <Tag color=\"purple\">{order.paymentMethod}</Tag>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Payment Status\">\r\n              <Tag color={order.paymentStatus === \"Completed\" ? \"green\" : \"red\"}>\r\n                {order.paymentStatus}\r\n              </Tag>\r\n            </Descriptions.Item>\r\n            {order.couponCode && (\r\n              <Descriptions.Item label=\"Coupon Code\">\r\n                <Tag color=\"orange\">{order.couponCode}</Tag>\r\n              </Descriptions.Item>\r\n            )}\r\n          </Descriptions>\r\n\r\n          <Divider orientation=\"left\"><ShoppingCartOutlined className=\"mr-2\" />Items Breakdown</Divider>\r\n\r\n          <Table\r\n            columns={columns}\r\n            dataSource={breakdown.itemDetails}\r\n            rowKey={(_, idx) => idx}\r\n            pagination={false}\r\n            size=\"middle\"\r\n            className=\"mb-6\"\r\n          />\r\n\r\n          <Divider orientation=\"left\"><DollarOutlined className=\"mr-2\" />Price Summary</Divider>\r\n\r\n          <div className=\"price-summary-grid\">\r\n            <div className=\"price-summary-col\">\r\n              <div className=\"price-row\"><span>Subtotal:</span><span>{breakdown.subtotal.toFixed(2)}</span></div>\r\n              <div className=\"price-row\"><span>Item Discounts:</span><span>-{breakdown.totalDiscount.toFixed(2)}</span></div>\r\n              <div className=\"price-row\"><span>Tax:</span><span>{breakdown.totalTax.toFixed(2)}</span></div>\r\n            </div>\r\n            <div className=\"price-summary-col\">\r\n              <div className=\"price-row\"><span>Shipping Fee:</span><span>{(order.shippingFee || 0).toFixed(2)}</span></div>\r\n              <div className=\"mt-2 text-lg font-semibold price-row\"><span>Total:</span><span>{breakdown.grandTotal.toFixed(2)}</span></div>\r\n            </div>\r\n          </div>\r\n\r\n          <Divider orientation=\"left\"><PercentageOutlined className=\"mr-2\" />Shipping Address</Divider>\r\n          <div className=\"text-sm\">\r\n            {address && (\r\n              <div>\r\n                {address.houseNo}, {address.area},<br />\r\n                {address.city}, {address.state}, {address.country} - {address.postalCode}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <div className=\"flex justify-end gap-2 mt-4\">\r\n        <Button icon={<FilePdfOutlined />} onClick={handleExportPDF}>Export PDF</Button>\r\n        <Button icon={<PrinterOutlined />} onClick={handlePrint}>Print</Button>\r\n        <Button type=\"primary\" onClick={onClose}>Close</Button>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .price-summary-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n          gap: 1rem;\r\n          margin-bottom: 1.5rem;\r\n        }\r\n        .price-row {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          padding: 8px 0;\r\n          border-bottom: 1px solid #f0f0f0;\r\n        }\r\n      `}</style>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PriceBreakdownModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AssignRider = ({ orderId, onClose, setSidebarOpen,fetchusers }) => {\r\n  const [riders, setRiders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [assigned, setAssigned] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n   \r\n  const headers = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  useEffect(() => {\r\n    if (setSidebarOpen) setSidebarOpen(false);\r\n    const fetchRiders = async () => {\r\n      try {\r\n\r\n        const res = await axios.get('api/rider/all',\r\n          {headers}\r\n        );\r\n        const activeRiders = res.data.data.filter(rider => rider.status.toLowerCase() === \"active\");\r\n        console.log(\"active\")\r\n        console.log(activeRiders)\r\n        setRiders(activeRiders || []);\r\n      } catch (err) {\r\n        console.error('Error fetching riders:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchRiders();\r\n  }, []);\r\n\r\n  const handleAssign = async (riderId) => {\r\n    try {\r\n      const res = await axios.put(`api/order/assign-order/${orderId}`,{\r\n        deliveryAgent:riderId,\r\n        deliveryAgentModel:\"Rider\"\r\n      },{headers});\r\n      console.log(res)\r\n      setAssigned(riderId);\r\n      setSuccess(true);\r\n      fetchusers();\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Assign error:', err);\r\n      alert('Failed to assign rider.');\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const filteredRiders = riders.filter(rider => \r\n    `${rider.firstname} ${rider.lastname}`.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    rider.mobile.includes(searchTerm)\r\n  );\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/30 backdrop-blur-sm\">\r\n      <div className=\"relative flex flex-col w-full max-w-md h-[80vh] bg-white rounded-xl shadow-2xl overflow-hidden border border-gray-100\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 z-10 p-5 bg-white border-b border-gray-100\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-900\">Assign Delivery Partner</h2>\r\n              <p className=\"mt-1 text-sm text-gray-500\">Order #{orderId}</p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-1 text-gray-400 transition-colors rounded-full hover:bg-gray-100 hover:text-gray-600\"\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Search Bar */}\r\n          <div className=\"relative mt-4\">\r\n            <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n              <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n              </svg>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full py-2.5 pl-10 pr-4 text-sm border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Search by name or phone...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content Area - Scrollable */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          {loading ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full space-y-3\">\r\n              <div className=\"w-10 h-10 border-4 border-blue-500 rounded-full border-t-transparent animate-spin\"></div>\r\n              <p className=\"text-gray-500\">Loading available riders...</p>\r\n            </div>\r\n          ) : filteredRiders.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full p-6 text-center\">\r\n              <svg className=\"w-16 h-16 mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n              <h3 className=\"text-lg font-medium text-gray-700\">No riders found</h3>\r\n              <p className=\"mt-1 text-gray-500\">\r\n                {searchTerm ? \"Try a different search term\" : \"No active riders available\"}\r\n              </p>\r\n              {searchTerm && (\r\n                <button \r\n                  onClick={() => setSearchTerm('')} \r\n                  className=\"px-4 py-2 mt-3 text-sm text-blue-600 hover:underline\"\r\n                >\r\n                  Clear search\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <ul className=\"divide-y divide-gray-100\">\r\n              {filteredRiders.map((rider) => (\r\n                <li key={rider._id} className=\"px-5 py-4 transition-colors hover:bg-gray-50\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"relative flex-shrink-0 mr-4\">\r\n                      <div className=\"flex items-center justify-center w-12 h-12 text-lg font-medium text-white rounded-full bg-gradient-to-br from-blue-500 to-blue-600\">\r\n                        {rider.firstname.charAt(0)}{rider.lastname.charAt(0)}\r\n                      </div>\r\n                      {assigned === rider._id && (\r\n                        <div className=\"absolute flex items-center justify-center w-6 h-6 bg-green-500 border-2 border-white rounded-full -bottom-1 -right-1\">\r\n                          <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\r\n                          </svg>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h3 className=\"text-sm font-semibold text-gray-900 truncate\">\r\n                        {rider.firstname} {rider.lastname}\r\n                      </h3>\r\n                      <div className=\"flex items-center mt-1 text-sm text-gray-500\">\r\n                        <svg className=\"flex-shrink-0 mr-1.5 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\r\n                        </svg>\r\n                        <span>{rider.mobile}</span>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => !assigned && handleAssign(rider._id)}\r\n                      disabled={assigned}\r\n                      className={`px-4 py-2 text-sm font-medium rounded-lg transition-all ${\r\n                        assigned === rider._id\r\n                          ? 'bg-green-100 text-green-800'\r\n                          : assigned\r\n                            ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                            : 'bg-blue-600 text-white hover:bg-blue-700 shadow-sm'\r\n                      }`}\r\n                    >\r\n                      {assigned === rider._id ? 'Assigned' : 'Assign'}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Success Notification */}\r\n        {success && (\r\n          <div className=\"sticky bottom-0 left-0 right-0 p-4 border-t border-green-100 bg-green-50 animate-slide-up\">\r\n            <div className=\"flex items-center justify-center space-x-2 text-green-800\">\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n              <span>Rider assigned successfully!</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignRider;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AssignVan = ({ orderId, onClose, setSidebarOpen,fetchusers }) => {\r\n  const [riders, setRiders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [assigned, setAssigned] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n   \r\n  const headers = { Authorization: `Bearer ${localStorage.getItem(\"token\")}` };\r\n  useEffect(() => {\r\n    const role=localStorage.getItem(\"role\")\r\n    if (setSidebarOpen) setSidebarOpen(false);\r\nconst AllowedWarehouse=async () => {\r\n      try {\r\n        const res = await axios.get('admiaddinguser/profile',\r\n          {headers}\r\n        );\r\n        console.log(res)\r\n    } catch (err) {\r\n        console.error('Error fetching riders:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    \r\n    const fetchWarehouse = async () => {\r\n      try {\r\n        const res = await axios.get('api/warehouses',\r\n          {headers}\r\n        );\r\n        if(role===\"admin\"){\r\n            setRiders(res.data.data)\r\n        }\r\n        console.log(\"asdf\")\r\n        console.log(res)\r\n    } catch (err) {\r\n        console.error('Error fetching riders:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchWarehouse();\r\n    if(role!==\"admin\")\r\n    AllowedWarehouse();\r\n  }, []);\r\n\r\n  const handleAssign = async (riderId) => {\r\n    try {\r\n      const res = await axios.put(`api/order/assign-order/${orderId}`,{\r\n        deliveryAgent:riderId,\r\n        deliveryAgentModel:\"Warehouse\"\r\n      },{headers});\r\n      console.log(res)\r\n      setAssigned(riderId);\r\n      setSuccess(true);\r\n      fetchusers();\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Assign error:', err);\r\n      alert('Failed to assign rider.');\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const filteredRiders = riders.filter(rider => \r\n    ` ${rider.WarehouseName}`.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    rider.mobile.includes(searchTerm)\r\n  );\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/30 backdrop-blur-sm\">\r\n      <div className=\"relative flex flex-col w-full max-w-md h-[80vh] bg-white rounded-xl shadow-2xl overflow-hidden border border-gray-100\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 z-10 p-5 bg-white border-b border-gray-100\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-900\">Assign Delivery Partner</h2>\r\n              <p className=\"mt-1 text-sm text-gray-500\">Order #{orderId}</p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-1 text-gray-400 transition-colors rounded-full hover:bg-gray-100 hover:text-gray-600\"\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Search Bar */}\r\n          <div className=\"relative mt-4\">\r\n            <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n              <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n              </svg>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full py-2.5 pl-10 pr-4 text-sm border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Search by name or phone...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content Area - Scrollable */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          {loading ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full space-y-3\">\r\n              <div className=\"w-10 h-10 border-4 border-blue-500 rounded-full border-t-transparent animate-spin\"></div>\r\n              <p className=\"text-gray-500\">Loading available van...</p>\r\n            </div>\r\n          ) : filteredRiders.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full p-6 text-center\">\r\n              <svg className=\"w-16 h-16 mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n              <h3 className=\"text-lg font-medium text-gray-700\">No Van found</h3>\r\n              <p className=\"mt-1 text-gray-500\">\r\n                {searchTerm ? \"Try a different search term\" : \"No active riders available\"}\r\n              </p>\r\n              {searchTerm && (\r\n                <button \r\n                  onClick={() => setSearchTerm('')} \r\n                  className=\"px-4 py-2 mt-3 text-sm text-blue-600 hover:underline\"\r\n                >\r\n                  Clear search\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <ul className=\"divide-y divide-gray-100\">\r\n              {filteredRiders.map((rider) => (\r\n                <li key={rider._id} className=\"px-5 py-4 transition-colors hover:bg-gray-50\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"relative flex-shrink-0 mr-4\">\r\n                      <div className=\"flex items-center justify-center w-12 h-12 text-lg font-medium text-white rounded-full bg-gradient-to-br from-blue-500 to-blue-600\">\r\n                        {rider.firstname?.charAt(0) || \"\"}{rider.lastname?.charAt(0) ||\"\"}{rider.warehouseName?.charAt(0)}\r\n                      </div>\r\n                      {assigned === rider._id && (\r\n                        <div className=\"absolute flex items-center justify-center w-6 h-6 bg-green-500 border-2 border-white rounded-full -bottom-1 -right-1\">\r\n                          <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\r\n                          </svg>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h3 className=\"text-sm font-semibold text-gray-900 truncate\">\r\n                        {rider.warehouseName}\r\n                      </h3>\r\n                      <div className=\"flex items-center mt-1 text-sm text-gray-500\">\r\n                        <svg className=\"flex-shrink-0 mr-1.5 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\r\n                        </svg>\r\n                        <span>{rider.mobile}</span>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => !assigned && handleAssign(rider._id)}\r\n                      disabled={assigned}\r\n                      className={`px-4 py-2 text-sm font-medium rounded-lg transition-all ${\r\n                        assigned === rider._id\r\n                          ? 'bg-green-100 text-green-800'\r\n                          : assigned\r\n                            ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                            : 'bg-blue-600 text-white hover:bg-blue-700 shadow-sm'\r\n                      }`}\r\n                    >\r\n                      {assigned === rider._id ? 'Assigned' : 'Assign'}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Success Notification */}\r\n        {success && (\r\n          <div className=\"sticky bottom-0 left-0 right-0 p-4 border-t border-green-100 bg-green-50 animate-slide-up\">\r\n            <div className=\"flex items-center justify-center space-x-2 text-green-800\">\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n              <span>Van assigned successfully!</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignVan;","\r\nimport React, { useState } from 'react';\r\nimport { FiEdit, FiTrash2, FiInfo, FiImage, FiX } from 'react-icons/fi';\r\n\r\nconst ItemListPage = ({ items, heading, onClose }) => {\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div className=\"relative w-full max-w-6xl mx-4 bg-transparent rounded-lg shadow-2xl\">\r\n        <div className=\"overflow-hidden bg-white rounded-lg bg-opacity-90 backdrop-blur-sm\">\r\n          <div className=\"flex items-center justify-between p-6 bg-white bg-opacity-80\">\r\n<div className=\"flex items-center justify-between\">\r\n  <h1 className=\"text-2xl font-bold text-gray-800\">{heading}</h1>\r\n  {onClose && (\r\n    <button \r\n      onClick={onClose}\r\n      className=\"p-2 text-gray-500 transition rounded-full hover:bg-gray-200 hover:text-gray-700\"\r\n      title=\"Close\"\r\n    >\r\n      <FiX size={20} />\r\n    </button>\r\n  )}\r\n</div>\r\n\r\n            \r\n           \r\n          </div>\r\n\r\n          {items.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center py-12 bg-white bg-opacity-70\">\r\n              <FiInfo className=\"mb-4 text-5xl text-gray-400\" />\r\n              <p className=\"text-lg text-gray-600\">No items found</p>\r\n              {searchTerm && (\r\n                <button \r\n                  onClick={() => setSearchTerm('')}\r\n                  className=\"mt-4 text-blue-600 hover:text-blue-800\"\r\n                >\r\n                  Clear search\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-hidden bg-transparent\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-white bg-opacity-70\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Item</th>\r\n                    <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Code</th>\r\n                    <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Price</th>\r\n                    <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Quantity</th>\r\n                    <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Category</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white bg-opacity-50 divide-y divide-gray-200\">\r\n                  {items.map((item) => (\r\n                    <tr key={item._id} className=\"transition-colors hover:bg-white hover:bg-opacity-70\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          {item.item.itemImages ? (\r\n                            <img className=\"object-cover w-10 h-10 mr-3 rounded-full\" src={`/vps/uploads/qr/items/${item.item.itemImages[0]}`} alt={item.item.itemName} />\r\n                          ) : (\r\n                            <div className=\"flex items-center justify-center w-10 h-10 mr-3 bg-gray-200 rounded-full\">\r\n                              <FiImage className=\"text-gray-400\" />\r\n                            </div>\r\n                          )}\r\n                          <div>\r\n                            <div className=\"font-medium text-gray-900\">{item.item.itemName}</div>\r\n                            <div className=\"text-sm text-gray-500\">{item.item.brand?.brandName || 'N/A'}</div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n                        {item.item.itemCode}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">Rs.{item.salesPrice}</div>\r\n                        {item.discount > 0 && (\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            {item.discountType === 'Percentage' ? `${item.discount}% off` : `$${item.discount} off`}\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className={`text-sm font-medium ${item.openingStock <= item.alertQuantity ? 'text-red-600' : 'text-green-600'}`}>\r\n                          {item.quantity}\r\n                        </div>\r\n                        \r\n                      </td>\r\n                      <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n                        {item.item.category?.name || 'N/A'}\r\n                      </td>\r\n                     \r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemListPage;","import React, { useEffect, useState,useRef } from 'react';\r\nimport {  useNavigate, NavLink } from 'react-router-dom';\r\nimport Navbar from '../../Navbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { FaTachometerAlt} from 'react-icons/fa';\r\n\r\n\r\nimport axios from \"axios\";\r\nimport CustomerProfile from './CustomerView';\r\nimport PriceBreakdownPage from './PriceView';\r\nimport AssignRider from './AssignRider';\r\nimport AssignVan from './AssignVan';\r\nimport ItemListPage from './ItemListPage';\r\n import { utils as XLSXUtils, writeFile as writeXLSXFile } from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport  {autoTable} from 'jspdf-autotable';\r\nimport Select from \"react-select\"\r\nconst OrderList = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionMenu, setActionMenu] = useState(null);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [status, setStatus] = useState([]);\r\n  const [users, setUsers] = useState([]); // User state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [permissions, setPermissions] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const[data,setData]=useState([])\r\n  const[pricedata,setPriceData]=useState([])\r\n  const[view,setView]=useState(false)\r\n  const[warehouses,setWarehouses]=useState([])\r\n  const[stores,setStores]=useState([])\r\n  const[viewPrice,setViewPrice]=useState(false)\r\n  const[assignRiderView,setAssignRiderView]=useState(false)\r\n  const[assignVanView,setAssignVanView]=useState(false)\r\n  const[ItemListView,setItemListView]=useState(false)\r\n  const[items,setItems]=useState([])\r\n  const[heading,setHeading]=useState(\"\")\r\n  const[orderId,setOrderId]=useState(null)\r\n  const[orderStatus,setOrderStatus]=useState(\"Pending\")\r\n  const statusOptions = [\r\n  { value: \"Pending\", label: \"Pending\", icon: \"⏳\", color: \"orange\" },\r\n  { value: \"Confirmed\", label: \"Confirmed\", icon: \"✓\", color: \"blue\" },\r\n  { value: \"Processing\", label: \"Processing\", icon: \"⚙️\", color: \"purple\" },\r\n  { value: \"Shipped\", label: \"Shipped\", icon: \"🚚\", color: \"indigo\" },\r\n  { value: \"Out for Delivery\", label: \"Out for Delivery\", icon: \"🛵\", color: \"teal\" },\r\n  { value: \"Delivered\", label: \"Delivered\", icon: \"✅\", color: \"green\" },\r\n  { value: \"Cancelled\", label: \"Cancelled\", icon: \"❌\", color: \"red\" },\r\n  { value: \"Returned\", label: \"Returned\", icon: \"🔄\", color: \"gray\" }\r\n];\r\n\r\n  // load sidebar open/closed\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // load permissions\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"permissions\");\r\n    setPermissions(stored ? JSON.parse(stored) : []);\r\n  }, []);\r\n\r\n  const fetchWarehouse=async ()=>{\r\n     setLoading(true)\r\n  const token=localStorage.getItem(\"token\")\r\n  if(!token){\r\n    console.log (\"No token found redirecting...\")\r\n    navigate(\"/\")\r\n    return ;\r\n  }\r\n  try {\r\n    const response = await axios.get(\"api/warehouses\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n setWarehouses(response.data.data)\r\n  } catch (error) {\r\n    alert(error.message)\r\n  }\r\nfinally{\r\n  setLoading(false)\r\n}\r\n  }\r\n\r\n   useEffect(() => {\r\n      const fetchStores = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        try {\r\n          // Adjust this endpoint if needed – using your provided URL.\r\n          const response = await fetch(\"admin/store/add/store\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to fetch stores\");\r\n          }\r\n          const data = await response.json();\r\n          // Assuming API returns an object with property \"result\" that is an array of store objects.\r\n          setStores(data.result || []);\r\n          console.log(data.result)\r\n        } catch (error) {\r\n          console.error(\"Error fetching stores:\", error);\r\n        }\r\n      };\r\n      fetchStores();\r\n      fetchWarehouse();\r\n    }, []);\r\n\r\n  const fetchusers = async () => {\r\n    setLoading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/vps/api/orders/admin\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const payload = await response.json();\r\n         console.log(\"payload\")\r\n         console.log(payload)\r\n      // unwrap into a flat array\r\n      const all = Array.isArray(payload)\r\n        ? payload\r\n        : Array.isArray(payload.data)\r\n          ? payload.data\r\n          : [];\r\n         console.log(all)\r\n      // **now just use what the backend sent you**\r\n      setUsers(all);\r\n    } catch (err) {\r\n      console.error(\"Error fetching users:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // delete\r\n  const deleteUser = async (id) => {\r\n    if (!window.confirm(\"Delete this order?\")) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`api/order/${id}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      fetchusers();\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchusers();\r\n  }, []);\r\n\r\n\r\n\r\n  \r\n  // filtering & paging\r\n  const filtered = users.filter(u => {\r\n    const t = searchTerm.toLowerCase().trim();\r\n    return !t\r\n      || u.userName?.toLowerCase().includes(t)\r\n      || u.Email?.toLowerCase().includes(t) ||\r\n      u.status===orderStatus\r\n  });\r\n  useEffect(()=>{\r\n     const filtered = users.filter(u => \r\n      u.status===orderStatus\r\n  );\r\n  },[orderStatus])\r\n  const totalPages = Math.ceil(filtered.length / itemsPerPage);\r\n  const start = (currentPage - 1) * itemsPerPage;\r\n  const current = filtered.slice(start, start + itemsPerPage);\r\n\r\n \r\n\r\n\r\n  const exportToExcel = () => {\r\n    // Prepare data for Excel\r\n    const excelData = current.map((u, i) => ({\r\n      '#': start + i + 1,\r\n      'Order ID': u.orderId,\r\n      'Customer Name': u.customer?.customerName || 'N/A',\r\n      'Items Count': u.items.length,\r\n      'Unavailable Items Count': u.unAvailableItems.length,\r\n      'Total Amount': u.items.length === 0 ? 0 : u.finalAmount,\r\n      'Status': u.status,\r\n      'Delivery Agent': u.deliveryAgent?.username || u.deliveryAgent?.warehouseName || 'Not Assigned',\r\n      'Delivery Time':u.deliveryTime,\r\n      'Agent Type': u.deliveryAgentModel || 'N/A'\r\n    }));\r\n\r\n    const worksheet = XLSXUtils.json_to_sheet(excelData);\r\n    const workbook = XLSXUtils.book_new();\r\n    XLSXUtils.book_append_sheet(workbook, worksheet, \"Orders\");\r\n    writeXLSXFile(workbook, \"orders.xlsx\");\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    \r\n    // Add title\r\n    doc.text(\"Orders Report\", 14, 15);\r\n    \r\n    // Prepare data for PDF\r\n    const pdfData = current.map((u, i) => [\r\n      start + i + 1,\r\n      u.orderId,\r\n      u.customer?.customerName || 'N/A',\r\n      u.items.length,\r\n      u.unAvailableItems.length,\r\n      u.items.length === 0 ? 0 : u.finalAmount,\r\n      u.status,\r\n      u.deliveryAgent?.username || u.deliveryAgent?.warehouseName || 'Not Assigned',\r\n      u.deliveryTime,\r\n      u.deliveryAgentModel || 'N/A'\r\n    ]);\r\n\r\n    autoTable(doc,{\r\n      head: [\r\n        ['#', 'Order ID', 'Customer Name', 'Items', 'Unavailable Items', 'Total', 'Status', 'Delivery Agent','Delivery Time', 'Agent Type']\r\n      ],\r\n      body: pdfData,\r\n      startY: 20,\r\n      styles: {\r\n        fontSize: 8,\r\n        cellPadding: 2,\r\n        overflow: 'linebreak'\r\n      },\r\n      headStyles: {\r\n        fillColor: [229, 231, 235],\r\n        textColor: [0, 0, 0],\r\n        fontStyle: 'bold'\r\n      }\r\n    });\r\n\r\n    doc.save(\"orders.pdf\");\r\n  };\r\n\r\n    \r\nconst handlePrint = () => {\r\n        window.print();\r\n    };\r\n\r\n\r\n    const exportToCSV = () => {\r\n  // Prepare headers\r\n  const headers = [\"#\", \"Order ID\", \"Customer Name\", \"Items\", \"UnAvailable Items\", \"Total\", \"Status\", \"Delivery Agent\",\"Delivery Time\"];\r\n  \r\n  // Prepare data rows\r\n  const rows = current.map((u, i) => [\r\n    start + i + 1,\r\n    u.orderId,\r\n    u.customer?.customerName || '',\r\n    u.items.length,\r\n    u.unAvailableItems.length,\r\n    u.items.length === 0 ? 0 : u.finalAmount,\r\n    u.status,\r\n    u.deliveryAgent?.username || u.deliveryAgent?.warehouseName || 'Not Assigned',\r\n    u.deliveryTime\r\n  ]);\r\n\r\n  // Convert to CSV format\r\n  let csvContent = headers.join(',') + '\\n';\r\n  rows.forEach(row => {\r\n    csvContent += row.map(field => `\"${field}\"`).join(',') + '\\n';\r\n  });\r\n\r\n  // Create blob and download\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const url = URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.setAttribute('href', url);\r\n  link.setAttribute('download', 'orders_data.csv');\r\n  link.style.visibility = 'hidden';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\n\r\n\r\n\r\nconst copyToClipboard = () => {\r\n  \r\n  // Prepare headers\r\n  const headers = [\"#\", \"Order ID\", \"Customer Name\", \"Items\", \"UnAvailable Items\", \"Total\", \"Status\", \"Delivery Agent\",\"Delivery Time\"];\r\n  \r\n  // Prepare data rows\r\n  const rows = current.map((u, i) => [\r\n    start + i + 1,\r\n    u.orderId,\r\n    u.customer?.customerName || '',\r\n    u.items.length,\r\n    u.unAvailableItems.length,\r\n    u.items.length === 0 ? 0 : u.finalAmount,\r\n    u.status,\r\n    u.deliveryAgent?.username || u.deliveryAgent?.warehouseName || 'Not Assigned',\r\n    u.deliveryTime\r\n  ]);\r\n\r\n  // Convert to text format (tab-separated for better clipboard display)\r\n  let textContent = headers.join('\\t') + '\\n';\r\n  rows.forEach(row => {\r\n    textContent += row.join('\\t') + '\\n';\r\n  });\r\n\r\n  // Copy to clipboard\r\n  navigator.clipboard.writeText(textContent)\r\n    .then(() => {\r\n      alert('Table data copied to clipboard!');\r\n    })\r\n    .catch(err => {\r\n      console.error('Failed to copy: ', err);\r\n      alert('Failed to copy data to clipboard');\r\n    });\r\n};\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"flex flex-col \">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n     \r\n      <div className=\"box-border flex min-h-screen\">\r\n        <div className='w-auto'>\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        \r\n        <div className=\"flex flex-col w-full p-2 mx-auto overflow-x-auto transition-all duration-300\">\r\n          <header className=\"flex flex-col items-center justify-start px-2 py-2 mb-2 bg-gray-100 rounded-md shadow md:justify-between md:flex-row\">\r\n            <div className=\"flex items-baseline gap-2 sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold\">Orders List</h1>\r\n              <span className=\"text-xs text-gray-600\">View/Search Orders</span>\r\n            </div>\r\n            <nav className=\"flex gap-2 text-xs text-gray-500\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-500 no-underline hover:text-gray-800\">\r\n                <FaTachometerAlt /> Home\r\n              </NavLink>\r\n              <NavLink to=\"/order.view\" className=\"text-gray-500 no-underline hover:text-gray-800\">\r\n                &gt; Orders List\r\n              </NavLink>\r\n            </nav>\r\n          </header>\r\n         { view &&\r\n                <CustomerProfile customerData={data} visible={view} onClose={()=>setView(false)}/>\r\n          }\r\n          {\r\n            viewPrice &&\r\n            <PriceBreakdownPage visible={viewPrice} onClose={()=>setViewPrice(false)} order={pricedata}/>\r\n          }\r\n          {\r\n            assignRiderView && \r\n            <AssignRider orderId={orderId} onClose={()=>{setAssignRiderView(false);setOrderId(\"\");if(window.innerWidth>768)setSidebarOpen(true)}}  setSidebarOpen={setSidebarOpen} fetchusers={fetchusers}/>\r\n          }\r\n          {\r\n            assignVanView &&\r\n            <AssignVan orderId={orderId}  onClose={()=>{setAssignVanView(false);setOrderId(\"\");if(window.innerWidth>768)setSidebarOpen(true)}}  setSidebarOpen={setSidebarOpen} fetchusers={fetchusers}/>\r\n          }\r\n          {\r\n            ItemListView &&\r\n            <ItemListPage items={items} heading={heading} onClose={()=>setItemListView(false)}/>\r\n          }\r\n          <div className=\"p-4 bg-white border rounded-lg shadow-md\">\r\n            \r\n     \r\n     <div className='w-1/2 mb-4'>\r\n                  <div className='flex flex-col '>\r\n                    <label htmlFor=\"\">Order Status</label>\r\n                    {/* <Select options={statusOptions} onChange={(option)=>setOrderStatus(option.value)}  value={statusOptions.find(status => status.value===orderStatus)}/> */}\r\n                    <Select options={statusOptions} onChange={(option)=>setOrderStatus(option.value)}  value={statusOptions.find(option => option.value === (orderStatus)) || null}/>\r\n                  </div>\r\n     </div>\r\n            {/* controls */}\r\n            <div className=\"flex flex-col mb-4 md:flex-row md:items-center md:justify-between\">\r\n              <div className=\"flex items-center gap-2 mb-2 md:mb-0\">\r\n                <span>Show</span>\r\n                <select\r\n                  className=\"p-1 border rounded\"\r\n                  value={itemsPerPage}\r\n                  onChange={e => { setItemsPerPage(+e.target.value); setCurrentPage(1); }}\r\n                >\r\n                  {[10,20,50].map(n => <option key={n}>{n}</option>)}\r\n                </select>\r\n                <span>Entries</span>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n               <button onClick={copyToClipboard}  className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500 lg:w-auto\">Copy</button>\r\n                <button onClick={exportToExcel} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500 lg:w-auto\">Excel</button>\r\n                <button onClick={exportToPDF} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500 lg:w-auto\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500 lg:w-auto\">Print</button>\r\n                <button onClick={exportToCSV} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500 lg:w-auto\">CSV</button>\r\n                {/* Copy / Excel / PDF / Print / CSV buttons */}\r\n                <input\r\n                  className=\"p-1 border rounded\"\r\n                  placeholder=\"Search\"\r\n                  onChange={e => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"overflow-y-visible \">\r\n              <table className=\"w-full border border-collapse\">\r\n                <thead className=\"bg-gray-200\">\r\n                  <tr>\r\n                    {[\"#\",\"Order ID\",\" Customer Name\",\"Items\",\"UnAvailable Items\",\"Total\",\"Status\",\"DeliveryAgent\",\"Action\"]\r\n                      .map(h => <th key={h} className=\"p-1 border\">{h}</th>)}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {current.length === 0\r\n                    ? <tr><td colSpan=\"10\" className=\"p-2 text-center\">No data Available</td></tr>\r\n                    : current.map((u,i) => (\r\n                      <tr key={u._id} className=\"text-sm\">\r\n                        <td className=\"p-1 border\">{start + i + 1}</td>\r\n                        <td className=\"p-1 border\">\r\n                          {u.orderNumber}\r\n                        </td>\r\n                       <td className=\"p-1 border \">\r\n  <span\r\n    className=\"cursor-pointer hover:text-cyan-400\"\r\n    onClick={() => {\r\n      if (u.customer) {\r\n        setView(true);\r\n        setData(u.customer);\r\n      }\r\n    }}\r\n  >\r\n    {u.customer?.name}\r\n  </span>\r\n</td>\r\n\r\n\r\n                      <td \r\n  className={`\r\n    p-3 border \r\n    ${u.items.length > 0 \r\n      ? \"text-blue-500 hover:text-blue-700 hover:bg-blue-50 cursor-pointer transition-colors duration-200\" \r\n      : \"text-gray-400\"}\r\n    ${u.items.length > 0 && \"font-medium\"}\r\n  `}\r\n  onClick={() => {\r\n    if (u.items.length > 0) {\r\n      setItemListView(true);\r\n      setItems(u.items);\r\n      setHeading(\"Available Items\")\r\n    }\r\n  }}\r\n>\r\n  <div className=\"flex items-center justify-between\">\r\n    <span>\r\n      {u.items.length > 0 ? \"View items\" : \"No items available\"}\r\n    </span>\r\n    {u.items.length > 0 && (\r\n      <svg \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        className=\"w-4 h-4 ml-1\" \r\n        fill=\"none\" \r\n        viewBox=\"0 0 24 24\" \r\n        stroke=\"currentColor\"\r\n      >\r\n        <path \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\" \r\n          strokeWidth={2} \r\n          d=\"M9 5l7 7-7 7\" \r\n        />\r\n      </svg>\r\n    )}\r\n  </div>\r\n</td>\r\n                            \r\n                                \r\n                        \r\n\r\n               <td \r\n  className={`\r\n    p-3 border \r\n    ${u.unAvailableItems.length > 0 \r\n      ? \"text-blue-500 hover:text-blue-700 hover:bg-blue-50 cursor-pointer transition-colors duration-200\" \r\n      : \"text-gray-400\"}\r\n    ${u.unAvailableItems.length > 0 && \"font-medium\"}\r\n  `}\r\n  onClick={() => {\r\n    if (u.unAvailableItems.length > 0) {\r\n      setItemListView(true);\r\n      setItems(u.unAvailableItems);\r\n      setHeading(\"UnAvailable Items\")\r\n    }\r\n  }}\r\n>\r\n  <div className=\"flex items-center justify-between\">\r\n    <span>\r\n      {u.unAvailableItems.length > 0 ? \"View items\" : \"All items available\"}\r\n    </span>\r\n    {u.unAvailableItems.length > 0 && (\r\n      <svg \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        className=\"w-4 h-4 ml-1\" \r\n        fill=\"none\" \r\n        viewBox=\"0 0 24 24\" \r\n        stroke=\"currentColor\"\r\n      >\r\n        <path \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\" \r\n          strokeWidth={2} \r\n          d=\"M9 5l7 7-7 7\" \r\n        />\r\n      </svg>\r\n    )}\r\n  </div>\r\n</td>\r\n\r\n                            \r\n                        <td className=\"p-1 border hover:text-blue-400 hover:cursor-pointer\" onClick={()=>{\r\n                            setViewPrice(true);\r\n                            setPriceData(u)\r\n                        }}>{u.items.length===0?0:u.finalAmount}</td>\r\n                        {/* <td className=\"p-1 border\">{u.status}</td> */}\r\n                          <td className=\"p-2 border border-gray-200\">\r\n  {(() => {\r\n    const statusConfig = {\r\n      Pending: {\r\n        color: 'bg-orange-100 text-orange-800',\r\n        icon: '⏳',\r\n        label: 'Pending'\r\n      },\r\n      Confirmed: {\r\n        color: 'bg-blue-100 text-blue-800',\r\n        icon: '✓',\r\n        label: 'Confirmed'\r\n      },\r\n      Processing: {\r\n        color: 'bg-purple-100 text-purple-800',\r\n        icon: '⚙️',\r\n        label: 'Processing'\r\n      },\r\n      Shipped: {\r\n        color: 'bg-indigo-100 text-indigo-800',\r\n        icon: '🚚',\r\n        label: 'Shipped'\r\n      },\r\n      'Out for Delivery': {\r\n        color: 'bg-teal-100 text-teal-800',\r\n        icon: '🛵',\r\n        label: 'Out for Delivery'\r\n      },\r\n      Delivered: {\r\n        color: 'bg-green-100 text-green-800',\r\n        icon: '✅',\r\n        label: 'Delivered'\r\n      },\r\n      Cancelled: {\r\n        color: 'bg-red-100 text-red-800',\r\n        icon: '❌',\r\n        label: 'Cancelled'\r\n      },\r\n      Returned: {\r\n        color: 'bg-gray-100 text-gray-800',\r\n        icon: '🔄',\r\n        label: 'Returned'\r\n      }\r\n    };\r\n\r\n    const config = statusConfig[u.status] || {\r\n      color: 'bg-gray-100 text-gray-800',\r\n      icon: '❓',\r\n      label: u.status\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex items-center\">\r\n        <span\r\n          className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${config.color} transition-all duration-200 hover:shadow-sm`}\r\n        >\r\n          <span className=\"mr-2\" aria-hidden=\"true\">{config.icon}</span>\r\n          {config.label}\r\n        </span>\r\n      </div>\r\n    );\r\n  })()}\r\n</td> \r\n\r\n<td className=\"p-1 text-gray-800 border\">\r\n  <div className=\"flex items-center gap-1\">\r\n    {u.deliveryAgent?.username || u.deliveryAgent?.warehouseName || (\r\n      <span className=\"text-gray-400\">Not Assigned</span>\r\n    )}\r\n    {u.deliveryAgentModel && (\r\n      <span className=\"ml-1 text-xs text-gray-500\">\r\n        ({u.deliveryAgentModel})\r\n      </span>\r\n    )}\r\n  </div>\r\n</td>\r\n\r\n\r\n\r\n\r\n<td className=\"relative p-2 overflow-visible border border-gray-200\">\r\n  <div className=\"flex justify-center\">\r\n    <div className=\"relative inline-block text-left\">\r\n      {/* Action Button */}\r\n      <button\r\n        className=\"inline-flex items-center justify-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500 transition-all duration-150\"\r\n        onClick={() => setActionMenu(am => am === u._id ? null : u._id)}\r\n        aria-expanded={actionMenu === u._id}\r\n        aria-haspopup=\"true\"\r\n      >\r\n        Actions\r\n        <svg \r\n          className={`w-4 h-4 ml-2 transition-transform duration-200 ${actionMenu === u._id ? 'transform rotate-180' : ''}`}\r\n          xmlns=\"http://www.w3.org/2000/svg\" \r\n          viewBox=\"0 0 20 20\" \r\n          fill=\"currentColor\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {/* Dropdown Menu */}\r\n      {actionMenu === u._id && (\r\n        <div \r\n          className=\"absolute right-0 z-50 w-48 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none animate-fade-in\"\r\n          role=\"menu\"\r\n          aria-orientation=\"vertical\"\r\n          aria-labelledby=\"menu-button\"\r\n        >\r\n          <div className=\"py-1\" role=\"none\">\r\n            {/* Edit Action */}\r\n\r\n\r\n\r\n            {/* //assign van */}\r\n            <button\r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-gray-700 transition-colors duration-150 hover:bg-blue-50 hover:text-blue-600 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                setOrderId(u._id);\r\n                setAssignVanView(true);\r\n                setActionMenu(null);\r\n              }}\r\n            >\r\n              <div className=\"p-1 mr-2 transition-colors rounded-md bg-blue-50 group-hover:bg-blue-100\">\r\n                <svg className=\"w-4 h-4 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"1.75\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                </svg>\r\n              </div>\r\n              <span>Assign Van</span>\r\n            </button>\r\n\r\n            {/* //Assign rider */}\r\n            <button\r\n              className=\"flex items-center w-full px-4 py-2.5 text-sm text-gray-700 transition-colors duration-150 hover:bg-blue-50 hover:text-blue-600 group\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                setOrderId(u._id);\r\n                setAssignRiderView(true);\r\n                setActionMenu(null);\r\n              }}\r\n            >\r\n              <div className=\"p-1 mr-2 transition-colors rounded-md bg-blue-50 group-hover:bg-blue-100\">\r\n                <svg className=\"w-4 h-4 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"1.75\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                </svg>\r\n              </div>\r\n              <span>Assign Rider</span>\r\n            </button>\r\n\r\n            {/* View Details Action */}\r\n          \r\n\r\n            {/* Divider */}\r\n            <div className=\"my-1 border-t border-gray-200\"></div>\r\n\r\n            {/* Delete Action */}\r\n            <button\r\n              className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 transition-colors duration-150 hover:bg-red-50\"\r\n              role=\"menuitem\"\r\n              onClick={() => {\r\n                deleteUser(u._id);\r\n                setActionMenu(null);\r\n              }}\r\n            >\r\n              <svg className=\"w-4 h-4 mr-2 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n              </svg>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n\r\n  {/* Confirmation Modal - Should be at the table level, not in each cell */}\r\n</td>\r\n\r\n\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n\r\n\r\n            {/* pagination */}\r\n            <div className=\"flex flex-col items-center gap-2 p-2 md:flex-row md:justify-between\">\r\n              <span>\r\n                Showing {start+1} to {Math.min(start+itemsPerPage, filtered.length)} of {filtered.length} entries\r\n              </span>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`px-3 py-1 rounded ${currentPage===1 ? \"bg-gray-300\" : \"bg-blue-500 text-white\"}`}\r\n                  disabled={currentPage===1}\r\n                  onClick={() => setCurrentPage(p => p-1)}\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  className={`px-3 py-1 rounded ${currentPage===totalPages ? \"bg-gray-300\" : \"bg-blue-500 text-white\"}`}\r\n                  disabled={currentPage===totalPages}\r\n                  onClick={() => setCurrentPage(p => p+1)}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n"],"names":["_ref","_customer$creditLimit","_customer$previousDue","customerData","visible","onClose","customer","setCustomer","useState","loading","setLoading","address","setAddress","useEffect","async","response","axios","get","headers","Authorization","localStorage","getItem","addressData","data","find","_address$user","user","_id","console","log","error","fetchAddress","Tag","_jsx","Modal","onCancel","footer","closable","centered","width","bodyStyle","backgroundColor","boxShadow","padding","children","_jsxs","className","Button","icon","CloseOutlined","onClick","style","position","top","right","zIndex","shape","Card","title","UserOutlined","borderRadius","Descriptions","column","Item","label","name","Date","createdAt","toLocaleDateString","_Fragment","MailOutlined","email","PhoneOutlined","mobile","phone","EnvironmentOutlined","houseNo","area","city","state","postalCode","Divider","creditLimit","toFixed","previousDue","priceLevelType","gstNumber","panNumber","taxNumber","shippingAddress","locationLink","href","target","rel","_order$customer","order","contentRef","useRef","breakdown","calculateBreakdown","subtotal","totalDiscount","itemDetails","items","forEach","item","itemSubtotal","salesPrice","quantity","itemDiscount","discount","itemTax","tax","push","itemTotal","finalPrice","totalTax","reduce","sum","grandTotal","shippingFee","columns","dataIndex","key","render","_","record","_record$item","itemName","align","_record$item$salesPri","color","total","open","ShoppingCartOutlined","orderId","status","ref","bordered","size","orderTime","toLocaleString","paymentMethod","paymentStatus","couponCode","orientation","Table","dataSource","rowKey","idx","pagination","DollarOutlined","PercentageOutlined","country","FilePdfOutlined","canvas","html2canvas","current","imgData","toDataURL","pdf","jsPDF","internal","pageSize","getWidth","height","addImage","save","PrinterOutlined","handlePrint","content","printWindow","window","document","write","innerHTML","close","focus","setTimeout","print","type","jsx","setSidebarOpen","fetchusers","riders","setRiders","assigned","setAssigned","searchTerm","setSearchTerm","success","setSuccess","activeRiders","filter","rider","toLowerCase","err","fetchRiders","filteredRiders","firstname","lastname","includes","xmlns","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","placeholder","value","onChange","e","length","map","charAt","res","put","deliveryAgent","riderId","deliveryAgentModel","alert","handleAssign","disabled","role","fetchWarehouse","AllowedWarehouse","WarehouseName","_rider$firstname","_rider$lastname","_rider$warehouseName","warehouseName","heading","expandedItem","setExpandedItem","FiX","FiInfo","_item$item$brand","_item$item$category","itemImages","src","alt","FiImage","brand","brandName","itemCode","discountType","openingStock","alertQuantity","category","OrderList","actionMenu","setActionMenu","isSidebarOpen","setStatus","users","setUsers","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","permissions","setPermissions","navigate","useNavigate","setData","pricedata","setPriceData","view","setView","warehouses","setWarehouses","stores","setStores","viewPrice","setViewPrice","assignRiderView","setAssignRiderView","assignVanView","setAssignVanView","ItemListView","setItemListView","setItems","setHeading","setOrderId","orderStatus","setOrderStatus","statusOptions","innerWidth","stored","JSON","parse","token","fetch","ok","Error","json","result","fetchStores","message","payload","all","Array","isArray","filtered","u","_u$userName","_u$Email","t","trim","userName","Email","totalPages","Math","ceil","start","slice","Navbar","Sidebar","NavLink","to","FaTachometerAlt","CustomerProfile","PriceBreakdownPage","AssignRider","AssignVan","ItemListPage","htmlFor","Select","options","option","n","copyToClipboard","rows","i","_u$customer4","_u$deliveryAgent7","_u$deliveryAgent8","customerName","unAvailableItems","finalAmount","username","deliveryTime","textContent","join","row","navigator","clipboard","writeText","then","catch","exportToExcel","excelData","_u$customer","_u$deliveryAgent","_u$deliveryAgent2","worksheet","XLSXUtils","json_to_sheet","workbook","book_new","book_append_sheet","writeXLSXFile","exportToPDF","doc","text","pdfData","_u$customer2","_u$deliveryAgent3","_u$deliveryAgent4","autoTable","head","body","startY","styles","fontSize","cellPadding","overflow","headStyles","fillColor","textColor","fontStyle","exportToCSV","_u$customer3","_u$deliveryAgent5","_u$deliveryAgent6","csvContent","field","blob","Blob","url","URL","createObjectURL","link","createElement","setAttribute","visibility","appendChild","click","removeChild","h","colSpan","_u$customer5","_u$deliveryAgent9","_u$deliveryAgent10","orderNumber","config","Pending","Confirmed","Processing","Shipped","Delivered","Cancelled","Returned","am","confirm","delete","id","deleteUser","min","p"],"sourceRoot":""}