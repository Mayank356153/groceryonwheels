{"version":3,"file":"static/js/8596.c19dabeb.chunk.js","mappings":"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","sources":["components/Settings/Sale.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt, FaBars, FaList, FaUsers, FaBox, FaFileInvoice, FaWindowMaximize } from \"react-icons/fa\";\r\nimport { MdOutlineDashboard } from \"react-icons/md\";\r\nimport Navbar from \"../Navbar.jsx\";    // Adjust the path as needed\r\nimport Sidebar from \"../Sidebar.jsx\";\r\n\r\nconst PosSettingsPage = () => {\r\n  // Sidebar and Tab States\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(\"sales\"); // Default to Sales tab\r\n useEffect(()=>{\r\n      if(window.innerWidth < 768){\r\n        setSidebarOpen(false)\r\n      }\r\n    },[])\r\n  // POS Settings state (the form fields)\r\n  const [settings, setSettings] = useState({\r\n    defaultAccount: \"\",\r\n    defaultSaleDiscount: 0,\r\n    posInvoiceFormat: \"Default\",\r\n    showWHColumnsOnPOSInvoice: false,\r\n    showPaidAmountAndChangeReturnOnInvoice: false,\r\n    invoiceFooterText: \"\",\r\n    invoiceTermsAndConditions: \"\",\r\n  });\r\n  // Accounts for Default Account dropdown\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Other state for Navbar, Sidebar, etc.\r\n  const navigate = useNavigate();\r\n\r\n  // ------------------- Data Fetching -------------------\r\n  // Fetch accounts for default account dropdown\r\n  const fetchAccounts = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(\"api/accounts\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const data = Array.isArray(response.data)\r\n        ? response.data\r\n        : response.data?.data || [];\r\n      setAccounts(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching accounts:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch current POS settings\r\n  const fetchSettings = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(\"api/pos-settings\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setSettings(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching POS settings:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAccounts();\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setSettings((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.put(\r\n        \"api/pos-settings\",\r\n        settings,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      alert(\"Settings updated successfully!\");\r\n      setSettings(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error updating settings:\", error);\r\n      alert(\"Failed to update settings\");\r\n    }\r\n  };\r\n\r\n  const handleTabClick = (tabName) => {\r\n    setActiveTab(tabName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      <div className=\"flex flex-grow\">\r\n        {/* Sidebar */}\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        {/* Main Content */}\r\n        <div className={`flex-grow  p-4 transition-all duration-300 w-full`}>\r\n          {/* Header & Breadcrumbs */}\r\n          <div className=\"mb-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h4 className=\"text-xl font-semibold text-black\">Store</h4>\r\n              <nav className=\"flex items-center text-sm text-gray-500\">\r\n                <Link to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                  <FaTachometerAlt className=\"mr-2\" /> Home\r\n                </Link>\r\n                <BiChevronRight className=\"mx-1\" />\r\n                <span className=\"text-gray-700\">Accounts List</span>\r\n                <BiChevronRight className=\"mx-1\" />\r\n                <span className=\"text-gray-700\">Accounts</span>\r\n              </nav>\r\n            </div>\r\n            <div className=\"my-2 border-b\"></div>\r\n            {/* Tab Navigation */}\r\n            <nav className=\"flex gap-2 \">\r\n              <a href=\"/store\" className=\"text-sm font-semibold no-underline hover:text-cyan-500\">Store</a>\r\n              \r\n              <a href=\"/pos-settings\" className=\"text-sm font-semibold no-underline hover:text-cyan-500\">Sales</a>\r\n              \r\n            </nav>\r\n          </div>\r\n\r\n          {/* Tab Content */}\r\n          <div className=\"p-4 bg-white border rounded shadow-md\">\r\n            {activeTab === \"sales\" ? (\r\n              <div>\r\n                <h3 className=\"mb-4 text-lg font-bold\">Sales Settings</h3>\r\n                {loading ? (\r\n                  <p>Loading sales settings...</p>\r\n                ) : (\r\n                  <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-4\">\r\n                    {/* Default Account */}\r\n                    <div>\r\n                      <label className=\"block mb-1 text-sm\">Default Account</label>\r\n                      <select\r\n                        name=\"defaultAccount\"\r\n                        value={settings.defaultAccount || \"\"}\r\n                        onChange={handleChange}\r\n                        className=\"w-full p-2 border rounded\"\r\n                      >\r\n                        <option value=\"\">Select an Account</option>\r\n                        {accounts.map((acc) => (\r\n                          <option key={acc._id} value={acc._id}>\r\n                            {acc.accountName}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    {/* Default Sale Discount */}\r\n                    <div>\r\n                      <label className=\"block mb-1 text-sm\">Default Sale Discount (%)</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"defaultSaleDiscount\"\r\n                        value={settings.defaultSaleDiscount}\r\n                        onChange={handleChange}\r\n                        className=\"w-full p-2 border rounded\"\r\n                      />\r\n                    </div>\r\n                    {/* POS Invoice Format */}\r\n                    <div>\r\n                      <label className=\"block mb-1 text-sm\">POS Invoice Format</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"posInvoiceFormat\"\r\n                        value={settings.posInvoiceFormat}\r\n                        onChange={handleChange}\r\n                        className=\"w-full p-2 border rounded\"\r\n                      />\r\n                    </div>\r\n                    {/* Show W/H Columns */}\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"showWHColumnsOnPOSInvoice\"\r\n                        checked={settings.showWHColumnsOnPOSInvoice}\r\n                        onChange={handleChange}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <label className=\"text-sm\">Show W/H Columns on POS Invoice</label>\r\n                    </div>\r\n                    {/* Show Paid Amount & Change Return */}\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"showPaidAmountAndChangeReturnOnInvoice\"\r\n                        checked={settings.showPaidAmountAndChangeReturnOnInvoice}\r\n                        onChange={handleChange}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <label className=\"text-sm\">Show Paid Amount & Change Return on Invoice</label>\r\n                    </div>\r\n                    {/* Invoice Footer Text */}\r\n                    <div>\r\n                      <label className=\"block mb-1 text-sm\">Invoice Footer Text</label>\r\n                      <textarea\r\n                        name=\"invoiceFooterText\"\r\n                        value={settings.invoiceFooterText}\r\n                        onChange={handleChange}\r\n                        className=\"w-full p-2 border rounded\"\r\n                      />\r\n                    </div>\r\n                    {/* Invoice Terms & Conditions */}\r\n                    <div>\r\n                      <label className=\"block mb-1 text-sm\">Invoice Terms & Conditions</label>\r\n                      <textarea\r\n                        name=\"invoiceTermsAndConditions\"\r\n                        value={settings.invoiceTermsAndConditions}\r\n                        onChange={handleChange}\r\n                        className=\"w-full p-2 border rounded\"\r\n                      />\r\n                    </div>\r\n                    {/* Form Actions */}\r\n                    <div className=\"flex justify-end gap-4\">\r\n                      <button type=\"submit\" className=\"px-4 py-2 text-white bg-green-600 rounded hover:bg-green-700\">\r\n                        Update\r\n                      </button>\r\n                      <button type=\"button\" on={() => navigate(\"/dashboard\")} className=\"px-4 py-2 text-white bg-red-500 rounded hover:bg-red-600\">\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold\">\r\n                  {activeTab === \"store\"\r\n                    ? \"Store Settings\"\r\n                    : activeTab === \"system\"\r\n                    ? \"System Settings\"\r\n                    : \"Prefixes Settings\"}\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {activeTab === \"store\"\r\n                    ? \"Store settings content goes here...\"\r\n                    : activeTab === \"system\"\r\n                    ? \"System settings content goes here...\"\r\n                    : \"Prefixes settings content goes here...\"}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosSettingsPage;\r\n"],"names":["PosSettingsPage","isSidebarOpen","setSidebarOpen","useState","activeTab","setActiveTab","useEffect","window","innerWidth","settings","setSettings","defaultAccount","defaultSaleDiscount","posInvoiceFormat","showWHColumnsOnPOSInvoice","showPaidAmountAndChangeReturnOnInvoice","invoiceFooterText","invoiceTermsAndConditions","accounts","setAccounts","loading","setLoading","navigate","useNavigate","async","_response$data","token","localStorage","getItem","response","axios","get","headers","Authorization","data","Array","isArray","error","console","fetchAccounts","fetchSettings","handleChange","e","name","value","type","checked","target","prev","_jsxs","className","children","_jsx","Navbar","Sidebar","Link","to","FaTachometerAlt","BiChevronRight","href","onSubmit","preventDefault","put","alert","onChange","map","acc","_id","accountName","on"],"sourceRoot":""}