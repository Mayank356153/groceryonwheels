{"version":3,"file":"static/js/6469.e27c2990.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/solid/esm/CameraIcon.js","components/ImageManagement/ItemImageManagement.jsx","components/contact/Button.jsx","components/ImageManagement/ItemMasterImage.jsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction CameraIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CameraIcon);\nexport default ForwardRef;","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { useState,useEffect ,useRef} from 'react'\r\nimport axios, { all } from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Button from '../contact/Button.jsx'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FaTachometerAlt } from 'react-icons/fa'\r\nimport { CameraIcon } from '@heroicons/react/solid'\r\nimport { BrowserMultiFormatReader } from \"@zxing/library\";\r\nimport ItemMasterImage from './ItemMasterImage.jsx'\r\nimport Sidebar from \"../Sidebar.jsx\"\r\nconst  ItemImageManagement=()=> {\r\n    const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n    const[result,setResult]=useState(\"\")\r\n    const[scanning,setScanning]=useState(false)\r\n    const[items,setItems]=useState([])\r\n    \r\n const [filteredItems, setFilteredItems] = useState([]);\r\n const[tableitems,setTableItems]=useState([])\r\n    const[selecteditemname,setSelecteditemName]=useState(\"\")\r\n    const [selectMaster,setSelectMaster]=useState(false)\r\n    const[selectedItem,setSelectedItem]=useState({})\r\n     useEffect(()=>{\r\n        if(window.innerWidth < 768){\r\n          setSidebarOpen(false)\r\n        }\r\n      },[window.innerWidth])\r\n    \r\n    \r\n     \r\n\r\n\r\n    const fetchItems = async () => {\r\n  try {\r\n    const response = await axios.get('/api/items', {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n\r\n    let allItems = response.data.data;\r\n\r\n    // Sort: items without masterImage first\r\n    allItems.sort((a, b) => {\r\n      const hasA = a.masterImage ? 1 : 0;\r\n      const hasB = b.masterImage ? 1 : 0;\r\n      return hasA - hasB;\r\n    });\r\n\r\n    console.log(\"Items\", allItems);\r\n\r\n    setItems(allItems);\r\n    setFilteredItems(allItems);\r\n    setTableItems(allItems);\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching stores:\", error);\r\n  }\r\n};\r\n\r\n\r\n     \r\n     useEffect(()=>{\r\n      fetchItems();\r\n     },[])\r\n\r\n     \r\n\r\n    const videoRef = useRef(null);\r\n           const codeReaderRef = useRef(null);\r\n         \r\n           useEffect(() => {\r\n             if (!scanning) return;\r\n         \r\n             const startScanner = async () => {\r\n               if (!videoRef.current) return;\r\n         \r\n               const codeReader = new BrowserMultiFormatReader();\r\n               codeReaderRef.current = codeReader;\r\n         \r\n               const tryDecode = async (facingMode) => {\r\n                 const constraints = {\r\n                   video: {\r\n                     facingMode,\r\n                     advanced: [\r\n                       { width: 1920 },\r\n                       { height: 1080 },\r\n                       { zoom: 2 }, // not all devices support this\r\n                     ],\r\n                   },\r\n                 };\r\n         \r\n                 return codeReader.decodeFromConstraints(\r\n                   constraints,\r\n                   videoRef.current,\r\n                   (result, error) => {\r\n                     if (result) {\r\n                       const text = result.getText();\r\n                       alert(text);\r\n                       setResult(text)  \r\n                       window.navigator.vibrate?.(200);\r\n                       const beep = new Audio(\"/beep.mp3\");\r\n                       beep.play();\r\n         \r\n                       const stream = videoRef.current?.srcObject;\r\n                       stream?.getTracks().forEach((track) => track.stop());\r\n         \r\n                       if (codeReaderRef.current?.reset && typeof codeReaderRef.current.reset === \"function\") {\r\n                         codeReaderRef.current.reset();\r\n                       }\r\n         \r\n                       setScanning(false);\r\n                     }\r\n         \r\n                     if (error && error.name !== \"NotFoundException\") {\r\n                       console.error(\"Scan error:\", error);\r\n                     }\r\n                   }\r\n                 );\r\n               };\r\n         \r\n               try {\r\n                 await tryDecode({ exact: \"environment\" });\r\n               } catch (error) {\r\n                 if (error.name === \"OverconstrainedError\" || error.name === \"NotFoundError\") {\r\n                   console.warn(\"Back camera not found. Trying front camera...\");\r\n                   try {\r\n                     await tryDecode(\"user\");\r\n                   } catch (fallbackError) {\r\n                     console.error(\"Front camera also failed:\", fallbackError);\r\n                     alert(\"No camera found or accessible.\");\r\n                     setScanning(false);\r\n                   }\r\n                 } else {\r\n                   console.error(\"Camera access error:\", error);\r\n                   alert(\"Camera access error: \" + error.message);\r\n                   setScanning(false);\r\n                 }\r\n               }\r\n             };\r\n         \r\n             startScanner();\r\n         \r\n             return () => {\r\n               const stream = videoRef.current?.srcObject;\r\n               stream?.getTracks().forEach((track) => track.stop());\r\n         \r\n               if (codeReaderRef.current?.reset && typeof codeReaderRef.current.reset === \"function\") {\r\n                 codeReaderRef.current.reset();\r\n               }\r\n             };\r\n           }, [scanning]);\r\n\r\n\r\n\r\n           \r\n\r\n           \r\n             \r\n\r\n            \r\n           \r\n    \r\n\r\n\r\n\r\n  \r\n\r\nuseEffect(() => {\r\n  if (!result) {\r\n    setFilteredItems(items);\r\n    return;\r\n  }\r\n\r\n  const q = result.toLowerCase();\r\n  const filtered = items.filter((item) => {\r\n    return (\r\n      item.itemName?.toLowerCase().includes(q) ||\r\n      item.itemCode?.toLowerCase().includes(q) ||\r\n      (item.barcode && item.barcode.toLowerCase().includes(q))\r\n    );\r\n  });\r\n  \r\n  setFilteredItems(filtered);\r\n}, [result, items]);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if (!result) {\r\n    setTableItems(items);\r\n    return;\r\n  }\r\n\r\n  const q = result.toLowerCase();\r\n  const filtered = items.filter((item) => {\r\n    return (\r\n      item.itemName?.toLowerCase().includes(q) ||\r\n      item.itemCode?.toLowerCase().includes(q) ||\r\n      (item.barcode && item.barcode.toLowerCase().includes(q))\r\n    );\r\n  });\r\n  \r\n  setTableItems(filtered);\r\n}, [result, items]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n const [visibleItems, setVisibleItems] = useState(15);\r\n  const tableContainerRef = useRef(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  \r\n  const itemsToShow = tableitems.slice(0, visibleItems);\r\n\r\n  useEffect(() => {\r\n    const container = tableContainerRef.current;\r\n    if (!container) return;\r\n\r\n    const handleScroll = () => {\r\n      if (isLoading) return;\r\n      \r\n      const { scrollTop, scrollHeight, clientHeight } = container;\r\n      const isNearBottom = scrollTop + clientHeight >= scrollHeight - 100;\r\n      \r\n      if (isNearBottom && visibleItems < tableitems.length) {\r\n        setIsLoading(true);\r\n        // Simulate loading delay\r\n        setTimeout(() => {\r\n          setVisibleItems(prev => Math.min(prev + 15, tableitems.length));\r\n          setIsLoading(false);\r\n        }, 500);\r\n      }\r\n    };\r\n\r\n    container.addEventListener('scroll', handleScroll);\r\n    return () => container.removeEventListener('scroll', handleScroll);\r\n  }, [visibleItems, tableitems.length, isLoading]);\r\n\r\n   \r\n  useEffect(()=>console.log(\"aa\",tableitems),[tableitems])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow \">\r\n         <div>\r\n          \r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n         </div>\r\n          \r\n           {/* Content */}\r\n         <div className={` flex flex-col p-2 md:p-2  w-full`}>\r\n          <header className=\"flex flex-col items-center justify-between p-4 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Item Master Image</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Master</span>\r\n            </div>\r\n\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n   <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                            <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                          </NavLink>     \r\n                          <NavLink to=\"/banners/view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Item Master Image\r\n                          </NavLink>    \r\n                          \r\n              \r\n            </nav>\r\n          </header>\r\n\r\n          {\r\n            selectMaster && <ItemMasterImage item={selectedItem}   onClose={() => \r\n              {\r\n                fetchItems();\r\n               setSelectMaster(false) \r\n              }\r\n            } />\r\n          }\r\n\r\n          <div className=\"p-4 mt-1 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n \r\n               \r\n                 <div className=\"flex gap-5\">\r\n\r\n                    \r\n                  <div className=\"relative flex flex-col w-full py-2\">\r\n                                     <label htmlFor=\"\">Items</label>\r\n                                     <label htmlFor=\"\" className=\"flex\">\r\n                                     <input type=\"text\" name=\"type\" className=\"w-full px-2 py-1 border-2 rounded-md\"  value={selecteditemname} onChange={(e)=>{setResult(e.target.value) ; setSelecteditemName(e.target.value)}}/>\r\n                                     <button type=\"button\"\r\n                         className=\"p-2 ml-2 text-white rounded-full hover:bg-blue-600\" \r\n                         onClick={() => setScanning(true)}\r\n                       >\r\n                         <CameraIcon className=\"w-6 h-6 text-gray-500\" />\r\n                       </button>\r\n                                     </label>\r\n                                     {result !== \"\" && filteredItems.length > 1 && (\r\n                   <div\r\n                     className=\"absolute z-50 w-full overflow-y-auto bg-white border rounded-lg shadow-lg top-20 sm:w-96 max-h-60 touch-auto\"\r\n                     style={{ WebkitOverflowScrolling: 'touch' }} // enables momentum scrolling on iOS\r\n                   >\r\n                     <ul>\r\n                       {filteredItems.map((list) => (\r\n                         <li\r\n                           key={list.itemCode}\r\n                           onClick={() => {setResult(list.itemCode);setSelecteditemName(list.itemName)}}\r\n                           className=\"p-2 cursor-pointer hover:bg-gray-100\"\r\n                         >\r\n                           <strong>{list.itemCode}</strong> - {list.itemName} - {list.barcode}\r\n                         </li>\r\n                       ))}\r\n                     </ul>\r\n                   </div>\r\n                 )}\r\n                   {scanning && (\r\n                   <div className=\"fixed inset-0 z-50 flex flex-col items-center justify-center bg-black bg-opacity-50\">\r\n                     <div className=\"relative overflow-hidden border-4 border-white rounded-lg shadow-xl w-72 h-72\">\r\n                       <video\r\n                         ref={videoRef}\r\n                         className=\"absolute object-cover w-full h-full\"\r\n                         autoPlay\r\n                         muted\r\n                         playsInline\r\n                       />\r\n                       <div className=\"absolute w-full h-1 bg-red-500 animate-scan\" />\r\n                     </div>\r\n                     <button\r\n                       onClick={() => {\r\n                         const stream = videoRef.current?.srcObject;\r\n                         stream?.getTracks().forEach((track) => track.stop());\r\n                 \r\n                         if (codeReaderRef.current?.reset && typeof codeReaderRef.current.reset === \"function\") {\r\n                           codeReaderRef.current.reset();\r\n                         }\r\n                 \r\n                         setScanning(false);\r\n                       }}\r\n                       className=\"px-4 py-2 mt-6 text-white bg-red-600 rounded hover:bg-red-700\"\r\n                     >\r\n                       Cancel\r\n                     </button>\r\n                   </div>\r\n                 )}\r\n                 \r\n                                     </div>\r\n\r\n\r\n                  \r\n                 </div>\r\n  \r\n    \r\n\r\n                    \r\n\r\n                       \r\n                     <div \r\n      ref={tableContainerRef}\r\n      className='w-full mt-4 overflow-x-auto min-h-16'\r\n      style={{ maxHeight: '500px', overflowY: 'auto' }}\r\n    >\r\n      <table className='min-w-full border-2 divide-y divide-gray-200 min-h-48'>\r\n        <thead className='sticky top-0 bg-gray-200'>\r\n          <tr>\r\n            <th className='py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase'>ItemName</th>\r\n            <th className='py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase'>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className='bg-white divide-y divide-gray-200'>\r\n          {itemsToShow.map((user, index) => (\r\n            <tr key={index}>\r\n              <td className='py-4 text-sm text-gray-500 whitespace-nowrap'>{user.itemName || \"NA\"}</td>\r\n              <td className='py-4 text-sm text-gray-500 whitespace-nowrap'>\r\n                <button \r\n                //   onClick={() => handleSelectMasterImage(user._id)}\r\n                onClick={()=>{\r\n                    setSelectedItem(user)\r\n                    setSelectMaster(true)\r\n                }}\r\n                  className=\"px-3 py-1 text-sm text-white bg-blue-500 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n                >\r\n                  Select Master\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {isLoading && (\r\n        <div className=\"flex justify-center p-4\">\r\n          <div className=\"w-8 h-8 border-4 border-blue-500 rounded-full border-t-transparent animate-spin\"></div>\r\n        </div>\r\n      )}\r\n    \r\n    </div>\r\n\r\n                \r\n                 \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ItemImageManagement\r\n","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","import { useState } from 'react';\r\nimport axios from \"axios\"\r\nconst ItemMasterImage = ({ item, onClose }) => {\r\n  const [selectedImageId, setSelectedImageId] = useState(item.masterImageId || null);\r\n  const [images, setImages] = useState(item.itemImages || []);\r\n  const FILES_BASE = \"/vps/uploads/qr/items\"\r\n  console.log(\"item\")\r\n  console.log(item)\r\n  const handleSetMasterImage =async (image) => {\r\n    setSelectedImageId(image);\r\n     const tokenHeader =  () => ({\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n    try{\r\n        const res = await axios.put(\r\n        \"api/items/assign/master_image\",{\r\n                  id:item._id,\r\n                  image:image\r\n        },\r\n        tokenHeader()\r\n      );\r\n      console.log(res)\r\n      alert(\"Master image selected\")\r\n      onClose();\r\n    }\r\n    catch(error){\r\n      console.log(\"ERro in assigning master image\",error)\r\n    }\r\n    \r\n    \r\n  };\r\n\r\n  const handleReorderImages = (startIndex, endIndex) => {\r\n    const result = Array.from(images);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    setImages(result);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\">\r\n      <div className=\"relative w-11/12 max-w-5xl p-4 bg-white rounded-lg shadow-lg\">\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute p-1 text-gray-500 top-2 right-2 hover:text-gray-800\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n\r\n       <h3>Item Master Image</h3>\r\n{item.masterImage && item.masterImage !== \"\" ? (\r\n  <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5\">\r\n    <img\r\n      // src={`${item.masterImage}`}\r\n      src={`${FILES_BASE}/${item.masterImage}`}\r\n      alt={`${item.itemName}`}\r\n      className=\"object-cover w-full h-32\"\r\n    />\r\n  </div>\r\n) : (\r\n  <div className=\"py-8 text-center text-gray-500\">\r\n    No Master Image is selected\r\n  </div>\r\n)}\r\n\r\n        <h3 className=\"mb-4 text-lg font-semibold\">Item Images</h3>\r\n\r\n        {images.length === 0 ? (\r\n          <div className=\"py-8 text-center text-gray-500\">\r\n            No images available for this item\r\n          </div>\r\n        ) : \r\n        (\r\n          <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5\">\r\n            {images.map((image, index) => \r\n            {\r\n              console.log(\"image\")\r\n              console.log(image)\r\n              // const img = it.itemImages?.[0]\r\n              //         ? `${FILES_BASE}/${image}`\r\n              //         : null;\r\n            \r\n            return(\r\n              <div \r\n                key={image._id} \r\n                className={`relative border-2 rounded-lg overflow-hidden ${selectedImageId === image._id ? 'border-blue-500 ring-2 ring-blue-200' : 'border-gray-200'}`}\r\n                draggable\r\n                onDragStart={(e) => e.dataTransfer.setData('text/plain', index)}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDrop={(e) => {\r\n                  e.preventDefault();\r\n                  const startIndex = parseInt(e.dataTransfer.getData('text/plain'));\r\n                  handleReorderImages(startIndex, index);\r\n                }}\r\n              >\r\n                <img \r\n                //   src={image.url} \r\n                  src={`${FILES_BASE}/${image}`}\r\n                  alt={`Item ${item.itemName} - Image ${index + 1}`}\r\n                  className=\"object-cover w-full h-32\"\r\n                />\r\n                \r\n                <div className=\"absolute bottom-0 left-0 right-0 p-1 text-xs text-white truncate bg-black bg-opacity-50\">\r\n                  {image.name || `Image ${index + 1}`}\r\n                </div>\r\n                \r\n                <button\r\n                  onClick={() => handleSetMasterImage(image)}\r\n                  className={`absolute top-1 right-1 p-1 rounded-full ${selectedImageId === image._id ? 'bg-blue-500 text-white' : 'bg-white text-gray-700'}`}\r\n                  title={selectedImageId === image._id ? 'Master image' : 'Set as master'}\r\n                >\r\n                  {selectedImageId === image._id ? (\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-4 h-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  ) : (\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-4 h-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  )}\r\n                </button>\r\n                \r\n                <div className=\"absolute px-1 text-xs text-white bg-black rounded top-1 left-1 bg-opacity-70\">\r\n                  {index + 1}\r\n                </div>\r\n              </div>\r\n            )})}\r\n          </div>\r\n        )}\r\n\r\n        {selectedImageId && (\r\n          <div className=\"mt-4 text-sm text-gray-600\">\r\n            Master image selected: {images.find(img => img._id === selectedImageId)?.name || 'No name'}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemMasterImage;\r\n"],"names":["React","props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","ItemImageManagement","isSidebarOpen","setSidebarOpen","useState","result","setResult","scanning","setScanning","items","setItems","filteredItems","setFilteredItems","tableitems","setTableItems","selecteditemname","setSelecteditemName","selectMaster","setSelectMaster","selectedItem","setSelectedItem","useEffect","window","innerWidth","fetchItems","async","allItems","axios","get","headers","Authorization","localStorage","getItem","data","sort","a","b","masterImage","console","log","error","videoRef","useRef","codeReaderRef","current","codeReader","BrowserMultiFormatReader","tryDecode","constraints","video","facingMode","advanced","width","height","zoom","decodeFromConstraints","_window$navigator$vib","_window$navigator","_videoRef$current","_codeReaderRef$curren","text","getText","alert","navigator","vibrate","call","Audio","play","stream","srcObject","getTracks","forEach","track","stop","reset","name","exact","warn","fallbackError","message","startScanner","_videoRef$current2","_codeReaderRef$curren2","q","toLowerCase","filtered","filter","item","_item$itemName","_item$itemCode","itemName","includes","itemCode","barcode","_item$itemName2","_item$itemCode2","visibleItems","setVisibleItems","tableContainerRef","isLoading","setIsLoading","itemsToShow","slice","container","handleScroll","scrollTop","scrollHeight","clientHeight","length","setTimeout","prev","Math","min","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Navbar","Sidebar","NavLink","to","FaTachometerAlt","ItemMasterImage","onClose","htmlFor","type","value","onChange","e","target","onClick","CameraIcon","style","WebkitOverflowScrolling","map","list","autoPlay","muted","playsInline","_videoRef$current3","_codeReaderRef$curren3","maxHeight","overflowY","user","index","Button","_ref","_images$find","selectedImageId","setSelectedImageId","masterImageId","images","setImages","itemImages","FILES_BASE","handleSetMasterImage","image","res","put","id","_id","stroke","strokeLinecap","strokeLinejoin","strokeWidth","src","alt","draggable","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDrop","handleReorderImages","startIndex","endIndex","Array","from","removed","splice","parseInt","getData","title","find","img"],"sourceRoot":""}