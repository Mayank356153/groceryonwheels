{"version":3,"file":"static/js/2916.56ae3313.chunk.js","mappings":"sKAGe,SAASA,IACpB,MAAMC,EAAcC,IAAgBC,EAAAA,EAAAA,WAAS,GAC7C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAEvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,OAI1BM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mFAAkFC,UACjGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uFACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2CAA0CC,SAAC,yBAOlE,C,6DCvBa,SAASI,EAAKC,GASzB,IAT0B,GAC5BC,EAAG,IAAG,KACNC,EAAO,OAAM,YACbC,EAAc,GAAE,MAChBC,EAAK,UACLV,EAAY,GAAE,YACdW,EAAc,GAAE,UAChBC,EAAY,MACTC,GACJP,EACC,MAAMQ,GAAKC,EAAAA,EAAAA,SAEX,OACEhB,EAAAA,EAAAA,MAAA,OAAKC,UAAWY,EAAUX,SAAA,CAAC,IACxBS,GAAQR,EAAAA,EAAAA,KAAA,SAAOF,UAAWS,EAAaO,QAAc,MAALT,EAASO,EAAGP,EAAGN,SAAES,IAAiB,KAAK,KACxFR,EAAAA,EAAAA,KAAA,SACEM,KAAMA,EACND,GAAS,MAALA,EAASO,EAAGP,EAChBI,YAAaA,EACbX,UAAWA,KACPa,MAIZ,C,2DCzBe,SAASI,EAAMX,GAK1B,IAL2B,KAC3BY,EAAI,KACJV,EAAK,SAAQ,UACbR,KACGa,GACNP,EACC,OACEJ,EAAAA,EAAAA,KAAA,UAASF,UAAW,GAAGA,OAAiBa,EAAKZ,SAAGiB,GAEpD,C,mMCCe,SAASC,IAGtB,MAEMC,GAAWC,EAAAA,EAAAA,OAGVC,EAAKC,IAASzB,EAAAA,EAAAA,UAAS,KACzB0B,EAAOC,IAAW3B,EAAAA,EAAAA,UAAS,KAEzB4B,EAASC,IAAc7B,EAAAA,EAAAA,WAAS,IAChC8B,EAAOC,IAAY/B,EAAAA,EAAAA,UAAS,OAC5BgC,EAAaC,IAAkBjC,EAAAA,EAAAA,UAAS,IACxCkC,EAAgBC,IAAqBnC,EAAAA,EAAAA,UAAS,KAC9CoC,EAAQC,IAAarC,EAAAA,EAAAA,UAAS,KAC9BF,EAAcC,IAAkBC,EAAAA,EAAAA,WAAS,IACzCsC,EAAMC,IAAevC,EAAAA,EAAAA,WAAS,IAChCwC,EAAMC,IAAUzC,EAAAA,EAAAA,UAAS,IACzB0C,EAAMC,IAAU3C,EAAAA,EAAAA,UAAS,IACzB4C,EAAYC,IAAgB7C,EAAAA,EAAAA,UAAS,KACtC8C,EAAYC,IAAgB/C,EAAAA,EAAAA,UAAS,IAC1CgD,EAAAA,EAAAA,YAAU,KACJC,OAAOC,WAAa,KACrBnD,GAAe,EACjB,GACA,IAEH,MAAMoD,EAAYC,UACjBvB,GAAW,GACX,IACE,MAAMwB,QAAkBC,EAAAA,EAAMC,IAAI,mBAAoB,CACpDC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAIlDlC,EAAQ4B,EAAS7B,KAAKA,MACtBoC,QAAQC,IAAIR,EAAS7B,KACvB,CAAE,MAAOsC,GACP/B,EAAS+B,EAAIC,QACf,CAAC,QACClC,GAAW,EACb,GAGImC,EACNxC,EAAKyC,QAAOC,GACVA,EAAKC,aAAaC,cAAcC,SAASjC,EAAOgC,gBAChDF,EAAKI,IAAIF,cAAcC,SAASjC,EAAOgC,kBAGzCpB,EAAAA,EAAAA,YAAU,KACRG,GAAW,GAAE,IAUb,MAEMoB,EAAaC,KAAKC,KAAKT,EAAaU,OAASxC,GAC7CyC,EAAeX,EAAaY,OAAO5C,EAAY,GAAGE,EAAgBF,EAAaE,IAYrFc,EAAAA,EAAAA,YAAU,KAVM6B,MAEd,MAAMC,EAAcH,EAAaI,QAAO,CAACC,EAAKd,IAASc,EAAMd,EAAKe,aAAa,GACvEC,EAAmBP,EAAaI,QAAO,CAACC,EAAKd,IAASc,EAAMd,EAAKpB,aAAa,GAC/EqC,EAAYR,EAAaI,QAAO,CAACC,EAAId,IAAOc,GAAKd,EAAKkB,gBAAkB,IAAG,GAChF3C,EAASqC,GACT/B,EAAemC,GACfvC,EAASwC,EAAY,EAGVN,EAAW,GAAE,CAACrD,EAAKwC,IAClC,MAAMqB,EAAoBC,IACrBA,GAAU,GAAKA,GAAUf,GAC5BtC,EAAeqD,EAAQ,EAsFnBC,EAAaA,CAACC,EAAE/E,KACpB,MAAMgF,EAAMD,EAAEE,OAAOD,MACV,SAARA,GAAgBnE,EAAS,oBAAoBb,KACrC,WAARgF,GA5BgBrC,WAEnB,GADYH,OAAO0C,QAAQ,gCAC3B,CAGA9D,GAAW,GAEX,UACyByB,EAAAA,EAAMsC,OAAO,gBAAgBnF,IAAM,CACxD+C,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAInDkC,MAAM,uBAEP,CAAE,MAAO/D,GACP8B,QAAQ9B,MAAOA,EAAMiC,QACvB,CAAC,QAEClC,GAAW,GACXsB,GACF,CAlBA,CAkBA,EAMqB2C,CAAarF,GACtB,aAARgF,GAAoBnE,EAAS,sBAAsBb,IAAK,EAK9D,OAAGmB,GAAgBxB,EAAAA,EAAAA,KAACP,EAAAA,EAAa,IAC9BiC,GAAc1B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BAEnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAE9CC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KAEtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAE5CC,EAAAA,EAAAA,KAAA,OAAAD,UAEAC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,OAI1BG,EAAAA,EAAAA,MAAA,OAAKC,UAAW,8EAA8EC,SAAA,EAE5FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2EAA0EC,SAAA,EACvFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAWC,SAAC,oBAC5BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAC,+BAE1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oJAAmJC,SAAA,EAChKF,EAAAA,EAAAA,MAAC8F,EAAAA,GAAO,CAACC,GAAG,aAAa9F,UAAU,+CAA8CC,SAAA,EAAEC,EAAAA,EAAAA,KAAC6F,EAAAA,IAAe,IAAG,YACtG7F,EAAAA,EAAAA,KAAA,QAAAD,SAAM,OACNC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAO,CAACC,GAAG,mBAAmB9F,UAAU,6BAA4BC,SAAC,sBACtEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,OACNC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAO,CAACC,GAAG,iBAAiB9F,UAAU,8BAA6BC,SAAC,qBAKzEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8GAA6GC,SAAA,EAE1HF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oFAAmFC,SAAA,EAChGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACG,KAAK,aAAa,wCAI3BT,EAAAA,EAAAA,MAAA,UAAQC,UAAU,gHAAgHgG,QAASA,IAAI5E,EAAS,iBAAiBnB,SAAA,EACvKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,MAAQ,yBAKtCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEC,SAAA,EAEfF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6FAA4FC,SAAA,EAC3GF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,UAC1BF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,gDAAgDuF,MAAOvD,EAAgBiE,SAhJ5EX,IACzBrD,EAAkBiE,OAAOZ,EAAEE,OAAOD,QAClCxD,EAAe,EAAE,EA8IkH9B,SAAA,EACrHC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,QACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,QACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAEVC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,gBAE5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sDAAqDC,SAAA,EACpEC,EAAAA,EAAAA,KAAA,UAAQ8F,QApJHG,KACjB,MAAM7E,EAAOwC,EAAasC,KAAIpC,GAAQ,GAAGA,EAAKI,QAAQJ,EAAKC,iBAAiBD,EAAKqC,UAAUrC,EAAKsC,SAAStC,EAAKuC,QAAQvC,EAAKuC,QAAQC,aAAa,sBAAsBxC,EAAKe,eAAef,EAAKpB,eAAeoB,EAAKkB,gBAAkB,KAAKlB,EAAKyC,WAAWjF,EAAO2C,SAASH,EAAKI,KAAM,WAAa,cAAasC,KAAK,MACpTC,UAAUC,UAAUC,UAAUvF,GAC9BqE,MAAM,4BAA4B,EAiJO3F,UAAU,2CAA0CC,SAAC,UAClFC,EAAAA,EAAAA,KAAA,UAAQ8F,QA/IMc,KAC1B,MAAMC,EAAKC,EAAAA,MAAWC,cAAcnD,GAC9BoD,EAAKF,EAAAA,MAAWG,WACtBH,EAAAA,MAAWI,kBAAkBF,EAAIH,EAAI,SACrCC,EAAAA,UAAeE,EAAI,aAAa,EA2IkBlH,UAAU,2CAA0CC,SAAC,WAC3FC,EAAAA,EAAAA,KAAA,UAAQ8F,QAzIIqB,KACxB,MAAMC,EAAM,IAAIC,EAAAA,GAChBD,EAAIpG,KAAK,gBAAiB,GAAI,IAC9B,MAAMsG,EAAY1D,EAAasC,KAAIpC,GAAQ,CACzCA,EAAKI,IACLJ,EAAKC,aACLD,EAAKqC,OACLrC,EAAKsC,MACLtC,EAAKuC,QAAQvC,EAAKuC,QAAQC,aAAa,mBACvCxC,EAAKe,YACLf,EAAKpB,YACLoB,EAAKkB,gBAAkB,EACvBlB,EAAKyC,QACLjF,EAAO2C,SAASH,EAAKI,KAAM,WAAa,aAG1CqD,EAAAA,EAAAA,IAAUH,EAAK,CACbI,KAAM,CAAC,CAAC,cAAe,gBAAiB,SAAU,QAAS,gBAAiB,eAAgB,eAAe,mBAAmB,UAAU,WACxIC,KAAMH,IAGRF,EAAIM,KAAK,oBAAoB,EAoHmB5H,UAAU,2CAA0CC,SAAC,SACzFC,EAAAA,EAAAA,KAAA,UAAQ8F,QAlHF6B,KAClB9E,OAAO+E,OAAO,EAiH4B9H,UAAU,2CAA0CC,SAAC,WACnFC,EAAAA,EAAAA,KAAA,UAAQ8F,QA9GI+B,KACxB,MAAMC,EAAa,+BAAiClE,EAAasC,KAAI6B,GAAQC,OAAOC,OAAOF,GAAMvB,KAAK,OAAMA,KAAK,MAC3G0B,EAAaC,UAAUL,GACvBM,EAAOC,SAASC,cAAc,KACpCF,EAAKG,aAAa,OAAQL,GAC1BE,EAAKG,aAAa,WAAY,iBAC9BF,SAASZ,KAAKe,YAAYJ,GAC1BA,EAAKK,QACLJ,SAASZ,KAAKiB,YAAYN,EAAK,EAsGiBtI,UAAU,2CAA0CC,SAAC,YAEzFC,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOG,YAAY,SAASX,UAAU,iEAAiEiG,SAAWX,GAAMnD,EAAUmD,EAAEE,OAAOD,gBAKzJrF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,yBAAwBC,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAASC,UACxBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,UACjCC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACG,KAAK,WAAWD,GAAG,aAAasI,QAASzG,EAAO6D,SAAUA,IAAI5D,GAAaD,QAEpFlC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,iBACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,mBACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,YAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,WAEpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,cACrCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,UAErCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,YACrCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,iBAKzCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,2BAA0BC,SAAA,CACxC6D,EAAaU,QAAS,IACrBtE,EAAAA,EAAAA,KAAA,MAAAD,UACGC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iDAAiD8I,QAAQ,KAAI7I,SAAC,wBAGhF6D,EAAaY,OAAO5C,EAAc,GAAIE,EAAgBF,EAAcE,GAAgBoE,KAAI,CAACpC,EAAM+E,KAC9FhJ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,UAChDC,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACG,KAAK,WAAYD,GAAG,aAAasI,QAASzG,GAASM,EAAYyB,SAASH,EAAKI,KAAM6B,SAAUA,KAAI+C,OAzGlHzI,EAyGyHyD,EAAKI,SAxG3IzB,GAAgBsG,GAAQA,EAAK9E,SAAS5D,GAAI0I,EAAKlF,QAAQC,GAASA,GAAMzD,IAAI,IAAI0I,EAAK1I,KADtEA,KAyGmI,OAE3HL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE+D,EAAKI,OACzDlE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE+D,EAAKC,gBACzD/D,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE+D,EAAKqC,UACzDnG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE+D,EAAKsC,SACzDpG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE+D,EAAKwC,gBACzDtG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE+D,EAAKxD,QAIzDN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAsCgG,QAASA,IAChCvE,GAAWwH,GACZA,EAAK9E,SAASH,EAAKI,KACjB6E,EAAKlF,QAAQxD,GAAOA,IAAOyD,EAAKI,MACnC,IAAI6E,EAAMjF,EAAKI,OAEXnE,SAC9BuB,EAAO2C,SAASH,EAAKI,MACkBlE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,uCAAsCC,SAAC,cAE/DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,yCAAwCC,SAAC,cAIzFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gCAA+BC,UAC3CF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,kCAAkCgG,QAAUV,GAAID,EAAaC,EAAEtB,EAAKI,KAAKnE,SAAA,EACzFC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAG2D,UAAU,EAAMC,UAAU,EAAKlJ,SAAC,aACjDC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,WAAUtF,SAAC,+BACzBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,OAAMtF,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,OAAMtF,SAAC,kBACrBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,SAAQtF,SAAC,kBAjCpB8I,cA4CpBhJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qFAAoFC,SAAA,EAChGF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,wBAAoBF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,WAAS+B,GAAkBF,EAAc,GAAK,EAAE,OAAKwC,KAAK8E,IAAIpH,EAAiBF,EAAagC,EAAaU,QAAQ,OAAKV,EAAaU,OAAO,cAAe,qBACzLzE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC/DF,EAAAA,EAAAA,MAAA,UACZC,UAAW,mHACS,IAAhB8B,EACE,+CACA,2DACNkE,QAASA,IAAMb,EAAiBrD,EAAc,GAC9CqH,SAA0B,IAAhBrH,EAAkB7B,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUqJ,KAAK,OAAOC,OAAO,eAAeC,YAAa,EAAGC,QAAQ,YAAWvJ,UAC5FC,EAAAA,EAAAA,KAAA,QAAMuJ,cAAc,QAAQC,eAAe,QAAQC,EAAE,sBACjD,eAGR5J,EAAAA,EAAAA,MAAA,UACEC,UAAW,mHACN8B,IAAgBuC,GAA2B,IAAbA,EAC7B,+CACA,2DACN2B,QAASA,IAAMb,EAAiBrD,EAAc,GAC9CqH,SAAUrH,IAAgBuC,GAA2B,IAAbA,EAAepE,SAAA,CACxD,QAECC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUqJ,KAAK,OAAOC,OAAO,eAAeC,YAAa,EAAGC,QAAQ,YAAWvJ,UAC5FC,EAAAA,EAAAA,KAAA,QAAMuJ,cAAc,QAAQC,eAAe,QAAQC,EAAE,0CAczD,C","sources":["Loading.jsx","components/contact/Input.jsx","components/contact/Button.jsx","components/contact/NewCustomerList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from './Button';\r\nimport Input from './Input';\r\nimport { useNavigate,NavLink } from 'react-router-dom';\r\nimport Navbar from '../Navbar';\r\nimport Sidebar from '../Sidebar';\r\nimport {FaTachometerAlt} from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport LoadingScreen from '../../Loading';\r\nexport default function NewCustomerlist() {\r\n  \r\n  // Configuration options for table display\r\n  const entries_options = [10, 20, 30, 40, 50]; // Options for entries per page dropdown\r\n  const button = [\"Copy\", \"Excel\", \"PDF\", \"Print\", \"CSV\", \"Columns\"]; // Export/action button labels\r\n  const Navigate = useNavigate(); // Navigation hook for routing\r\n\r\n  // Sample customer data for demonstration\r\n  const [data,setData]=useState([]);\r\n const[status,setStatus]=useState([])\r\n  // State management for component\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1); // Current pagination page\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10); // Number of entries per page\r\n  const [search, setSearch] = useState(''); // Search filter input\r\n  const [isSidebarOpen,setSidebarOpen] = useState(true); // Sidebar visibility state\r\n  const [check,setCheckbox] = useState(false); // Checkbox state for bulk actions\r\n const[total,setTotal]=useState(0)\r\n const[sales,setSales]=useState(0)\r\n const[singleCheck,setSingleCheck]=useState([])\r\nconst[previousDue,setPreviousDue]=useState(0)\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n //fetch customer\r\n const fetchData = async () => {\r\n  setLoading(true)\r\n  try {\r\n    const response = await  axios.get('api/customer/all', {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Get token from localStorage\r\n      }\r\n    }) // Replace with actual API URL\r\n    \r\n    setData(response.data.data); \r\n    console.log(response.data)\r\n  } catch (err) {\r\n    setError(err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n \r\nconst filteredData = \r\ndata.filter(item => \r\n  item.customerName.toLowerCase().includes(search.toLowerCase()) || \r\n  item._id.toLowerCase().includes(search.toLowerCase())\r\n);\r\n\r\nuseEffect(()=>{\r\n  fetchData()},[])\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  // Filter data based on search input\r\n \r\n\r\n  // Pagination control handler\r\n  const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentUsers = filteredData.slice((currentPage-1)*entriesPerPage, currentPage* entriesPerPage);\r\n\r\n  const calculate=()=>{\r\n  \r\n    const totalCredit = currentUsers.reduce((sum, item) => sum + item.creditLimit, 0);\r\n      const totalPreviousDue = currentUsers.reduce((sum, item) => sum + item.previousDue, 0);\r\n     const salesreturn=currentUsers.reduce((sum,item)=>sum+(item.salesReturnDue || 0),0)\r\n      setTotal(totalCredit);\r\n      setPreviousDue(totalPreviousDue);\r\n      setSales(salesreturn)\r\n  }\r\n  \r\n  useEffect(()=>{calculate()},[data,filteredData])\r\n  const handlePageChange = (newPage) =>  {\r\n    if(newPage >=1 && newPage <=totalPages )\r\n    setCurrentPage(newPage);\r\n  }\r\n  const handleEntriesChange=(e)=>{\r\n    setEntriesPerPage(Number(e.target.value))\r\n    setCurrentPage(1)\r\n  }\r\n \r\n  const handleCopy = () => {\r\n    const data = filteredData.map(item => `${item._id}, ${item.customerName}, ${item.mobile},${item.email},${item.address?item.address.locationLink:\"No Location link\"},${item.creditLimit},${item.previousDue},${item.salesReturnDue || 0},${item.advance},${status.includes(item._id)? 'InActive' : 'Active'}}`).join('\\n');\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"Data copied to clipboard!\");\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filteredData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Users\");\r\n    XLSX.writeFile(wb, \"users.xlsx\");\r\n  };\r\n\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Customer List\", 20, 20);\r\n    const tableData = filteredData.map(item => [\r\n      item._id,\r\n      item.customerName,\r\n      item.mobile,\r\n      item.email,\r\n      item.address?item.address.locationLink:\"No Location link\",\r\n      item.creditLimit,\r\n      item.previousDue,\r\n      item.salesReturnDue || 0,\r\n      item.advance,\r\n      status.includes(item._id)? 'InActive' : 'Active'\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      head: [['Customer Id', 'Customer Name', 'Mobile', 'Email', 'Location Link', 'Credit Limit', 'Previous Due','Sales return due','Advance','Status']],\r\n      body: tableData,\r\n    });\r\n\r\n    doc.save(\"customer_list.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent = \"data:text/csv;charset=utf-8,\" + filteredData.map(user => Object.values(user).join(\",\")).join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"customers.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  \r\n  const handleDelete = async (id) => {\r\n    const conf= window.confirm(\"Do u want to delete customer\")\r\n    if(!conf){\r\n      return ;\r\n    }\r\n    setLoading(true)\r\n   \r\n    try {\r\n      const response = await axios.delete(`api/customer/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n    \r\n     alert(\"Deleted Successfully\")\r\n    \r\n    } catch (error) {\r\n      console.error( error.message);\r\n    }\r\n    finally{\r\n      setLoading(false)\r\n      fetchData()\r\n    }\r\n  };\r\n\r\n  const handleAction=(e,id)=>{\r\n    const value=e.target.value\r\n    if(value===\"edit\") Navigate(`/customer/add?id=${id}`)\r\n    if(value===\"delete\") handleDelete(id)\r\n     if(value===\"discount\") Navigate(`/create?customerid=${id}`) \r\n  }\r\n  const single=(id)=>{\r\n   setSingleCheck((prev)=>(prev.includes(id)?prev.filter((item) => item!=id):[...prev,id]))\r\n  }\r\n  if(loading) return <LoadingScreen />\r\n  if(error) return <h1>Something Went Wrong...</h1>\r\n  return (\r\n    <div className='flex flex-col overflow-x-hidden'>\r\n      {/* Top navigation bar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      \r\n      <div className='flex w-screen overflow-x-hidden'>\r\n        {/* Sidebar component */}\r\n          <div>\r\n            \r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n          </div>\r\n        {/* Main content container */}\r\n        {/* <div className='w-full h-screen ml-2 b-gray-300'> */}\r\n        <div className={`  flex flex-col  transition-all duration-300  p-2 w-full overflow-x-hidden `}>\r\n          {/* Page header and breadcrumbs */}\r\n          <div className='flex flex-col items-start justify-between py-2 md:items-end md:flex-row '>\r\n            <div className='flex items-end gap-2 pl-2 '> \r\n              <span className='text-3xl '>Customers List</span>\r\n              <span className='text-sm text-gray-700'>View /Search Customers</span>               \r\n            </div>  \r\n            <div className='flex gap-2 pl-2 pr-2 mb-2 text-sm font-semibold text-black bg-gray-500 bg-opacity-50 rounded-md md:text-gray-500 md:justify-end md:bg-transparent'>\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\" ><FaTachometerAlt />Home </NavLink>\r\n              <span>&gt;</span>\r\n              <NavLink to=\"/customer/import\" className=\"text-gray-700 no-underline\">Import Customers</NavLink>\r\n              <span>&gt;</span>\r\n              <NavLink to=\"/customer/view\" className=\"text-gray-700 no-underline \">Customers</NavLink>                   \r\n            </div>\r\n          </div>\r\n\r\n          {/* Main table container */}\r\n          <div className='w-full mx-auto bg-white border-t-4 border-collapse rounded-lg shadow-md border-opacity-55 border-t-blue-600'>\r\n            {/* Table header with bulk action controls */}\r\n            <div className='flex flex-col items-center justify-start px-3 py-2 sm:justify-between sm:flex-row'>\r\n              <div className='flex items-center'>\r\n                <Input type=\"checkbox\" />\r\n                View Account Receivable Customers\r\n              </div>\r\n              {/* Create new customer button */}\r\n              <button className='flex-shrink-0 px-4 py-2 font-bold text-center text-white bg-blue-600 rounded cursor-pointer hover:bg-blue-700' onClick={()=>Navigate(\"/customer/new\")}>\r\n                <span className='text-xl'>+</span>Create Customer\r\n              </button>\r\n            </div>\r\n\r\n            {/* Table controls and content */}\r\n            <div className=''>\r\n              {/* Entries selector and table controls */}\r\n              <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 md:flex-row md:space-y-0 md:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2 md:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2 px-2'>\r\n                <button onClick={handleCopy} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm md:w-auto\" onChange={(e) => setSearch(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n              {/* Main table content */}\r\n              <div className='w-full overflow-x-auto'>\r\n                <table className='w-full border-separate'>\r\n                  {/* Table column headers */}\r\n                  <thead className='text-sm'>\r\n                    <tr className=\"bg-gray-200\">\r\n                      <th className=\"px-4 py-2 text-left\">\r\n                        <Input type=\"checkbox\" id=\"table_head\" checked={check} onChange={()=>setCheckbox(!check)} />\r\n                      </th>\r\n                      <th className=\"px-4 py-2 text-left\">CUSTOMER ID</th>\r\n                      <th className=\"px-4 py-2 text-left\">CUSTOMER Name</th>\r\n                      <th className=\"px-4 py-2\">Mobile</th>\r\n                      <th className=\"px-4 py-2 text-left\">Email</th>\r\n                      {/* Responsive hidden columns */}\r\n                      <th className=\"px-4 py-2 text-left \">Location</th>\r\n                      <th className=\"px-4 py-2 text-left \">Type</th>\r\n                      {/* <th className=\"hidden px-4 py-2 text-left lg:table-cell\">Advance</th> */}\r\n                      <th className=\"px-4 py-2 text-left \">Status</th>\r\n                      <th className=\"px-4 py-2 text-left \">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  {/* Table body with customer data */}\r\n                  <tbody className='border-gray-100 border-1'>\r\n                    {filteredData.length <=0 &&(\r\n                      <tr>\r\n                         <td className='px-4 py-2 text-center border-gray-100 border-1' colSpan='15'>No Data Available</td>\r\n                      </tr>\r\n                    )}\r\n                    {filteredData.slice((currentPage - 1)* entriesPerPage, currentPage * entriesPerPage).map((item, index) => (\r\n                      <tr key={index}>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>\r\n                          <Input type=\"checkbox\"  id=\"table_body\" checked={check || singleCheck.includes(item._id)} onChange={()=>single(item._id)}/>\r\n                        </td>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>{item._id}</td>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>{item.customerName}</td>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>{item.mobile}</td>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>{item.email}</td>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>{item.locationLink}</td>\r\n                        <td className='px-4 py-2 border-gray-100 border-1'>{item.type}</td>\r\n                        {/* Responsive hidden columns */}\r\n\r\n                        {/* <td className='hidden px-4 py-2 border-gray-100 border-1 lg:table-cell'>{item.advance}</td> */}\r\n                        <td className='px-4 py-2 border-gray-100 border-1'  onClick={() =>\r\n                                                     setStatus((prev) =>\r\n                                                    prev.includes(item._id)\r\n                                                    ? prev.filter((id) => id !== item._id) // Remove if already present\r\n                                                 : [...prev, item._id] // Add if not present\r\n                                                   )\r\n                                                      }>\r\n                        {status.includes(item._id) ? (\r\n                                                                <span className=\"p-1 text-white bg-red-700 rounded-md\">Inactive</span>\r\n                                                                  ) : (\r\n                                                        <span className=\"p-1 text-white bg-green-400 rounded-md\">Active</span>\r\n                                                        )}\r\n                        </td>\r\n                        {/* Action dropdown menu */}\r\n                        <td className='py-2 border-gray-100 border-1'>\r\n                          <select className='py-1 text-sm border rounded-sm ' onClick={(e)=>handleAction(e,item._id)}>\r\n                            <option value=\"\" selected={true} disabled={true}>Actions</option>\r\n                            <option value=\"discount\"> Generate Discount Coupon</option>\r\n                            <option value=\"edit\">Edit</option>\r\n                            <option value=\"view\">View Payment</option>\r\n                            <option value=\"delete\">Delete</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                    {/* Table footer with totals */}\r\n\r\n                   \r\n                  </tbody>\r\n                </table>\r\n           </div>\r\n           <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${(currentPage === totalPages || totalPages===0) \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages || totalPages===0}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n        \r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","Input","_ref","id","type","label_class","label","placeholder","div_class","props","ID","useId","htmlFor","Button","text","NewCustomerlist","Navigate","useNavigate","data","setData","status","setStatus","loading","setLoading","error","setError","currentPage","setCurrentPage","entriesPerPage","setEntriesPerPage","search","setSearch","check","setCheckbox","total","setTotal","sales","setSales","singleCheck","setSingleCheck","previousDue","setPreviousDue","useEffect","window","innerWidth","fetchData","async","response","axios","get","headers","Authorization","localStorage","getItem","console","log","err","message","filteredData","filter","item","customerName","toLowerCase","includes","_id","totalPages","Math","ceil","length","currentUsers","slice","calculate","totalCredit","reduce","sum","creditLimit","totalPreviousDue","salesreturn","salesReturnDue","handlePageChange","newPage","handleAction","e","value","target","confirm","delete","alert","handleDelete","NavLink","to","FaTachometerAlt","onClick","onChange","Number","handleCopy","map","mobile","email","address","locationLink","advance","join","navigator","clipboard","writeText","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","tableData","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","user","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","checked","colSpan","index","single","prev","selected","disabled","min","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}