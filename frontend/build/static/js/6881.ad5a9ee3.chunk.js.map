{"version":3,"file":"static/js/6881.ad5a9ee3.chunk.js","mappings":"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","sources":["components/Places/StateList.jsx"],"sourcesContent":["// src/components/States/StateList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Navigate, useNavigate, NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport axios from \"axios\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default function StateList() {\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [states, setStates] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entries, setEntries] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // collapse sidebar on small\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // fetch states\r\n  const fetchStates = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\r\n        \"api/states\",\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setStates(res.data.data || []);\r\n    } catch (err) {\r\n      console.error(\"Error fetching states:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStates();\r\n  }, []);\r\n\r\n  // admin guard\r\n  const role = localStorage.getItem(\"role\");\r\n  if (role !== \"admin\") {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n  // 1️⃣ Add this function alongside your other handlers:\r\nconst toggleStatus = async (id, currentStatus) => {\r\n  const newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    // use PUT to hit your existing update route\r\n    await axios.put(\r\n      `api/states/${id}`,\r\n      { status: newStatus },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    // optimistically update UI\r\n    setStates((prev) =>\r\n      prev.map((st) =>\r\n        st._id === id ? { ...st, status: newStatus } : st\r\n      )\r\n    );\r\n  } catch (err) {\r\n    console.error(\"Error toggling status:\", err.response || err);\r\n    alert(\"Could not change status\");\r\n  }\r\n};\r\n\r\n\r\n  // filter and paginate\r\n  const filtered = states.filter((st) =>\r\n    st.stateName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const last = currentPage * entries;\r\n  const first = last - entries;\r\n  const currentItems = filtered.slice(first, last);\r\n  const totalPages = Math.ceil(filtered.length / entries);\r\n  const paginate = (page) => {\r\n    if (page >= 1 && page <= totalPages) setCurrentPage(page);\r\n  };\r\n\r\n  // export handlers\r\n  const handleCopy = () => {\r\n    const text = filtered\r\n      .map((st) => `${st.stateName},${st.country.countryName},${st.status}`)\r\n      .join(\"\\n\");\r\n    navigator.clipboard.writeText(text);\r\n    alert(\"Copied to clipboard\");\r\n  };\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filtered.map(st => ({\r\n      \"State Name\": st.stateName,\r\n      \"Country\": st.country.countryName,\r\n      \"Status\": st.status\r\n    })));\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"States\");\r\n    XLSX.writeFile(wb, \"states.xlsx\");\r\n  };\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"States List\", 20, 20);\r\n    autoTable(doc, {\r\n      head: [[\"State Name\", \"Country\", \"Status\"]],\r\n      body: filtered.map((st) => [st.stateName, st.country.countryName, st.status]),\r\n    });\r\n    doc.save(\"states.pdf\");\r\n  };\r\n  const handlePrint = () => window.print();\r\n  const handleCsvDownload = () => {\r\n    const csv = \"data:text/csv;charset=utf-8,\" +\r\n      filtered.map(st => `${st.stateName},${st.country.countryName},${st.status}`).join(\"\\n\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = encodeURI(csv);\r\n    link.download = \"states.csv\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Delete this state?\")) return;\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.delete(\r\n        `api/states/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      alert(\"State deleted\");\r\n      fetchStates();\r\n    } catch (err) {\r\n      console.error(\"Error deleting state:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className=\"overflow-x-auto p-4 w-full transition-all duration-300\">\r\n          {/* header & breadcrumbs */}\r\n          <header className=\"flex justify-between p-4 mb-2 bg-gray-100 rounded shadow\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <h1 className=\"text-lg font-semibold\">State List</h1>\r\n            </div>\r\n            <nav className=\"flex items-center text-xs text-gray-500\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-1\" /> Home\r\n              </NavLink>\r\n              <BiChevronRight className=\"mx-1\" />\r\n              <span>State List</span>\r\n            </nav>\r\n          </header>\r\n\r\n          <div className=\"p-4 bg-white border-t-4 border-cyan-500 rounded shadow\">\r\n            <div className=\"flex justify-between mb-4\">\r\n              <h2 className=\"text-lg font-semibold\">States</h2>\r\n              <button\r\n                onClick={() => navigate(\"/add-state\")}\r\n                className=\"px-4 py-2 bg-cyan-500 text-white rounded\"\r\n              >\r\n                + New State\r\n              </button>\r\n            </div>\r\n\r\n            {/* controls */}\r\n            <div className=\"flex flex-wrap justify-between mb-4 gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                <span>Show</span>\r\n                <select\r\n                  className=\"p-1 border rounded\"\r\n                  value={entries}\r\n                  onChange={(e) => { setEntries(+e.target.value); setCurrentPage(1); }}\r\n                >\r\n                  {[10,20,50].map(n => <option key={n}>{n}</option>)}\r\n                </select>\r\n                <span>entries</span>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                <button onClick={handleCopy} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">PDF</button>\r\n                <button onClick={handlePrint} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">CSV</button>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"p-1 border rounded\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* table */}\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white border-collapse rounded shadow\">\r\n                <thead className=\"bg-gray-200\">\r\n                  <tr>\r\n                    <th className=\"px-4 py-2 border\">State Name</th>\r\n                    <th className=\"px-4 py-2 border\">Country</th>\r\n                    <th className=\"px-4 py-2 border\">Status</th>\r\n                    <th className=\"px-4 py-2 border\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentItems.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"4\" className=\"py-4 text-center text-gray-500\">No records found</td>\r\n                    </tr>\r\n                  ) : (\r\n                    currentItems.map((state) => (\r\n                      <tr key={state._id} className=\"border-b\">\r\n                        <td className=\"px-4 py-2\">{state.stateName}</td>\r\n                        <td className=\"px-4 py-2\">\r\n                          {state.country.countryName}\r\n                        </td>\r\n                        {/* ← 2. replace span with button */}\r\n                        <td className=\"px-4 py-2\">\r\n                          <button\r\n                            onClick={() =>\r\n                              toggleStatus(state._id, state.status)\r\n                            }\r\n                            className={`px-2 py-1 rounded ${\r\n                              state.status === \"active\"\r\n                                ? \"bg-green-500 text-white\"\r\n                                : \"bg-red-500 text-white\"\r\n                            }`}\r\n                          >\r\n                            {state.status}\r\n                          </button>\r\n                        </td>\r\n                        <td className=\"px-4 py-2 border\">\r\n                          <button\r\n                            onClick={() => navigate(`/edit-state/${state._id}`)}\r\n                            className=\"px-2 py-1 mr-2 bg-cyan-600 text-white rounded\"\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(state._id)}\r\n                            className=\"px-2 py-1 bg-red-600 text-white rounded\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* pagination */}\r\n            <div className=\"flex justify-between items-center mt-4\">\r\n              <span>\r\n                Showing {first + 1} to {Math.min(last, filtered.length)} of {filtered.length} entries\r\n              </span>\r\n              <div className=\"space-x-2\">\r\n                <button\r\n                  onClick={() => paginate(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-2 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n                >Previous</button>\r\n                <button\r\n                  onClick={() => paginate(currentPage + 1)}\r\n                  disabled={last >= filtered.length}\r\n                  className=\"px-2 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n                >Next</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["StateList","navigate","useNavigate","isSidebarOpen","setSidebarOpen","useState","states","setStates","searchTerm","setSearchTerm","entries","setEntries","currentPage","setCurrentPage","useEffect","window","innerWidth","fetchStates","async","token","localStorage","getItem","res","axios","get","headers","Authorization","data","err","console","error","_jsx","Navigate","to","replace","filtered","filter","st","stateName","toLowerCase","includes","last","first","currentItems","slice","totalPages","Math","ceil","length","paginate","page","_jsxs","className","children","Navbar","Sidebar","NavLink","FaTachometerAlt","BiChevronRight","onClick","value","onChange","e","target","map","n","handleCopy","text","country","countryName","status","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csv","link","document","createElement","href","encodeURI","download","appendChild","click","removeChild","type","placeholder","colSpan","state","id","currentStatus","newStatus","put","prev","_id","response","toggleStatus","confirm","delete","handleDelete","min","disabled"],"sourceRoot":""}