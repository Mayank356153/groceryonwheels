{"version":3,"file":"static/js/8641.3ee814d1.chunk.js","mappings":"sKAGe,SAASA,IACpB,MAAMC,EAAcC,IAAgBC,EAAAA,EAAAA,WAAS,GAC7C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAEvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,OAI1BM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mFAAkFC,UACjGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uFACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2CAA0CC,SAAC,yBAOlE,C,2DCvBF,MAoHA,EApHqBI,IAAwB,IAAvB,QAAEC,EAAO,KAAEC,GAAMF,EAOrC,OACEH,EAAAA,EAAAA,KAAA,OACEM,MAAO,CACLC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,qBACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,KACRjB,UAEFF,EAAAA,EAAAA,MAAA,OACES,MAAO,CACLM,gBAAiB,OACjBK,QAAS,OACTC,aAAc,OACdC,UAAW,MACXT,MAAO,MACPU,UAAW,OACXC,UAAW,6BACXd,SAAU,YACVR,SAAA,EAGFC,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAAMlB,GAAQ,GACvBE,MAAO,CACLC,SAAU,WACVC,IAAK,OACLe,MAAO,OACPC,WAAY,OACZC,OAAQ,OACRC,SAAU,OACVC,WAAY,OACZC,MAAO,OACPC,OAAQ,WAEVC,MAAM,QAAO/B,SACd,WAIAM,EAAK0B,OAAS,EACV1B,EAAK2B,KAAI,CAACC,EAAIC,KACvBrC,EAAAA,EAAAA,MAAA,OAAqBS,MAAO,CAAE6B,aAAc,QAASpC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MACEM,MAAO,CACL8B,UAAW,SACXD,aAAc,OACdP,MAAO,QACP7B,SAEDkC,EAAGI,KAAKC,UAAY,iBAGtBL,EAAGM,QAAUN,EAAGM,OAAOR,OAAS,GAC/B/B,EAAAA,EAAAA,KAAA,OACEM,MAAO,CACLO,QAAS,OACT2B,oBAAqB,wCACrBC,IAAK,OACLC,aAAc,UACd3C,SAEDkC,EAAGM,OAAOP,KAAI,CAACW,EAAQC,KACtB5C,EAAAA,EAAAA,KAAA,OAEEM,MAAO,CACLC,SAAU,WACVW,aAAc,OACd2B,SAAU,SACVxB,UAAW,4BACXX,MAAO,OACPoC,SAAU,SACV/C,UAEFC,EAAAA,EAAAA,KAAA,OACE+C,IAAK,WAAWJ,IAChBK,IAAK,WAAWJ,EAAa,IAC7BtC,MAAO,CACLI,MAAO,OACPC,OAAQ,QACRsC,UAAW,QACXpC,QAAS,YAjBR+B,QAyBX5C,EAAAA,EAAAA,KAAA,KAAGM,MAAO,CAAE8B,UAAW,SAAUR,MAAO,QAAS7B,SAAC,uCA/C5CmC,MAoDZlC,EAAAA,EAAAA,KAAA,KAAGM,MAAO,CAAE8B,UAAW,SAAUR,MAAO,QAAS7B,SAAC,2BAI1C,C,kBClHV,SAASmD,EAAQC,GAGf,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBC,QAAUD,EAAEG,cAAgBF,QAAUD,IAAMC,OAAOG,UAAY,gBAAkBJ,CACpH,EAAGD,EAAQC,EACb,C,kLCGA,MAgUA,EAhUoBK,KAClB,MAAO9D,EAAeC,IAAkBC,EAAAA,EAAAA,WAAS,IAC1C6D,EAAYC,IAAiB9D,EAAAA,EAAAA,UAAS,KACtC+D,EAAgBC,IAAqBhE,EAAAA,EAAAA,UAAS,KAC9CiE,EAAaC,IAAkBlE,EAAAA,EAAAA,UAAS,IACxCmE,EAASC,IAAcpE,EAAAA,EAAAA,WAAS,GACjCqE,GAAWC,EAAAA,EAAAA,OACXC,EAAK/D,IAASR,EAAAA,EAAAA,WAAS,IACvBS,EAAK+D,IAASxE,EAAAA,EAAAA,UAAS,KACvByE,EAAQC,IAAY1E,EAAAA,EAAAA,UAAS,KAC7B2E,EAAaC,IAAiB5E,EAAAA,EAAAA,UAAS,QACvC6E,EAAWC,IAAe9E,EAAAA,EAAAA,UAAS,CACvC,CACI+E,MAAM,MACNC,MAAM,OAER,CACED,MAAO,iBACPC,MAAM,iBAER,CACED,MAAM,gBACNC,MAAM,gBAEP,CACCD,MAAM,kBACNC,MAAM,mBAEP,CACCD,MAAM,cACNC,MAAM,iBAILC,EAAeC,IAAoBlF,EAAAA,EAAAA,UAAS,OACpDmF,EAAAA,EAAAA,YAAU,KACJC,OAAOC,WAAa,KACrBtF,GAAe,EACjB,GACA,CAACqF,OAAOC,aAGV,MAIMC,EAAYC,UAChB,IACEnB,GAAW,GACX,MAAMoB,QAAiBC,EAAAA,EAAMC,IAAI,iBAAkB,CACjDC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAGnDC,QAAQC,IAAIR,EAAS/E,MACrBiE,EAAWc,EAAS/E,KAAKA,KAC1B,CAAE,MAAOwF,GACPF,QAAQG,MAAM,mCAAoCD,EAAIE,QACxD,CAAC,QACC/B,GAAW,EACb,IAGFe,EAAAA,EAAAA,YAAU,KACRG,GAAW,GACV,IAqBH,IAAIc,EAAe3B,EAAQ4B,QAAO5D,GAChCA,EAAK6D,IAAIC,cAAcC,SAAS3C,EAAW0C,gBAC3C9D,EAAKoC,WAAW0B,gBAAgB5B,EAAa4B,eAAgC,QAAf5B,GAAuC,KAAfA,KAGxFQ,EAAAA,EAAAA,YAAU,KACPiB,EAAe3B,EAAQ4B,QAAO5D,GAC3BA,EAAK6D,IAAIC,cAAcC,SAAS3C,EAAW0C,gBAC3C9D,EAAKoC,WAAW0B,gBAAgB5B,EAAa4B,eAC9C,GACH,CAAC5B,IAEH,MAAM8B,EAAkBxC,EAAcF,EAChC2C,EAAmBD,EAAkB1C,EACrC4C,EAAaC,KAAKC,KAAKT,EAAajE,OAAS4B,GAC7C+C,EAAeV,EAAaW,MAAML,EAAkBD,GAEpDO,EAAoBC,IACpBA,GAAW,GAAKA,GAAWN,GAC7BzC,EAAe+C,EAAQ,EAU3B,OAAI9C,GAAgB/D,EAAAA,EAAAA,KAACP,EAAAA,EAAa,KAGhCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UAEvBC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,OAExBG,EAAAA,EAAAA,MAAA,OAAKC,UAAW,gEAAgEC,SAAA,EAC9EF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,iFAAgFC,SAAA,EAChGC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAA8BC,SAAC,kBAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDC,SAAA,EACvEF,EAAAA,EAAAA,MAACiH,EAAAA,GAAO,CAACC,GAAG,aAAajH,UAAU,mEAAkEC,SAAA,EACtFC,EAAAA,EAAAA,KAACgH,EAAAA,IAAe,CAAClH,UAAU,2CAA2C,YAExEE,EAAAA,EAAAA,KAAC8G,EAAAA,GAAO,CAACC,GAAG,iBAAiBjH,UAAU,mEAAkEC,SAAC,yBAKzHoE,IAAQnE,EAAAA,EAAAA,KAACiH,EAAAA,EAAc,CAAC7G,QAASA,EAASC,KAAMA,KAEjDR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DC,SAAA,EAC1EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAC,kBACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,0EAA0EwB,QAASA,IAAM2C,EAAS,gBAAgBlE,SAAC,wBAMvIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6FAA4FC,SAAA,EACvGC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAOkH,QAAQ,GAAEnH,SAAC,iBACtBC,EAAAA,EAAAA,KAACmH,EAAAA,GAAM,CAACrH,UAAU,SAASsH,QAAS3C,EAAY4C,SAAWC,GAAS9C,EAAgB8C,EAAO1C,eAI3F/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC/DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,UAC1BF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,gDAAgD8E,MAAOjB,EAAgB0D,SAnD1EE,IAC3B3D,EAAkB4D,OAAOD,EAAEE,OAAO7C,QAClCd,EAAe,EAAE,EAiDkH/D,SAAA,EACrHC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,QACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,QACRC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAEVC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,gBAG5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,UAECF,UAAU,2CAA0CC,SAAC,UACtDC,EAAAA,EAAAA,KAAA,UAECF,UAAU,2CAA0CC,SAAC,WACtDC,EAAAA,EAAAA,KAAA,UAEEF,UAAU,2CAA0CC,SAAC,SACvDC,EAAAA,EAAAA,KAAA,UAECF,UAAU,2CAA0CC,SAAC,WACtDC,EAAAA,EAAAA,KAAA,UAECF,UAAU,2CAA0CC,SAAC,YAEtDC,EAAAA,EAAAA,KAAA,SAAO0H,KAAK,OAAOC,YAAY,SAAS7H,UAAU,6CAA6CuH,SAAWE,GAAM7D,EAAc6D,EAAEE,OAAO7C,mBAU3I5E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uDAAsDC,SAAA,EACrEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,sBAAqBC,UACpCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,QACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,UACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,iBACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,UAEjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,cACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,WACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,cACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,iBAGrCC,EAAAA,EAAAA,KAAA,SAAAD,SAC2B,IAAxB2G,EAAa3E,QACZ/B,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI4H,QAAQ,IAAI9H,UAAU,yCAAwCC,SAAC,iCAGrE2G,EAAa1E,KAAK6F,IAChBhI,EAAAA,EAAAA,MAAA,MAAuBC,UAAU,WAAUC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE8H,EAAS3B,OAC3ClG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE,IAAI+H,KAAKD,EAASE,WAAWC,kBAC/DhI,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE8H,EAASpD,cAC3CzE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE8H,EAASI,MAAQ,qBAEnDjI,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE8H,EAASK,MAAMlG,KAAIC,IAAE,IAAAkG,EAAA,OACnDtI,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAc,QAAdoI,EAAOlG,EAAGI,YAAI,IAAA8F,OAAA,EAAPA,EAAS7F,SAAS,KAACtC,EAAAA,EAAAA,KAAA,WAAa,OAE1CA,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE8H,EAASK,MAAMlG,KAAIC,IAClDpC,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOkC,EAAGmG,MAAM,KAACpI,EAAAA,EAAAA,KAAA,iBAEnBA,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAE8H,EAASK,MAAMlG,KAAIC,IACnDpC,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAyB,UAAlBkC,EAAGoG,cAA0B,SAAKpG,EAAGqG,SAA4B,eAAlBrG,EAAGoG,cAA+B,IAAI,KAACrI,EAAAA,EAAAA,KAAA,iBAEnGH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA2BC,SAAA,EAC7DF,EAAAA,EAAAA,MAAA,UACEC,UAAU,6HACVwB,QAASA,KAAMiH,OAjMOC,EAiMQX,EAAS3B,SAhMvCpB,EAAiBD,IAAkB2D,EAAK,KAAOA,GADzBA,KAiMsB,EAAAzI,SAAA,CAC7C,WACQC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,cAGlC8E,IAAkBgD,EAAS3B,MAC1BrG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sGAAqGC,SAAA,EAElHF,EAAAA,EAAAA,MAAA,UACEC,UAAU,iHACVwB,QAASA,KACPlB,GAAQ,GACRgE,EAAQyD,EAASK,MAAM,EACvBnI,SAAA,EAEFC,EAAAA,EAAAA,KAACyI,EAAAA,IAAK,IAAG,kBAGX5I,EAAAA,EAAAA,MAAA,UACEC,UAAU,iHACVwB,QAASA,KACP2C,EAAS,mBAAmB4D,EAAS3B,MAAM,EAC3CnG,SAAA,EAEFC,EAAAA,EAAAA,KAACyI,EAAAA,IAAK,IAAG,WAIX5I,EAAAA,EAAAA,MAAA,UACEC,UAAU,+GACVwB,QAASA,IAtMM6D,WACnB,GAAKH,OAAO0D,QAAQ,gCAApB,CACA1E,GAAW,GACX,UACQqB,EAAAA,EAAMsD,OAAO,cAAcH,IAAM,CACrCjD,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAGlDkD,MAAM,uBACR,CAAE,MAAO9C,GACPH,QAAQG,MAAM,kCAAmCA,EAAMC,QACzD,CAAC,QACCb,IACAlB,GAAW,EACb,CAd2D,CAc3D,EAuLmB6E,CAAahB,EAAS3B,KAAKnG,SAAA,EAE1CC,EAAAA,EAAAA,KAAC8I,EAAAA,IAAO,IAAG,oBAlDYjB,EAAS3B,eA+D5BrG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qFAAoFC,SAAA,EACjGF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,wBAAoBF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,WAAS4D,GAAkBE,EAAc,GAAK,EAAE,OAAK2C,KAAKuC,IAAIpF,EAAiBE,EAAamC,EAAajE,QAAQ,OAAKiE,EAAajE,OAAO,cAAe,qBACzLlC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC/DF,EAAAA,EAAAA,MAAA,UACZC,UAAW,mHACS,IAAhB+D,EACE,+CACA,2DACNvC,QAASA,IAAMsF,EAAiB/C,EAAc,GAC9CmF,SAA0B,IAAhBnF,EAAkB9D,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUmJ,KAAK,OAAOC,OAAO,eAAeC,YAAa,EAAGC,QAAQ,YAAWrJ,UAC5FC,EAAAA,EAAAA,KAAA,QAAMqJ,cAAc,QAAQC,eAAe,QAAQC,EAAE,sBACjD,eAIR1J,EAAAA,EAAAA,MAAA,UACEC,UAAW,mHACP+D,IAAgB0C,EACd,+CACA,2DACNjF,QAASA,IAAMsF,EAAiB/C,EAAc,GAC9CmF,SAAUnF,IAAgB0C,EAAWxG,SAAA,CACtC,QAECC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUmJ,KAAK,OAAOC,OAAO,eAAeC,YAAa,EAAGC,QAAQ,YAAWrJ,UAC5FC,EAAAA,EAAAA,KAAA,QAAMqJ,cAAc,QAAQC,eAAe,QAAQC,EAAE,uCAS/C,C","sources":["Loading.jsx","components/Banners/ItemsImageView.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","components/Banners/BannersList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","\r\nimport React from 'react';\r\n\r\nconst ImagePreview = ({ setView, data }) => {\r\n \r\n\r\n  // Remove image from formData\r\n \r\n  \r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: '#fff',\r\n          padding: '30px',\r\n          borderRadius: '12px',\r\n          maxHeight: '80%',\r\n          width: '80%',\r\n          overflowY: 'auto',\r\n          boxShadow: '0 4px 20px rgba(0,0,0,0.3)',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={() => setView(false)}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '26px',\r\n            fontWeight: 'bold',\r\n            color: '#444',\r\n            cursor: 'pointer',\r\n          }}\r\n          title=\"Close\"\r\n        >\r\n          ✖\r\n        </button>\r\n  \r\n        {data.length > 0 ? (\r\n             data.map((it, itemIndex) => (\r\n    <div key={itemIndex} style={{ marginBottom: '40px' }}>\r\n      <h3\r\n        style={{\r\n          textAlign: 'center',\r\n          marginBottom: '20px',\r\n          color: '#333',\r\n        }}\r\n      >\r\n        {it.item.itemName || 'Unnamed Item'}\r\n      </h3>\r\n\r\n      {it.images && it.images.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\r\n            gap: '15px',\r\n            justifyItems: 'center',\r\n          }}\r\n        >\r\n          {it.images.map((imgName,imageIndex) => (\r\n            <div\r\n              key={imageIndex}\r\n              style={{\r\n                position: 'relative',\r\n                borderRadius: '10px',\r\n                overflow: 'hidden',\r\n                boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\r\n                width: '100%',\r\n                maxWidth: '150px',\r\n              }}\r\n            >\r\n              <img\r\n                src={`uploads/${imgName}`}\r\n                alt={`Preview ${imageIndex + 1}`}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '150px',\r\n                  objectFit: 'cover',\r\n                  display: 'block',\r\n                }}\r\n              />\r\n             \r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p style={{ textAlign: 'center', color: '#666' }}>No images selected for this item</p>\r\n      )}\r\n    </div>\r\n  ))\r\n) : (\r\n  <p style={{ textAlign: 'center', color: '#666' }}>No items available</p>\r\n)}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default ImagePreview;\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import React, { useState, useEffect } from 'react';\r\nimport { FaTachometerAlt ,FaEye} from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport Select from 'react-select'\r\nimport ItemsImageView from './ItemsImageView.jsx';\r\nconst BannersList = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const[view,setView]=useState(false)\r\n  const[data,setData]=useState([])\r\n  const[banners,setBanners]=useState([])\r\n  const[selectedType,setSelectedType]=useState(\"All\")\r\n  const[bannerType,setBannerType]=useState([\r\n    {\r\n        label:\"All\",\r\n        value:\"All\"\r\n    },\r\n      {\r\n        label: \"Single Product\",\r\n        value:\"SingleProduct\"\r\n      },\r\n      {\r\n        label:\"Multi Product\",\r\n        value:\"MultiProduct\"\r\n       },\r\n       {\r\n        label:\"Top Rated Items\",\r\n        value:\"TopRatedProduct\"\r\n       },\r\n       {\r\n        label:\"Most Buying\",\r\n        value:\"MostBuying\"\r\n       }\r\n    ])\r\n    \r\n  const [dropdownIndex, setDropdownIndex] = useState(null);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[window.innerWidth])\r\n\r\n  \r\n  const toggleDropdown = (id) => {\r\n    setDropdownIndex(dropdownIndex === id ? null : id);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('api/banner/all', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n     console.log(response.data)\r\n     setBanners(response.data.data)\r\n    } catch (err) {\r\n      console.error(\"Error fetching advance payments:\", err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Do you want to delete this ?\")) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`api/banner/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      alert(\"Deleted Successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting advance payment:\", error.message);\r\n    } finally {\r\n      fetchData();\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filter data based on searchTerm\r\n  let filteredData = banners.filter(item => \r\n    item._id.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n    item.bannerType.toLowerCase()===selectedType.toLowerCase() || selectedType===\"All\" || selectedType===\"\"\r\n  );\r\n\r\n  useEffect(()=>{\r\n     filteredData = banners.filter(item => \r\n        item._id.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n        item.bannerType.toLowerCase()===selectedType.toLowerCase()\r\n      );\r\n  },[selectedType])\r\n\r\n  const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentUsers = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages)\r\n      setCurrentPage(newPage);\r\n  };\r\n\r\n  const handleEntriesChange = (e) => {\r\n    setEntriesPerPage(Number(e.target.value));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Export functions (Copy, Excel, PDF, Print, CSV) remain unchanged...\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"box-border flex\">\r\n        <div className=\"w-auto\">\r\n          \r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n          <header className=\"flex flex-col items-start justify-between p-0 mb-6 md:flex-row md:items-center\">\r\n            <h2 className=\"text-lg font-bold md:text-xl\">Banners List</h2>\r\n            <nav className=\"flex flex-wrap gap-2 mt-2 text-sm text-gray-600 md:mt-0\">\r\n             <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                            <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                          </NavLink>     \r\n                          <NavLink to=\"/customer.view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Banners List\r\n                          </NavLink>    \r\n            </nav>\r\n          </header>\r\n          {view && <ItemsImageView setView={setView} data={data} />}\r\n          {/* Filters Section */}\r\n          <div className=\"p-4 mb-4 bg-white border-t-4 rounded shadow border-cyan-500\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold\">Banners List</h3>\r\n              <button className=\"px-4 py-1 mt-2 text-white rounded bg-cyan-400 hover:bg-cyan-600 md:mt-0\" onClick={() => navigate('/banners/add')}>\r\n                + Create Banner\r\n              </button>\r\n            </div>\r\n\r\n            \r\n            <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 md:flex-row md:space-y-0 md:items-center\">\r\n                <div className='w-full md:w-1/2'>    \r\n                 <div className='w-full'>\r\n                    <label htmlFor=\"\">Banner Type</label>\r\n                <Select className='w-full' options={bannerType} onChange={(option)=>setSelectedType(option.value)}/>\r\n                 </div>\r\n                </div>\r\n\r\n                <div className='flex flex-col items-baseline gap-2 md:flex-row'>\r\n                <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col gap-2 md:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2'>\r\n                <button \r\n                // onClick={handleCopy}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button \r\n                // onClick={handleExcelDownload}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button\r\n                //  onClick={handlePdfDownload}\r\n                  className=\"px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button \r\n                // onClick={handlePrint}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button \r\n                // onClick={handleCsvDownload}\r\n                 className=\"px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 \" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n                </div>\r\n             \r\n\r\n              \r\n            </div>\r\n            \r\n\r\n            {/* Advance Payments Table */}\r\n            <div className=\"w-full overflow-x-auto\">\r\n              <table className=\"w-full bg-white border-collapse rounded-md shadow-lg\">\r\n                <thead className=\"text-sm bg-gray-100\">\r\n                  <tr>\r\n                    <th className=\"px-4 py-2 border\">ID</th>\r\n                    <th className=\"px-4 py-2 border\">Date</th>\r\n                    <th className=\"px-4 py-2 border\">Banner Type</th>\r\n                    <th className=\"px-4 py-2 border\">Path</th>\r\n                    \r\n                    <th className=\"px-4 py-2 border\">ItemName</th>\r\n                    <th className=\"px-4 py-2 border\">Price</th>\r\n                    <th className=\"px-4 py-2 border\">Discount</th>\r\n                    <th className=\"px-4 py-2 border\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentUsers.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"py-4 text-sm text-center text-gray-500\">No data available in table</td>\r\n                    </tr>\r\n                  ) : (\r\n                    currentUsers.map((transfer) => (\r\n                      <tr key={transfer._id} className=\"border-t\">\r\n                        <td className=\"px-4 py-2 border\">{transfer._id}</td>\r\n                        <td className=\"px-4 py-2 border\">{new Date(transfer.createdAt).toDateString()}</td>\r\n                        <td className=\"px-4 py-2 border\">{transfer.bannerType}</td>\r\n                        <td className=\"px-4 py-2 border\">{transfer.path || \"No Path Defined\"}</td>\r\n                        \r\n                        <td className=\"px-4 py-2 border\">{transfer.items.map(it =>(\r\n                            <span>{it.item?.itemName} <br /></span> \r\n                        ))}</td>\r\n                         <td className=\"px-4 py-2 border\">{transfer.items.map(it =>(\r\n                            <span>{it.price} <br /></span> \r\n                        ))}</td>\r\n                          <td className=\"px-4 py-2 border\">{transfer.items.map(it =>(\r\n                            <span>{it.discountType===\"Fixed\" && \"₹\"}{it.discount}{it.discountType===\"Percentage\" && \"%\"} <br /></span> \r\n                        ))}</td>\r\n                      <td className=\"relative px-4 py-2 border\">\r\n  <button\r\n    className=\"flex items-center gap-1 px-4 py-1.5 text-sm font-medium text-white bg-cyan-600 rounded hover:bg-cyan-700 transition-colors\"\r\n    onClick={() => toggleDropdown(transfer._id)}\r\n  >\r\n    Action <span className=\"text-xs\">▼</span>\r\n  </button>\r\n\r\n  {dropdownIndex === transfer._id && (\r\n    <div className=\"absolute right-0 z-20 mt-2 bg-white border border-gray-200 shadow-lg w-44 rounded-xl animate-fadeIn\">\r\n      \r\n      <button\r\n        className=\"flex items-center w-full gap-2 px-4 py-2 text-sm text-blue-600 transition-colors rounded-t-xl hover:bg-blue-50\"\r\n        onClick={() => {\r\n          setView(true);\r\n          setData(transfer.items);\r\n        }}\r\n      >\r\n        <FaEye />\r\n        View Images\r\n      </button>\r\n      <button\r\n        className=\"flex items-center w-full gap-2 px-4 py-2 text-sm text-blue-600 transition-colors rounded-t-xl hover:bg-blue-50\"\r\n        onClick={() => {\r\n          navigate(`/banners/add?id=${transfer._id}`)\r\n        }}\r\n      >\r\n        <FaEye />\r\n        Edit\r\n      </button>\r\n\r\n      <button\r\n        className=\"flex items-center w-full gap-2 px-4 py-2 text-sm text-red-600 transition-colors rounded-b-xl hover:bg-red-50\"\r\n        onClick={() => handleDelete(transfer._id)}\r\n      >\r\n        <FaTrash />\r\n        Delete\r\n      </button>\r\n    </div>\r\n  )}\r\n</td>\r\n\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === totalPages \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannersList;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","_ref","setView","data","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","padding","borderRadius","maxHeight","overflowY","boxShadow","onClick","right","background","border","fontSize","fontWeight","color","cursor","title","length","map","it","itemIndex","marginBottom","textAlign","item","itemName","images","gridTemplateColumns","gap","justifyItems","imgName","imageIndex","overflow","maxWidth","src","alt","objectFit","_typeof","o","Symbol","iterator","constructor","prototype","BannersList","searchTerm","setSearchTerm","entriesPerPage","setEntriesPerPage","currentPage","setCurrentPage","loading","setLoading","navigate","useNavigate","view","setData","banners","setBanners","selectedType","setSelectedType","bannerType","setBannerType","label","value","dropdownIndex","setDropdownIndex","useEffect","window","innerWidth","fetchData","async","response","axios","get","headers","Authorization","localStorage","getItem","console","log","err","error","message","filteredData","filter","_id","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","totalPages","Math","ceil","currentUsers","slice","handlePageChange","newPage","NavLink","to","FaTachometerAlt","ItemsImageView","htmlFor","Select","options","onChange","option","e","Number","target","type","placeholder","colSpan","transfer","Date","createdAt","toDateString","path","items","_it$item","price","discountType","discount","toggleDropdown","id","FaEye","confirm","delete","alert","handleDelete","FaTrash","min","disabled","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}