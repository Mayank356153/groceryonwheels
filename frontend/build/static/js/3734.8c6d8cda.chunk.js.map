{"version":3,"file":"static/js/3734.8c6d8cda.chunk.js","mappings":"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","sources":["components/Accounts/CashTransactions.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BiChevronRight } from 'react-icons/bi';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport { jsPDF } from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = \"api\";\r\n\r\nconst CashTransactions = () => {\r\n  // State variables\r\n  const [startDate, setStartDate] = useState('2025-05-01'); // Default to May 1, 2025\r\n  const [endDate, setEndDate] = useState('2025-05-14'); // Default to today\r\n  const [warehouseFilter, setWarehouseFilter] = useState('');\r\n  const [accountFilter, setAccountFilter] = useState('');\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(window.innerWidth >= 768);\r\n  const [amount, setAmount] = useState(0);\r\n  const [transfers, setTransfers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [accountWarehouseMap, setAccountWarehouseMap] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const storeId = localStorage.getItem(\"storeId\") || \"\";\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n\r\n  // Responsive sidebar\r\n  useEffect(() => {\r\n    const handleResize = () => setSidebarOpen(window.innerWidth >= 768);\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Fetch warehouses and accounts\r\n  useEffect(() => {\r\n    if (!storeId) {\r\n      setError(\"No store ID found. Please log in again.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    Promise.all([\r\n      axios.get(`${API_BASE}/accounts`),\r\n      axios.get(`${API_BASE}/warehouses`)\r\n    ])\r\n      .then(([accRes, whRes]) => {\r\n        // Filter warehouses by storeId\r\n        const storeWarehouses = (whRes.data.data || []).filter(w => w.store === storeId);\r\n        setWarehouses(storeWarehouses);\r\n\r\n        // Create warehouse map\r\n        const warehouseMap = {};\r\n        storeWarehouses.forEach(w => {\r\n          warehouseMap[w._id] = w;\r\n        });\r\n\r\n        // Filter accounts based on warehouse mappings\r\n        const accountPromises = (accRes.data.data || []).map(acc =>\r\n          axios\r\n            .get(`${API_BASE}/by-cash-account/${acc._id}`)\r\n            .then(res => {\r\n              const warehouseId = res.data.warehouseId;\r\n              const warehouse = warehouseMap[warehouseId];\r\n              if (warehouse && warehouse.store === storeId) {\r\n                setAccountWarehouseMap(prev => ({\r\n                  ...prev,\r\n                  [acc._id]: {\r\n                    warehouseId,\r\n                    warehouseName: warehouse.warehouseName\r\n                  }\r\n                }));\r\n                return acc;\r\n              }\r\n              return null;\r\n            })\r\n            .catch(err => {\r\n              console.error(`Error fetching by-cash-account for account ${acc._id}:`, err.message);\r\n              return null;\r\n            })\r\n        );\r\n\r\n        Promise.all(accountPromises).then(results => {\r\n          const filteredAccounts = results.filter(acc => acc);\r\n          setAccounts(filteredAccounts);\r\n          if (filteredAccounts.length === 0) {\r\n            setError(\"No accounts found for warehouses in the current store.\");\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error fetching data:\", err);\r\n        setError(err.response?.data?.message || \"Failed to fetch accounts or warehouses.\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [storeId]);\r\n\r\n  // Fetch cash sales from API\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE}/cash-sale-details`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        params: {\r\n          start: startDate,\r\n          end: endDate,\r\n          ...(warehouseFilter && { warehouseId: warehouseFilter }),\r\n          ...(accountFilter && { accountId: accountFilter }),\r\n        },\r\n      });\r\n      setTransfers(response.data.data || []);\r\n    } catch (err) {\r\n      console.error('Error fetching cash sales:', err.message);\r\n      alert('Failed to fetch cash sales');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [startDate, endDate, warehouseFilter, accountFilter]);\r\n\r\n  // Filter data based on search term\r\n  const filteredData = transfers.filter(item => {\r\n    const search = searchTerm.toLowerCase();\r\n    return (\r\n      (item.warehouse?.name?.toLowerCase() || '').includes(search) ||\r\n      (item.account?.name?.toLowerCase() || '').includes(search) ||\r\n      (item.referenceId?.toLowerCase() || '').includes(search)\r\n    );\r\n  });\r\n\r\n  // Calculate total amount\r\n  useEffect(() => {\r\n    const total = filteredData.reduce((sum, item) => sum + (item.amount || 0), 0);\r\n    setAmount(total);\r\n  }, [filteredData]);\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentItems = filteredData.slice(\r\n    (currentPage - 1) * entriesPerPage,\r\n    currentPage * entriesPerPage\r\n  );\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  // Export functions (unchanged)\r\n  const handleCopy = () => {\r\n    const copyData = filteredData\r\n      .map(item => {\r\n        const items = item.items?.length\r\n          ? item.items.map(i => `${i.itemName || 'Unknown'} (${i.quantity || 0})`).join(', ')\r\n          : 'No items';\r\n        return `${item.date},${item.amount},${item.warehouse?.name || 'N/A'},${item.account?.name || 'N/A'},${items},${item.referenceId},${item.refModel}`;\r\n      })\r\n      .join('\\n');\r\n    navigator.clipboard.writeText(copyData);\r\n    alert('Data copied to clipboard');\r\n  };\r\n\r\n  const handleExportCSV = () => {\r\n    const csvContent =\r\n      \"data:text/csv;charset=utf-8,\" +\r\n      \"Date,Amount,Warehouse,Account,Items,Reference ID,Reference Model\\n\" +\r\n      filteredData\r\n        .map(item => {\r\n          const items = item.items?.length\r\n            ? item.items.map(i => `${i.itemName || 'Unknown'} (${i.quantity || 0})`).join('; ')\r\n            : 'No items';\r\n          return `${item.date},${item.amount},${item.warehouse?.name || 'N/A'},${item.account?.name || 'N/A'},${items},${item.referenceId},${item.refModel}`;\r\n        })\r\n        .join('\\n');\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"cash_sales.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Cash Sales List\", 14, 16);\r\n\r\n    const data = filteredData.map(item => [\r\n      item.date,\r\n      item.amount,\r\n      item.warehouse?.name || 'N/A',\r\n      item.account?.name || 'N/A',\r\n      item.items?.length\r\n        ? item.items.map(i => `${i.itemName || 'Unknown'} (${i.quantity || 0})`).join(', ')\r\n        : 'No items',\r\n      item.referenceId,\r\n      item.refModel,\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      head: [['Date', 'Amount', 'Warehouse', 'Account', 'Items', 'Reference ID', 'Reference Model']],\r\n      body: data,\r\n    });\r\n\r\n    doc.save(\"cash_sales.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const data = filteredData.map(item => ({\r\n      Date: item.date,\r\n      Amount: item.amount,\r\n      Warehouse: item.warehouse?.name || 'N/A',\r\n      Account: item.account?.name || 'N/A',\r\n      Items: item.items?.length\r\n        ? item.items.map(i => `${i.itemName || 'Unknown'} (${i.quantity || 0})`).join(', ')\r\n        : 'No items',\r\n      'Reference ID': item.referenceId,\r\n      'Reference Model': item.refModel,\r\n    }));\r\n\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"CashSales\");\r\n    XLSX.writeFile(workbook, \"cash_sales.xlsx\");\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <p className=\"text-red-500 p-4\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-grow\">\r\n        {/* Sidebar */}\r\n        <div className=\"w-auto\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"overflow-x-auto flex flex-col p-2 md:p-2 min-h-screen w-full\">\r\n          {/* Header Section */}\r\n          <header className=\"flex flex-col items-center justify-between px-2 py-2 mb-2 bg-gray-100 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Cash Sales</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Cash Sales</span>\r\n            </div>\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n              <a href=\"#\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-1 sm:mx-2\" />\r\n              <a href=\"#\" className=\"text-gray-700 no-underline hover:text-cyan-600\">Cash Sales</a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Filters Section */}\r\n          <div className=\"flex-col items-start p-4 border-t-4 rounded-lg md:flex-row md:items-center border-cyan-500\">\r\n            <div className=\"flex flex-wrap justify-start space-y-2 md:space-x-4 md:space-y-0\">\r\n              {/* Start Date Filter */}\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  className=\"w-64 p-2 border\"\r\n                />\r\n              </div>\r\n\r\n              {/* End Date Filter */}\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                  className=\"w-64 p-2 border\"\r\n                />\r\n              </div>\r\n\r\n              {/* Warehouse Filter Dropdown */}\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">Warehouse</label>\r\n                <select\r\n                  value={warehouseFilter}\r\n                  onChange={(e) => setWarehouseFilter(e.target.value)}\r\n                  className=\"w-64 p-2 border\"\r\n                >\r\n                  <option value=\"\">All Warehouses</option>\r\n                  {warehouses.map(warehouse => (\r\n                    <option key={warehouse._id} value={warehouse._id}>\r\n                      {warehouse.warehouseName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n             \r\n\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          {/* Table Controls Section */}\r\n          <div className=\"flex flex-col items-center justify-between mt-4 lg:flex-row\">\r\n            {/* Entries Per Page Dropdown */}\r\n            <div className=\"flex items-center space-x-2\">\r\n              <label className=\"text-sm\">Show</label>\r\n              <select\r\n                value={entriesPerPage}\r\n                onChange={(e) => {\r\n                  setEntriesPerPage(parseInt(e.target.value));\r\n                  setCurrentPage(1);\r\n                }}\r\n                className=\"p-2 border\"\r\n              >\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={100}>100</option>\r\n              </select>\r\n              <label className=\"text\">Entries</label>\r\n            </div>\r\n\r\n            {/* Table Actions */}\r\n            <div className=\"flex items-center space-x-0.5 mt-2 lg:mt-0 w-full\">\r\n              <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white transition bg-cyan-500 hover:bg-cyan-600\">Copy</button>\r\n              <button onClick={handleExportExcel} className=\"w-full px-3 py-2 text-sm text-white transition bg-cyan-500 hover:bg-cyan-600\">Excel</button>\r\n              <button onClick={handleExportPDF} className=\"w-full px-3 py-2 text-sm text-white transition bg-cyan-500 hover:bg-cyan-600\">PDF</button>\r\n              <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white transition bg-cyan-500 hover:bg-cyan-600\">Print</button>\r\n              <button onClick={handleExportCSV} className=\"w-full px-3 py-2 text-sm text-white transition bg-cyan-500 hover:bg-cyan-600\">CSV</button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cash Sales Table */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full mt-4 border border-collapse border-gray-300\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr className=\"text-sm md:text-base\">\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Date</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Amount</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Warehouse</th>\r\n\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Items</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Reference ID</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Reference Model</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentItems.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan=\"7\" className=\"p-4 text-center\">No data available</td>\r\n                  </tr>\r\n                ) : (\r\n                  currentItems.map((item) => (\r\n                    <tr key={item.referenceId} className=\"text-sm md:text-base\">\r\n                      <td className=\"p-2 border border-gray-300\">{item.date}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{item.amount}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{item.warehouse?.name || 'N/A'}</td>\r\n                      \r\n                      <td className=\"p-2 border border-gray-300\">\r\n                        {item.items?.length\r\n                          ? item.items.map(i => `${i.itemName || 'Unknown'} (${i.quantity || 0})`).join(', ')\r\n                          : 'No items'}\r\n                      </td>\r\n                      <td className=\"p-2 border border-gray-300\">{item.referenceId}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{item.refModel}</td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Total Amount */}\r\n          <div className=\"mt-4 text-sm font-semibold\">\r\n            Total Amount: {amount.toFixed(2)}\r\n          </div>\r\n\r\n          {/* Pagination Controls */}\r\n          <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n            <span>\r\n              Showing {entriesPerPage * (currentPage - 1) + 1} to{' '}\r\n              {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries\r\n            </span>\r\n            <div className=\"flex justify-between w-full md:w-auto md:gap-2\">\r\n              <button\r\n                className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n                  ${currentPage === 1\r\n                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                    : 'bg-blue-500 hover:bg-blue-600 text-white cursor-pointer'}`}\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n                </svg>\r\n                Previous\r\n              </button>\r\n              <button\r\n                className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n                  ${currentPage === totalPages\r\n                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                    : 'bg-blue-500 hover:bg-blue-600 text-white cursor-pointer'}`}\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                Next\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CashTransactions;"],"names":["API_BASE","CashTransactions","startDate","setStartDate","useState","endDate","setEndDate","warehouseFilter","setWarehouseFilter","accountFilter","setAccountFilter","entriesPerPage","setEntriesPerPage","isSidebarOpen","setSidebarOpen","window","innerWidth","amount","setAmount","transfers","setTransfers","searchTerm","setSearchTerm","currentPage","setCurrentPage","warehouses","setWarehouses","accounts","setAccounts","accountWarehouseMap","setAccountWarehouseMap","loading","setLoading","error","setError","storeId","localStorage","getItem","token","axios","defaults","headers","common","Authorization","useEffect","handleResize","addEventListener","removeEventListener","Promise","all","get","then","_ref","accRes","whRes","storeWarehouses","data","filter","w","store","warehouseMap","forEach","_id","accountPromises","map","acc","res","warehouseId","warehouse","prev","warehouseName","catch","err","console","message","results","filteredAccounts","length","_err$response","_err$response$data","response","finally","async","params","start","end","accountId","alert","fetchData","filteredData","item","_item$warehouse","_item$warehouse$name","_item$account","_item$account$name","_item$referenceId","search","toLowerCase","name","includes","account","referenceId","total","reduce","sum","totalPages","Math","ceil","currentItems","slice","handlePageChange","newPage","_jsx","children","className","_jsxs","Navbar","Sidebar","href","FaTachometerAlt","BiChevronRight","type","value","onChange","e","target","parseInt","onClick","handleCopy","copyData","_item$items","_item$warehouse2","_item$account2","items","i","itemName","quantity","join","date","refModel","navigator","clipboard","writeText","handleExportExcel","_item$warehouse5","_item$account5","_item$items4","Date","Amount","Warehouse","Account","Items","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","handleExportPDF","doc","jsPDF","text","_item$warehouse4","_item$account4","_item$items3","autoTable","head","body","save","handlePrint","print","handleExportCSV","csvContent","_item$items2","_item$warehouse3","_item$account3","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","colSpan","_item$warehouse6","_item$items5","toFixed","min","disabled","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}