{"version":3,"file":"static/js/5082.5c544a0a.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-utils/dist/es/warn-once.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/px-values.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","const pxValues = new Set([\n    // Border props\n    \"borderWidth\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderRadius\",\n    \"radius\",\n    \"borderTopLeftRadius\",\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n    \"borderBottomLeftRadius\",\n    // Positioning props\n    \"width\",\n    \"maxWidth\",\n    \"height\",\n    \"maxHeight\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\",\n    // Spacing props\n    \"padding\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    \"margin\",\n    \"marginTop\",\n    \"marginRight\",\n    \"marginBottom\",\n    \"marginLeft\",\n    // Misc\n    \"backgroundPositionX\",\n    \"backgroundPositionY\",\n]);\n\nexport { pxValues };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { style } from '../render/dom/style.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { hydrateKeyframes } from './keyframes/hydrate.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\nconst animationMaps = new WeakMap();\nconst animationMapKey = (name, pseudoElement) => `${name}:${pseudoElement}`;\nfunction getAnimationMap(element) {\n    const map = animationMaps.get(element) || new Map();\n    animationMaps.set(element, map);\n    return map;\n}\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation {\n    constructor(options) {\n        /**\n         * If we already have an animation, we don't need to instantiate one\n         * and can just use this as a controls interface.\n         */\n        if (\"animation\" in options) {\n            this.animation = options.animation;\n            return;\n        }\n        const { element, name, keyframes: unresolvedKeyframes, pseudoElement, allowFlatten = false, } = options;\n        let { transition } = options;\n        this.allowFlatten = allowFlatten;\n        /**\n         * Stop any existing animations on the element before reading existing keyframes.\n         *\n         * TODO: Check for VisualElement before using animation state. This is a fallback\n         * for mini animate(). Do this when implementing NativeAnimationExtended.\n         */\n        const animationMap = getAnimationMap(element);\n        const key = animationMapKey(name, pseudoElement || \"\");\n        const currentAnimation = animationMap.get(key);\n        currentAnimation && currentAnimation.stop();\n        /**\n         * TODO: If these keyframes aren't correctly hydrated then we want to throw\n         * run an instant animation.\n         */\n        const keyframes = hydrateKeyframes(element, name, unresolvedKeyframes, pseudoElement);\n        invariant(typeof transition.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        transition = applyGeneratorOptions(transition);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.removeAnimation = () => animationMap.delete(key);\n        this.animation.onfinish = () => {\n            if (!pseudoElement) {\n                style.set(element, name, getFinalKeyframe(keyframes, transition));\n            }\n            else {\n                this.commitStyles();\n            }\n            this.cancel();\n        };\n        /**\n         * TODO: Check for VisualElement before using animation state.\n         */\n        animationMap.set(key, this);\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n        this.removeAnimation();\n    }\n    stop() {\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        this.commitStyles();\n        this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        this.animation.commitStyles?.();\n    }\n    get duration() {\n        console.log(this.animation.effect?.getComputedTiming());\n        const duration = this.animation.effect?.getComputedTiming().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    get finished() {\n        return this.animation.finished;\n    }\n    flatten() {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline(timeline) {\n        this.animation.timeline = timeline;\n        this.animation.onfinish = null;\n        return noop;\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve).catch(onReject);\n    }\n}\n\nexport { NativeAnimation };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nexport { isWaapiSupportedEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.6.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue?.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { createGeneratorEasing, supportsLinearEasing, calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : \"easeOut\";\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = this.currentTime ?? 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n    get finished() {\n        return this.currentFinishedPromise;\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, startWaapiAnimation, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime ?? this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    get finished() {\n        return this.resolved.animation.finished;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupAnimationWithThen } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupAnimationWithThen([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.6.3\", `Attempting to mix Motion versions ${nextValue.version} with 12.6.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n"],"names":["LayoutGroupContext","createContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","MotionGlobalConfig","memo","callback","result","undefined","noop","any","progress","from","to","value","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","Set","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","current","variants","resolveVariant","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupAnimation","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","then","onResolve","_onReject","finally","activeAnimations","layout","mainThread","waapi","statsBuffer","addProjectionMetrics","isBezierDefinition","easing","Array","isArray","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","e","generateLinearEasing","resolution","points","numPoints","round","substring","cubicBezierAsString","_ref","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","element","valueName","keyframes","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","offset","fill","iterations","direction","WeakMap","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","isWaapiSupportedEasing","every","onfinish","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","step","schedule","queue","delete","process","frameData","frameloop","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","microtask","cancelMicrotask","queueMicrotask","clearTime","newTime","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","HTMLElement","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tagName","tabIndex","hasAttribute","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGeneratorEasing","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","useEffect","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","getAttribute","motion","createDomVisualElement","PopChildMeasure","React","childRef","offsetParent","parentWidth","offsetWidth","sizeRef","offsetHeight","offsetTop","offsetLeft","PopChild","anchorX","useId","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","childId","random","_","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","setRenderedChildren","exitingChildren","nextChildren","forceRender","onExit","isEveryExitComplete","isExitComplete","useLayoutEffect"],"sourceRoot":""}