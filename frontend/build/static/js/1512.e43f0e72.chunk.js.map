{"version":3,"file":"static/js/1512.e43f0e72.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/Itemlist.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport {\r\n  FaTachometerAlt,\r\n  FaEdit,\r\n  FaTrash,\r\n  FaSortUp,\r\n  FaSortDown,\r\n  FaEllipsisH,\r\n} from \"react-icons/fa\";\r\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport * as XLSX from \"xlsx\";\r\nimport LoadingScreen from \"../../Loading\";\r\n\r\nconst FILES_BASE = \"/vps/uploads/qr/items\";\r\nconst escapeRegex = (str) =>\r\n  str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n\r\n/* ---------------- CSV / XLSX helpers ---------------- */\r\nconst downloadCSV = (rows, file = \"items_export.csv\") => {\r\n  const ws = XLSX.utils.json_to_sheet(rows);\r\n  const blob = new Blob([XLSX.utils.sheet_to_csv(ws)], {\r\n    type: \"text/csv;charset=utf-8;\",\r\n  });\r\n  Object.assign(document.createElement(\"a\"), {\r\n    href: URL.createObjectURL(blob),\r\n    download: file,\r\n  }).click();\r\n};\r\nconst downloadXLSX = (rows, file = \"items_export.xlsx\") => {\r\n  const wb = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(rows), \"Items\");\r\n  XLSX.writeFile(wb, file);\r\n};\r\n\r\nexport default function ItemList() {\r\n  const navigate = useNavigate();\r\n\r\n  /* ---------------- basic state ---------------- */\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  /* full catalogue, NOT filtered by warehouse */\r\n  const [items, setItems] = useState([]);\r\n\r\n  /* live stocks for the currently-selected warehouse\r\n     (or total across all)  ->  { itemId: qty }            */\r\n  const [stockMap, setStockMap] = useState({});\r\n\r\n  /* dropdown look-ups */\r\n  const [warehouseOptions, setWarehouseOptions] = useState([]);\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n\r\n  /* filters & sort */\r\n  const [warehouseFilter, setWarehouseFilter] = useState(\"all\");\r\n  const [categoryFilter, setCategoryFilter] = useState(\"all\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortField, setSortField] = useState(\"itemCode\");\r\n  const [sortDir, setSortDir] = useState(\"asc\");\r\n\r\n  /* pagination */\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const perPage = 10;\r\n\r\n  /* misc pop-ups */\r\n  const [dropdownOpenFor, setDropdownOpenFor] = useState(null);\r\n  const [stockModal, setStockModal] = useState(null);\r\n  const [previewItem, setPreviewItem] = useState(null);\r\n  const [popupImage, setPopupImage] = useState(null);\r\n  const [popupIndex, setPopupIndex] = useState(null);\r\n\r\n  const auth = () => ({\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n\r\n  /* ---------- 1. fetch full catalogue once ---------- */\r\n  const fetchCatalogue = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\"api/items\", auth());\r\n      setItems(data.data || []);\r\n    } catch {\r\n      setError(\"Failed to fetch items — try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ---------- 2. fetch stocks for ONE warehouse ---------- */\r\n  const fetchWarehouseStocks = async (whId) => {\r\n    if (whId === \"all\") return {};\r\n    const { data } = await axios.get(\"api/items\", {\r\n      ...auth(),\r\n      params: { warehouse: whId, page: 1, limit: 10000 },\r\n    });\r\n    const map = {};\r\n    (data.data || []).forEach(\r\n      (it) => (map[it._id] = it.currentStock ?? 0)\r\n    );\r\n    return map;\r\n  };\r\n\r\n  /* ---------- 3. compute TOTAL stock across all ---------- */\r\n  const fetchTotalsAcrossWarehouses = async () => {\r\n    const active = warehouseOptions.filter((w) => w.value !== \"all\");\r\n    if (active.length === 0) return {};\r\n    const reqs = active.map((w) =>\r\n      axios.get(\"api/items\", {\r\n        ...auth(),\r\n        params: { warehouse: w.value, page: 1, limit: 10000 },\r\n      })\r\n    );\r\n    const res = await Promise.all(reqs);\r\n    const totals = {};\r\n    res.forEach(({ data }) => {\r\n      (data.data || []).forEach((it) => {\r\n        const id = it._id;\r\n        totals[id] = (totals[id] || 0) + (it.currentStock ?? 0);\r\n      });\r\n    });\r\n    return totals;\r\n  };\r\n\r\n  /* ---------- 4. master “refreshStocks” ---------- */\r\n  const refreshStocks = async (whId) => {\r\n    setLoading(true);\r\n    try {\r\n      const map =\r\n        whId === \"all\"\r\n          ? await fetchTotalsAcrossWarehouses()\r\n          : await fetchWarehouseStocks(whId);\r\n      setStockMap(map);\r\n    } catch {\r\n      setError(\"Failed to fetch stock numbers.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ---------- initial load ---------- */\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n    (async () => {\r\n      const [whRes, catRes] = await Promise.all([\r\n        axios.get(\"api/warehouses\", auth()),\r\n        axios.get(\"api/categories\", auth()),\r\n      ]);\r\n      setWarehouseOptions([\r\n        { label: \"All Warehouses\", value: \"all\" },\r\n        ...(whRes.data.data || []).map((w) => ({\r\n          label: w.warehouseName,\r\n          value: w._id,\r\n        })),\r\n      ]);\r\n      setCategoryOptions([\r\n        { label: \"All Categories\", value: \"all\" },\r\n        ...(catRes.data.data || []).map((c) => ({\r\n          label: c.name,\r\n          value: c._id,\r\n        })),\r\n      ]);\r\n      await fetchCatalogue();\r\n      await refreshStocks(\"all\");\r\n    })();\r\n  }, []);\r\n\r\n  /* ---------- whenever warehouse changes ---------- */\r\n  useEffect(() => {\r\n    refreshStocks(warehouseFilter);\r\n    setCurrentPage(1);\r\n  }, [warehouseFilter]);\r\n\r\n  /* ---------- derive rows with rowStock ---------- */\r\n  const rows = useMemo(() => {\r\n    const result = items.map((it) => ({\r\n      ...it,\r\n      rowStock: stockMap[it._id] ?? 0,\r\n      presentInWh: stockMap.hasOwnProperty(it._id),\r\n    }));\r\n    return result;\r\n  }, [items, stockMap]);\r\n\r\n  /* ---------- filter / search / sort ---------- */\r\n  const filtered = useMemo(() => {\r\n    let data = [...rows];\r\n     // hide items that are not in the selected warehouse\r\n  if (warehouseFilter !== \"all\") {\r\n    data = data.filter(\r\n      (it) =>\r\n        stockMap.hasOwnProperty(it._id) ||\r\n        it.warehouse?._id === warehouseFilter\r\n    );\r\n  }\r\n    if (searchTerm.trim()) {\r\n      const safeTerm = escapeRegex(searchTerm.trim());\r\n const re       = new RegExp(safeTerm, \"i\");\r\n      data = data.filter(\r\n        (it) =>\r\n          re.test(it.itemName) ||\r\n          re.test(it.itemCode) ||\r\n          (it.barcodes || []).some((b) => re.test(b))\r\n      );\r\n    }\r\n\r\n    if (categoryFilter !== \"all\")\r\n      data = data.filter((it) => it.category?._id === categoryFilter);\r\n\r\n    data.sort((a, b) => {\r\n      const get = (o) =>\r\n        sortField === \"rowStock\" ? o.rowStock : o[sortField] ?? \"\";\r\n      const v1 = get(a);\r\n      const v2 = get(b);\r\n      if (v1 < v2) return sortDir === \"asc\" ? -1 : 1;\r\n      if (v1 > v2) return sortDir === \"asc\" ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return data;\r\n  }, [rows, searchTerm, categoryFilter, sortField, sortDir]);\r\n\r\n  /* ---------- pagination ---------- */\r\n  const totalPages = Math.ceil(filtered.length / perPage);\r\n  const pageStart = (currentPage - 1) * perPage;\r\n  const pageSlice = filtered.slice(pageStart, pageStart + perPage);\r\n\r\n  /* ---------- delete ---------- */\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Delete this item?\")) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`api/items/${id}`, auth());\r\n      await fetchCatalogue();\r\n      await refreshStocks(warehouseFilter);\r\n    } catch {\r\n      setError(\"Delete failed — try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ---------- visibility toggle ---------- */\r\n  const toggleVisibility = async (row) => {\r\n    setRowsOptimistic(row._id, { isOnline: !row.isOnline });\r\n    try {\r\n      await axios.put(\r\n        `api/items/${row._id}`,\r\n        { isOnline: !row.isOnline },\r\n        auth()\r\n      );\r\n    } catch {\r\n      setRowsOptimistic(row._id, { isOnline: row.isOnline });\r\n      alert(\"Could not update visibility.\");\r\n    }\r\n  };\r\n  const setRowsOptimistic = (id, patch) =>\r\n    setItems((prev) =>\r\n      prev.map((it) => (it._id === id ? { ...it, ...patch } : it))\r\n    );\r\n\r\n  /* ---------- stock modal ---------- */\r\n  const openStockModal = async (item) => {\r\n    try {\r\n      const active = warehouseOptions.filter((w) => w.value !== \"all\");\r\n      const reqs = active.map((w) =>\r\n        axios.get(\"api/items\", {\r\n          ...auth(),\r\n          params: { warehouse: w.value, search: item.itemCode, page: 1, limit: 1 },\r\n        })\r\n      );\r\n      const res = await Promise.allSettled(reqs);\r\n      const stocksByWh = res.map((r, i) => {\r\n        const wh = active[i];\r\n        if (r.status !== \"fulfilled\") return { id: wh.value, name: wh.label, stock: \"N/A\" };\r\n        const row = r.value.data.data?.[0];\r\n        return { id: wh.value, name: wh.label, stock: row ? row.currentStock ?? 0 : 0 };\r\n      });\r\n      setStockModal({ ...item, stocksByWh });\r\n    } catch {\r\n      alert(\"Failed to load stock breakdown.\");\r\n    }\r\n  };\r\n  const handleRemoveImage = async (index) => {\r\n    if (!window.confirm(\"Remove this image?\")) return;\r\n\r\n    // 1) Grab the code/filename of the image you’re removing\r\n    const removedImage = previewItem.itemImages[index];\r\n\r\n    // 2) Update local state immediately for snappy UI\r\n    setPreviewItem((prev) => {\r\n      const newImages = [...prev.itemImages];\r\n      newImages.splice(index, 1);\r\n      return { ...prev, itemImages: newImages };\r\n    });\r\n\r\n    // 3) Tell your backend to actually delete it\r\n    try {\r\n      // adjust this endpoint to match your API\r\n      await axios.delete(`/items/${previewItem._id}/images/${removedImage}`); \r\n      // or, if your API uses PATCH:\r\n      // await axios.patch(`/items/${previewItem._id}`, { removeImage });\r\n    } catch (err) {\r\n      console.error(\"Failed to remove image on server:\", err);\r\n      // Optionally roll back UI state or show an error toast\r\n    }\r\n  };\r\n\r\n  /* ---------- render ---------- */\r\n  if (loading) return <LoadingScreen />;\r\n  if (error) return <div className=\"p-4 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        <div className=\"flex-grow p-4 mt-20\">\r\n          {/* header */}\r\n          <header className=\"flex flex-col md:flex-row justify-between mb-6\">\r\n            <h2 className=\"text-2xl font-bold\">Items List</h2>\r\n            <nav className=\"flex text-gray-600 gap-2 mt-2 md:mt-0\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center\">\r\n                <FaTachometerAlt /> Home\r\n              </NavLink>\r\n              <BiChevronRight />\r\n              <NavLink to=\"/item-list\">Items List</NavLink>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* filters */}\r\n          <div className=\"mb-4 p-4 bg-white rounded shadow flex flex-wrap gap-4 items-end\">\r\n            <div className=\"w-48\">\r\n              <label className=\"block mb-1\">Warehouse</label>\r\n              <Select\r\n                options={warehouseOptions}\r\n                value={warehouseOptions.find((o) => o.value === warehouseFilter)}\r\n                onChange={(o) => setWarehouseFilter(o.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"w-48\">\r\n              <label className=\"block mb-1\">Category</label>\r\n              <Select\r\n                options={categoryOptions}\r\n                value={categoryOptions.find((o) => o.value === categoryFilter)}\r\n                onChange={(o) => {\r\n                  setCategoryFilter(o.value);\r\n                  setCurrentPage(1);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex-1 min-w-[200px]\">\r\n              <label className=\"block mb-1\">Search</label>\r\n              <input\r\n                value={searchTerm}\r\n                onChange={(e) => {\r\n                  setSearchTerm(e.target.value);\r\n                  setCurrentPage(1);\r\n                }}\r\n                placeholder=\"Code / name / barcode\"\r\n                className=\"w-full px-3 py-2 border rounded\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"w-48\">\r\n              <label className=\"block mb-1\">Sort by</label>\r\n              <Select\r\n                options={[\r\n                  { label: \"Item Code ↑\", value: \"itemCode|asc\" },\r\n                  { label: \"Item Code ↓\", value: \"itemCode|desc\" },\r\n                  { label: \"Stock Low→High\", value: \"rowStock|asc\" },\r\n                  { label: \"Stock High→Low\", value: \"rowStock|desc\" },\r\n                  { label: \"Price Low→High\", value: \"salesPrice|asc\" },\r\n                  { label: \"Price High→Low\", value: \"salesPrice|desc\" },\r\n                ]}\r\n                onChange={(o) => {\r\n                  const [f, d] = o.value.split(\"|\");\r\n                  setSortField(f);\r\n                  setSortDir(d);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex gap-2 ml-auto\">\r\n              <button\r\n                onClick={() => downloadCSV(filtered)}\r\n                className=\"px-4 py-2 bg-gray-500 text-white rounded\"\r\n              >\r\n                CSV\r\n              </button>\r\n              <button\r\n                onClick={() => downloadXLSX(filtered)}\r\n                className=\"px-4 py-2 bg-gray-700 text-white rounded\"\r\n              >\r\n                XLSX\r\n              </button>\r\n              <Link to=\"/items/add\">\r\n                <button className=\"px-4 py-2 bg-cyan-500 text-white rounded\">\r\n                  + Create Item\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          {/* table */}\r\n          <div className=\"overflow-x-auto bg-white rounded shadow\">\r\n            <table className=\"w-full text-sm border-collapse\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                  {[\r\n                    { label: \"Image\", field: null },\r\n                    { label: \"Code\", field: \"itemCode\" },\r\n                    { label: \"Name\", field: null },\r\n                    //{ label: \"Brand\", field: null },\r\n                    { label: \"Category\", field: null },\r\n                    { label: \"Stock\", field: \"rowStock\" },\r\n                    { label: \"Price\", field: \"salesPrice\" },\r\n                    { label: \"Visibility\", field: null },\r\n                    { label: \"Action\", field: null },\r\n                  ].map(({ label, field }) => (\r\n                    <th key={label} className=\"px-2 py-1 border\">\r\n                      <div className=\"flex items-center justify-center\">\r\n                        {label}\r\n                        {field && (\r\n                          <span className=\"ml-1 flex flex-col\">\r\n                            <FaSortUp\r\n                              className={`cursor-pointer ${\r\n                                sortField === field && sortDir === \"asc\"\r\n                                  ? \"text-blue-600\"\r\n                                  : \"text-gray-400\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                setSortField(field);\r\n                                setSortDir(\"asc\");\r\n                              }}\r\n                            />\r\n                            <FaSortDown\r\n                              className={`cursor-pointer ${\r\n                                sortField === field && sortDir === \"desc\"\r\n                                  ? \"text-blue-600\"\r\n                                  : \"text-gray-400\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                setSortField(field);\r\n                                setSortDir(\"desc\");\r\n                              }}\r\n                            />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pageSlice.length ? (\r\n                  pageSlice.map((it) => {\r\n                    const img = it.itemImages?.[0]\r\n                      ? `${FILES_BASE}/${it.itemImages[0]}`\r\n                      : null;\r\n                    return (\r\n                      <tr key={it._id}>\r\n                        <td className=\"border px-2 py-1 text-center\">\r\n                          {img ? (\r\n                            <img\r\n                              src={img}\r\n                              alt={it.itemName}\r\n                              className=\"w-10 h-10 object-cover mx-auto cursor-pointer\"\r\n                              onClick={() => setPreviewItem(it)}\r\n                            />\r\n                          ) : (\r\n                            \"—\"\r\n                          )}\r\n                        </td>\r\n                        <td className=\"border px-2 py-1\">{it.itemCode}</td>\r\n                        <td className=\"border px-2 py-1\">{it.itemName}</td>\r\n                        {/*<td className=\"border px-2 py-1\">\r\n                          {it.brand?.brandName || \"—\"}\r\n                        </td>*/}\r\n                        <td className=\"border px-2 py-1\">\r\n                          {it.category?.name || \"—\"}\r\n                        </td>\r\n                        <td className=\"border px-2 py-1 text-center\">\r\n                          {it.rowStock}\r\n                          <FaEllipsisH\r\n                            className=\"inline ml-1 cursor-pointer\"\r\n                            onClick={() => openStockModal(it)}\r\n                          />\r\n                        </td>\r\n                        <td className=\"border px-2 py-1 text-right\">\r\n                          {it.salesPrice}\r\n                        </td>\r\n                        <td className=\"border px-2 py-1 text-center\">\r\n                          <span\r\n                            onClick={() => toggleVisibility(it)}\r\n                            className={`px-2 py-1 rounded text-xs cursor-pointer select-none ${\r\n                              it.isOnline\r\n                                ? \"bg-green-600 text-white hover:bg-green-700\"\r\n                                : \"bg-red-500 text-white hover:bg-red-600\"\r\n                            }`}\r\n                          >\r\n                            {it.isOnline ? \"Online\" : \"Offline\"}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"border px-2 py-1 relative\">\r\n                          <button\r\n                            onClick={() =>\r\n                              setDropdownOpenFor(\r\n                                dropdownOpenFor === it._id ? null : it._id\r\n                              )\r\n                            }\r\n                            className=\"px-2 py-1 bg-cyan-600 text-white rounded\"\r\n                          >\r\n                            Action ▼\r\n                          </button>\r\n                          {dropdownOpenFor === it._id && (\r\n                            <div className=\"absolute right-0 mt-1 bg-white border rounded shadow z-50\">\r\n                              <button\r\n                                className=\"flex items-center w-full px-3 py-2 hover:bg-gray-100\"\r\n                                onClick={() =>\r\n                                  navigate(\r\n                                    `/items/add?id=${\r\n                                      it.parentItemId || it._id\r\n                                    }`\r\n                                  )\r\n                                }\r\n                              >\r\n                                <FaEdit className=\"mr-2\" /> Edit\r\n                              </button>\r\n                              <button\r\n                                className=\"flex items-center w-full px-3 py-2 text-red-600 hover:bg-gray-100\"\r\n                                onClick={() => handleDelete(it._id)}\r\n                              >\r\n                                <FaTrash className=\"mr-2\" /> Delete\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"9\" className=\"py-4 text-center\">\r\n                      No data\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* pagination */}\r\n          <div className=\"flex justify-between items-center mt-4 px-2\">\r\n            <span>\r\n              Showing {pageStart + 1}–\r\n              {Math.min(pageStart + perPage, filtered.length)} of{\" \"}\r\n              {filtered.length}\r\n            </span>\r\n            <div className=\"space-x-2\">\r\n              <button\r\n                onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"px-3 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={() =>\r\n                  setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n                }\r\n                disabled={currentPage === totalPages}\r\n                className=\"px-3 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ---------------- Stock Modal ---------------- */}\r\n      {stockModal && (\r\n        <div\r\n          className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70\"\r\n          onClick={() => setStockModal(null)}\r\n        >\r\n          <div\r\n            className=\"bg-white rounded-lg shadow-lg p-4 max-w-md w-full\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <h3 className=\"text-lg font-semibold\">Warehouse Wise Stock</h3>\r\n              <button\r\n                className=\"text-red-600 text-2xl font-bold\"\r\n                onClick={() => setStockModal(null)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <p>\r\n                <strong>Item Name:</strong>{\" \"}\r\n                {stockModal.itemName || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Sales Price:</strong>{\" \"}\r\n                {stockModal.salesPrice || \"N/A\"}\r\n              </p>\r\n            </div>\r\n            <table className=\"w-full text-sm border-collapse\">\r\n              <thead>\r\n                <tr className=\"bg-blue-500 text-white\">\r\n                  <th className=\"border px-2 py-1\">#</th>\r\n                  <th className=\"border px-2 py-1\">Warehouse</th>\r\n                  <th className=\"border px-2 py-1\">Stock</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {stockModal.stocksByWh.map((row, i) => (\r\n                  <tr key={row.id} className=\"border\">\r\n                    <td className=\"border px-2 py-1\">{i + 1}</td>\r\n                    <td className=\"border px-2 py-1\">{row.name}</td>\r\n                    <td className=\"border px-2 py-1\">{row.stock}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <button\r\n              className=\"mt-4 px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\r\n              onClick={() => setStockModal(null)}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* ---------------- Image Preview ---------------- */}\r\n      {previewItem && (\r\n        <div\r\n          className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70\"\r\n          onClick={() => {\r\n            setPreviewItem(null);\r\n            setPopupImage(null);\r\n          }}\r\n        >\r\n          <div\r\n            className=\"bg-white rounded shadow-lg max-w-4xl w-full max-h-[90vh] p-4 overflow-auto\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg font-semibold\">\r\n                {previewItem.itemName} – images\r\n              </h3>\r\n              <button\r\n                className=\"text-red-600 text-2xl font-bold\"\r\n                onClick={() => {\r\n                  setPreviewItem(null);\r\n                  setPopupImage(null);\r\n                }}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n              {previewItem.itemImages.map((fn, idx) => {\r\n                const url = fn.startsWith(\"http\")\r\n                  ? fn\r\n                  : `${FILES_BASE}/${fn}`;\r\n                return (\r\n                  <div key={idx} className=\"relative group\">\r\n                    <img\r\n                      src={url}\r\n                      alt={`${previewItem.itemName} ${idx + 1}`}\r\n                      className=\"w-full h-64 object-cover rounded cursor-pointer\"\r\n                      onClick={() => {\r\n                        setPopupImage(fn);\r\n                        setPopupIndex(idx);\r\n                      }}\r\n                      onError={(e) => {\r\n                        e.currentTarget.src =\r\n                          \"https://via.placeholder.com/150\";\r\n                      }}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* confirm delete */}\r\n            {popupImage && (\r\n              <div\r\n                className=\"fixed inset-0 z-60 flex items-center justify-center bg-black/50\"\r\n                onClick={() => setPopupImage(null)}\r\n              >\r\n                <div\r\n                  className=\"bg-white rounded-lg p-6 shadow-lg max-w-sm w-full\"\r\n                  onClick={(e) => e.stopPropagation()}\r\n                >\r\n                  <h4 className=\"text-lg font-semibold mb-4\">\r\n                    Remove this image?\r\n                  </h4>\r\n                  <p className=\"text-sm mb-6 text-gray-700\">\r\n                    Are you sure you want to remove{\" \"}\r\n                    <span className=\"font-medium\">{popupImage}</span>?\r\n                  </p>\r\n                  <div className=\"flex justify-end gap-2\">\r\n                    <button\r\n                      className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\r\n                      onClick={() => setPopupImage(null)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\r\n                      onClick={() => {\r\n                        handleRemoveImage(popupIndex);\r\n                        setPopupImage(null);\r\n                      }}\r\n                    >\r\n                      Yes, Remove\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","FILES_BASE","escapeRegex","str","replace","downloadCSV","rows","file","arguments","length","undefined","ws","XLSX","json_to_sheet","blob","Blob","sheet_to_csv","type","Object","assign","document","createElement","href","URL","createObjectURL","download","click","downloadXLSX","wb","book_new","book_append_sheet","ItemList","navigate","useNavigate","loading","setLoading","error","setError","items","setItems","stockMap","setStockMap","warehouseOptions","setWarehouseOptions","categoryOptions","setCategoryOptions","warehouseFilter","setWarehouseFilter","categoryFilter","setCategoryFilter","searchTerm","setSearchTerm","sortField","setSortField","sortDir","setSortDir","currentPage","setCurrentPage","dropdownOpenFor","setDropdownOpenFor","stockModal","setStockModal","previewItem","setPreviewItem","popupImage","setPopupImage","popupIndex","setPopupIndex","auth","headers","Authorization","localStorage","getItem","fetchCatalogue","async","data","axios","get","refreshStocks","map","whId","active","filter","w","value","reqs","params","warehouse","page","limit","res","Promise","all","totals","forEach","_ref","it","_it$currentStock2","id","_id","currentStock","fetchTotalsAcrossWarehouses","_it$currentStock","fetchWarehouseStocks","useEffect","window","innerWidth","whRes","catRes","label","warehouseName","c","name","useMemo","_stockMap$it$_id","rowStock","presentInWh","hasOwnProperty","filtered","_it$warehouse","trim","safeTerm","re","RegExp","test","itemName","itemCode","barcodes","some","b","_it$category","category","sort","a","o","_o$sortField","v1","v2","totalPages","Math","ceil","pageStart","pageSlice","slice","setRowsOptimistic","patch","prev","NavLink","to","FaTachometerAlt","BiChevronRight","Select","options","find","onChange","e","target","placeholder","f","d","split","onClick","Link","field","_ref2","FaSortUp","FaSortDown","_it$itemImages","_it$category2","img","itemImages","src","alt","FaEllipsisH","search","item","stocksByWh","allSettled","r","i","_r$value$data$data","_row$currentStock","wh","status","stock","row","alert","openStockModal","salesPrice","isOnline","put","toggleVisibility","parentItemId","FaEdit","confirm","delete","handleDelete","FaTrash","colSpan","min","p","max","disabled","stopPropagation","fn","idx","url","startsWith","onError","currentTarget","removedImage","index","newImages","splice","err","console","handleRemoveImage","_typeof","Symbol","iterator","constructor","prototype"],"sourceRoot":""}