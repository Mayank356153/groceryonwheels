{"version":3,"file":"static/js/2644.45bb1bd2.chunk.js","mappings":"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","sources":["components/Accounts/DepositList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiChevronRight } from 'react-icons/bi';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport { jsPDF } from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst DepositList = () => {\r\n  const navigate=useNavigate();\r\n  // State variables for filters and data\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [depositDate, setDepositDate] = useState('');\r\n  const [debitAccount, setDebitAccount] = useState('');\r\n  const [creditAccount, setCreditAccount] = useState('');\r\n  const [users, setUsers] = useState('All');\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [deposits, setDeposits] = useState([]);\r\n  const[actionMenu,setActionMenu]=useState(null);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('api/deposits', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n      console.log(response.data);\r\n      setDeposits(response.data.data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Compute filtered data based on search and filters.\r\n  const filteredData = deposits.filter(item => {\r\n    const search = searchTerm.trim().toLowerCase() || \"\";\r\n    const debitMatch = item.debitAccount?.accountNumber?.toLowerCase().includes(search) || false;\r\n    const creditMatch = item.creditAccount?.accountNumber?.toLowerCase().includes(search) || false;\r\n    const nameMatch = item.creatorName ? item.creatorName.toLowerCase().includes(search) : false;\r\n    const dateMatch = depositDate\r\n      ? item.depositDate && new Date(item.depositDate).toDateString() === new Date(depositDate).toDateString()\r\n      : true;\r\n    // Add more filters for debit/credit account if necessary.\r\n    return (search === \"\" || debitMatch || creditMatch || nameMatch) && dateMatch;\r\n  });\r\n\r\n  // Pagination logic\r\n  const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentDeposits = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n  const handleEntriesChange=(e)=>{\r\n    setEntriesPerPage(Number(e.target.value))\r\n    setCurrentPage(1)\r\n  }\r\n  const handlePageChange = (newPage) =>  {\r\n    if(newPage >=1 && newPage <=totalPages )\r\n    setCurrentPage(newPage);\r\n  }\r\n\r\n  // Calculate total amount of current deposits\r\n  const calculateTotal = () => {\r\n    const total = currentDeposits.reduce((sum, deposit) => sum + deposit.amount, 0);\r\n    setTotalAmount(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateTotal();\r\n  }, [filteredData, currentDeposits]);\r\n\r\n  // Export functions\r\n  const handleCopy = () => {\r\n    const copyData = deposits.map(deposit => \r\n      `${deposit.referenceNo}\\t${new Date(deposit.depositDate).toDateString()}\\t${deposit.debitAccount?.accountNumber || \"NA\"}\\t${deposit.creditAccount?.accountNumber || \"NA\"}\\t${deposit.amount}\\t${deposit.creatorName || \"NA\"}`\r\n    ).join('\\n');\r\n    navigator.clipboard.writeText(copyData);\r\n    alert('Data copied to clipboard');\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent = \"data:text/csv;charset=utf-8,\" +\r\n      deposits.map(deposit => \r\n        `${deposit.referenceNo},${new Date(deposit.depositDate).toDateString()},${deposit.debitAccount?.accountNumber || \"NA\"},${deposit.creditAccount?.accountNumber || \"NA\"},${deposit.amount},${deposit.creatorName || \"NA\"}`\r\n      ).join('\\n');\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"deposits.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Deposit List\", 14, 16);\r\n    const data = deposits.map(deposit => [\r\n      deposit.referenceNo,\r\n      new Date(deposit.depositDate).toDateString(),\r\n      deposit.debitAccount?.accountNumber || \"NA\",\r\n      deposit.creditAccount?.accountNumber || \"NA\",\r\n      deposit.amount,\r\n      deposit.creatorName || \"NA\",\r\n      new Date(deposit.createdAt).toDateString()\r\n    ]);\r\n    autoTable(doc, {\r\n      head: [['Reference No.', 'Deposit Date', 'Debit Account', 'Credit Account', 'Amount', 'Created By', 'Created At']],\r\n      body: data,\r\n    });\r\n    doc.save(\"deposits.pdf\");\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(deposits);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Deposits\");\r\n    XLSX.writeFile(workbook, \"deposits.xlsx\");\r\n  };\r\n\r\n  const handleToggleColumns = () => {\r\n    alert(\"Column toggling functionality is not implemented.\");\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const conf= window.confirm(\"Do u want to delete this ?\")\r\n    if(!conf){\r\n      return ;\r\n    }\r\n    try {\r\n      const response = await axios.delete(`api/deposits/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n    \r\n     alert(\"Deleted Successfully\")\r\n    fetchData();\r\n    } catch (error) {\r\n      console.error( error.message);\r\n    }\r\n    \r\n  };\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <div className=\"w-auto\">\r\n          \r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n          <header className=\"flex flex-col items-center justify-between px-2 py-2 mb-2 bg-gray-100 shadow rouded-md sm:flex-row\">\r\n            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Deposit List</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Deposits</span>\r\n            </div>\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0 sm:space-x-3\">\r\n              <a href=\"#\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-1 \" />\r\n              <a href=\"#\" className=\"text-gray-700 no-underline hover:text-cyan-600\">Deposit List</a>\r\n            </nav>\r\n          </header>\r\n\r\n          <div className=\"flex items-center justify-between p-4 mt-1 mb-4 border-t-4 rounded-lg border-cyan-500\">\r\n            <div></div>\r\n            <div>\r\n              <Link to=\"/add-deposit\" className=\"px-4 py-2 text-white no-underline transition rounded bg-cyan-500 hover:bg-cyan-600\">\r\n                <span className=\"text-lg\">+</span> Create Deposit\r\n              </Link>\r\n              <Link to=\"/account-list\" className=\"bg-green-600 text-white px-4 py-2 rounded\">\r\n                <span className=\"text-lg\">+</span> Account List\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filters Section */}\r\n          <div className=\"flex-col items-start md:flex-row md:items-center\">\r\n            <div className=\"flex flex-wrap justify-between space-y-2\">\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">Deposit Date</label>\r\n                <input type=\"date\" value={depositDate} onChange={(e) => setDepositDate(e.target.value)} className=\"w-48 p-2 border\" />\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">Debit Account</label>\r\n                <select value={debitAccount} onChange={(e) => setDebitAccount(e.target.value)} className=\"w-48 p-2 border\">\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"all\">ALL</option>\r\n                  {deposits.map((item, index) => (\r\n                    <option key={index} value={item.debitAccount?.accountNumber.toLowerCase()}>\r\n                      {item.debitAccount?.accountNumber}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">Credit Account</label>\r\n                <select value={creditAccount} onChange={(e) => setCreditAccount(e.target.value)} className=\"w-48 p-2 border\">\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"all\">ALL</option>\r\n                  {deposits.map((item, index) => (\r\n                    <option key={index} value={item.creditAccount?.accountNumber.toLowerCase()}>\r\n                      {item.creditAccount?.accountNumber}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-bold text-gray-700\">Users</label>\r\n                <select value={users} onChange={(e) => setUsers(e.target.value)} className=\"w-48 p-2 border\">\r\n                  <option value=\"All\">All</option>\r\n                  <option>Admin</option>\r\n                  <option>Manager</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Table Controls Section */}\r\n          <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 lg:flex-row lg:space-y-0 lg:items-center\">\r\n              <div className=\"flex items-center px-2 space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2 px-2'>\r\n                <button onClick={handleCopy} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"w-full px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 rounded-sm \" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n          {/* Deposit Table */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full mt-4 border border-collapse border-gray-300\">\r\n              <thead className=\"text-sm bg-gray-200 md:text-base\">\r\n                <tr>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Reference No.</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Deposit Date</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Debit Account</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Credit Account</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Amount</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Created by</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Created at</th>\r\n                  <th className=\"p-2 border border-gray-300 whitespace-nowrap\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentDeposits.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"p-4 text-center\">No data available</td>\r\n                  </tr>\r\n                ) : (\r\n                  currentDeposits.map((deposit) => (\r\n                    <tr key={deposit._id} className=\"text-sm md:text-base\">\r\n                      <td className=\"p-2 border border-gray-300\">{deposit.referenceNo || \"NA\"}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{new Date(deposit.depositDate).toDateString()}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{deposit.debitAccount?.accountNumber || \"NA\"}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{deposit.creditAccount?.accountNumber || \"NA\"}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{deposit.amount}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{deposit.creatorName || \"NA\"}</td>\r\n                      <td className=\"p-2 border border-gray-300\">{new Date(deposit.createdAt).toDateString()}</td>\r\n                      <td className=\"p-2 border border-gray-300\">\r\n                      <button\r\nclassName={`flex items-center gap-2 px-4 py-2 text-sm font-semibold text-white bg-cyan-600 rounded-full shadow-sm \r\n            hover:bg-cyan-700 active:scale-95 transition-all duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-cyan-400`}\r\nonClick={() => {\r\n  if (actionMenu) setActionMenu(null);\r\n  else setActionMenu(deposit._id);\r\n}}\r\n>\r\n<span>Action</span>\r\n<svg\r\n  className={`w-4 h-4 transition-transform duration-200 ${\r\n    actionMenu === deposit._id ? \"rotate-180\" : \"\"\r\n  }`}\r\n  fill=\"none\"\r\n  stroke=\"currentColor\"\r\n  strokeWidth={2}\r\n  viewBox=\"0 0 24 24\"\r\n>\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\r\n</svg>\r\n</button>\r\n\r\n\r\n                      {actionMenu === deposit._id && (\r\n                        <div className=\"absolute z-50 mt-2 bg-white border shadow-lg t-0 w-28\">\r\n                          <button \r\n                          className=\"w-full px-1 py-0 text-left text-green-500 hover:bg-gray-100\"\r\n                           onClick={()=>navigate(`/add-deposit?id=${deposit._id}`)}> \r\n                            \r\n                            ✏️ Edit\r\n                          </button>\r\n                          <button\r\n                            className=\"w-full px-1 py-0 text-left text-red-500 hover:bg-gray-100\"\r\n                            onClick={() => handleDelete(deposit._id)}\r\n                          >\r\n                            🗑️ Delete\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n            </td>\r\n          </tr>\r\n        ))\r\n      )}\r\n              \r\n                {filteredData.length > 0 && (\r\n                  <tr className=\"font-bold md:text-base\">\r\n                    <td className=\"p-2 text-right border border-gray-300\" colSpan=\"5\">Total:</td>\r\n                    <td className=\"p-2 text-right border border-gray-300\">{totalAmount}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination Controls */}\r\n          <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === totalPages \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepositList;\r\n"],"names":["DepositList","navigate","useNavigate","currentPage","setCurrentPage","useState","depositDate","setDepositDate","debitAccount","setDebitAccount","creditAccount","setCreditAccount","users","setUsers","entriesPerPage","setEntriesPerPage","searchTerm","setSearchTerm","isSidebarOpen","setSidebarOpen","totalAmount","setTotalAmount","deposits","setDeposits","actionMenu","setActionMenu","useEffect","window","innerWidth","fetchData","async","response","axios","get","headers","Authorization","localStorage","getItem","console","log","data","err","error","message","filteredData","filter","item","_item$debitAccount","_item$debitAccount$ac","_item$creditAccount","_item$creditAccount$a","search","trim","toLowerCase","debitMatch","accountNumber","includes","creditMatch","nameMatch","creatorName","dateMatch","Date","toDateString","indexOfLastItem","indexOfFirstItem","totalPages","Math","ceil","length","currentDeposits","slice","handlePageChange","newPage","calculateTotal","total","reduce","sum","deposit","amount","_jsxs","className","children","_jsx","Navbar","Sidebar","href","FaTachometerAlt","BiChevronRight","Link","to","type","value","onChange","e","target","map","index","_item$debitAccount2","_item$debitAccount3","_item$creditAccount2","_item$creditAccount3","Number","onClick","handleCopy","copyData","_deposit$debitAccount","_deposit$creditAccoun","referenceNo","join","navigator","clipboard","writeText","alert","handleExcelDownload","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","_deposit$debitAccount3","_deposit$creditAccoun3","createdAt","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","_deposit$debitAccount2","_deposit$creditAccoun2","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","placeholder","colSpan","_deposit$debitAccount4","_deposit$creditAccoun4","_id","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d","confirm","delete","id","handleDelete","min","disabled"],"sourceRoot":""}