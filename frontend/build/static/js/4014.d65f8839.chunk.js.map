{"version":3,"file":"static/js/4014.d65f8839.chunk.js","mappings":"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","sources":["components/Quotation/QuotationList.jsx","Loading.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoadingScreen from '../../Loading.jsx';\r\n\r\nconst QuotationList = () => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState('All');\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [qoutation, setQoutation] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [warehouse, setWarehouse] = useState(\"all\");\r\n  const [total, setTotal] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(null); // State to manage dropdown visibility\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) {\r\n      setSidebarOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchWarehouses = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"No token found redirecting...\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\"api/warehouses\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (response.data.data) {\r\n        const newwarehouse = [\r\n          { label: \"All\", value: \"all\" },\r\n          ...response.data.data.map(warehouse => ({\r\n            label: warehouse.warehouseName,\r\n            value: warehouse._id,\r\n          }))\r\n        ];\r\n        setWarehouses(newwarehouse);\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchQuotation = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"No token found redirecting...\");\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\"api/quotation\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setQoutation(response.data);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWarehouses();\r\n    fetchQuotation();\r\n  }, []);\r\n\r\n  const filteredData = qoutation.filter(item => {\r\n    const warehouseCondition = warehouse === \"all\" || warehouse === \"\" || item.warehouse?._id === warehouse;\r\n    const customerCondition = item.customer?.customerName?.toLowerCase().includes(searchTerm.toLowerCase()) || false;\r\n    const start = startDate\r\n      ? item.quotationDate && new Date(item.quotationDate).toDateString() >= new Date(startDate).toDateString()\r\n      : true;\r\n    const end = endDate\r\n      ? item.quotationDate && new Date(item.quotationDate).toDateString() <= new Date(endDate).toDateString()\r\n      : true;\r\n    return warehouseCondition && customerCondition && start && end;\r\n  });\r\n\r\n  const calculate = () => setTotal(filteredData.reduce((sum, quote) => sum + quote.grandTotal, 0));\r\n  useEffect(() => { calculate(); }, [filteredData]);\r\n\r\n  const indexOfLastItem = currentPage * entriesPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n  const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n  const currentUsers = filteredData.slice((currentPage - 1) * entriesPerPage, currentPage * entriesPerPage);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  const handleEntriesChange = (e) => {\r\n    setEntriesPerPage(Number(e.target.value));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const data = qoutation.map(quotation => `${new Date(quotation.quotationDate).toDateString()}, ${new Date(quotation.expiryDate).toDateString()}, ${quotation.quotationCode},${quotation.referenceNo},${quotation.customer?.customerName || \"NA\"},${quotation.grandTotal}`).join('\\n');\r\n    navigator.clipboard.writeText(data);\r\n    alert(\"Data copied to clipboard!\");\r\n  };\r\n\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(qoutation);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Quotation List\");\r\n    XLSX.writeFile(wb, \"Quotation_list.xlsx\");\r\n  };\r\n\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Quotation List\", 20, 20);\r\n    const tableData = qoutation.map(quotation => [\r\n      new Date(quotation.quotationDate).toDateString(),\r\n      new Date(quotation.expiryDate).toDateString(),\r\n      quotation.quotationCode,\r\n      quotation.referenceNo,\r\n      quotation.customer?.customerName || \"NA\",\r\n      quotation.grandTotal\r\n    ]);\r\n    autoTable(doc, {\r\n      head: [['Quotation Date', 'Expire Date', 'Quotation Code', 'Reference No.', 'Customer Name', 'Total']],\r\n      body: tableData,\r\n    });\r\n    doc.save('quotation.pdf');\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleCsvDownload = () => {\r\n    const csvContent = \"data:text/csv;charset=utf-8,\" + qoutation.map(exp => Object.values(exp).join(\",\")).join(\"\\n\");\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"quotation_list.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const conf = window.confirm(\"Do you want to delete this?\");\r\n    if (!conf) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`api/quotation/${id}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      alert(\"Deleted Successfully\");\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    } finally {\r\n      await fetchQuotation();\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleDropdown = (id) => {\r\n    setDropdownOpen(dropdownOpen === id ? null : id);\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className={`flex-grow mt-24 flex flex-col p-2 md:p-2 min-h-screen ${isSidebarOpen ? \"ml-64\" : \"ml-0\"}`}>\r\n          <header className=\"flex flex-col items-center justify-between p-4 rounded-md shadow sm:flex-row bg-gray\">\r\n            <div className=\"flex flex-col items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Quotation List</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Sold Items</span>\r\n            </div>\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n              <a href=\"#\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"><FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home</a>\r\n              <BiChevronRight className=\"hidden mx-1 sm:mx-2 sm:inline\" />\r\n              <a href=\"#\" className=\"text-gray-700 no-underline hover:text-cyan-600\">Quotation List</a>\r\n            </nav>\r\n          </header>\r\n          <div className=\"flex justify-end mb-4\">\r\n            <button onClick={() => navigate('/newquotation')} className=\"px-4 py-2 mt-2 text-white transition rounded-md bg-cyan-500 hover:bg-cyan-600\">\r\n              Create Quotation\r\n            </button>\r\n          </div>\r\n          <div className=\"flex flex-col mb-4 md:flex-row md:items-center md:justify-between\">\r\n            <div className=\"flex-1 mb-4 md:mb-0\">\r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-4\">\r\n                <div>\r\n                  <label className=\"block mb-1 font-bold text-sm/6\">Warehouse<span className='text-red-500'>*</span></label>\r\n                  <Select options={warehouses} onChange={(selectedOption) => setWarehouse(selectedOption.value)} />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block mb-1 font-bold text-sm/6\">From Date</label>\r\n                  <input type=\"date\" className=\"w-full px-4 py-2 border rounded\" onChange={(e) => setStartDate(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block mb-1 font-bold text-sm/6\">To Date</label>\r\n                  <input type=\"date\" className=\"w-full px-4 py-2 border rounded\" onChange={(e) => setEndDate(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block mb-1 font-bold text-sm/6\">Users</label>\r\n                  <select value={users} onChange={(e) => setUsers(e.target.value)} className=\"w-full px-4 py-2 border rounded\">\r\n                    <option value=\"All\">All</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col items-center justify-between p-2 mt-2 bg-white rounded shadow-md md:flex-row\">\r\n            <div className=\"flex items-center gap-1\">\r\n              <span className=\"text-sm\">Show</span>\r\n              <select value={entriesPerPage} onChange={handleEntriesChange} className=\"p-2 border rounded\">\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={100}>100</option>\r\n              </select>\r\n              <span className=\"text-sm\">Entries</span>\r\n            </div>\r\n            <div className=\"flex flex-col md:flex-row items-center gap-0.5 mt-1 md:mt-0\">\r\n              <button className=\"w-full px-3 py-1 text-white bg-cyan-300 hover:bg-cyan-500 md:w-auto text-sm/6\" onClick={handleCopy}>Copy</button>\r\n              <button className=\"w-full px-3 py-1 text-white bg-cyan-300 hover:bg-cyan-500 md:w-auto text-sm/6\" onClick={handleExcelDownload}>Excel</button>\r\n              <button className=\"w-full px-3 py-1 text-white bg-cyan-300 hover:bg-cyan-500 md:w-auto text-sm/6\" onClick={handlePdfDownload}>PDF</button>\r\n              <button className=\"w-full px-3 py-1 text-white bg-cyan-300 hover:bg-cyan-500 md:w-auto text-sm/6\" onClick={handlePrint}>Print</button>\r\n              <button className=\"w-full px-3 py-1 text-white bg-cyan-300 hover:bg-cyan-500 md:w-auto text-sm/6\" onClick={handleCsvDownload}>CSV</button>\r\n              <input type=\"text\" placeholder=\"Search\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className=\"px-2 py-2 border rounded\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-2 overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white border border-gray-300 shadow-sm\">\r\n              <thead>\r\n                <tr className=\"bg-gray-400\">\r\n                  {['Quotation Date', 'Expire Date', 'Quotation Code', 'Reference No.', 'Customer Name', 'Total', 'Created by', 'Action'].map(header => (\r\n                    <th key={header} className=\"px-4 py-2 text-left border text-sm/6 sm:text-sm\">{header}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentUsers.length <= 0 ? (\r\n                  <tr><td colSpan=\"8\" className=\"p-4 text-center text-gray-500 border\">No data available in table</td></tr>\r\n                ) : (\r\n                  currentUsers.map((quotation) => (\r\n                    <tr className=\"bg-gray-100\" key={quotation._id}>\r\n                      <td className=\"text-center border\">{new Date(quotation.quotationDate).toDateString()}</td>\r\n                      <td className=\"text-center border\">{quotation.expiryDate ? new Date(quotation.expiryDate).toDateString() : 'N/A'}</td>\r\n                      <td className=\"text-center border\">{quotation.quotationCode}</td>\r\n                      <td className=\"text-center border\">{quotation.referenceNo}</td>\r\n                      <td className=\"text-center border\">{quotation.customer?.customerName || \"NA\"}</td>\r\n                      <td className=\"text-center border\">{quotation.grandTotal}</td>\r\n                      <td className=\"text-center border\">NA</td>\r\n                      <td className=\"text-center border relative\">\r\n                        <button\r\n                          className=\"px-2 py-1 text-white bg-gray-500 rounded hover:bg-gray-600\"\r\n                          onClick={() => toggleDropdown(quotation._id)}\r\n                        >\r\n                          Action\r\n                        </button>\r\n                        {dropdownOpen === quotation._id && (\r\n                          <div className=\"absolute z-10 right-0 mt-2 w-32 bg-white border rounded shadow-lg\">\r\n                            <button\r\n                              className=\"block w-full text-left px-4 py-2 text-blue-600 hover:bg-gray-100\"\r\n                              onClick={() => {\r\n                                navigate(`/quotation/edit/${quotation._id}`);\r\n                                setDropdownOpen(null);\r\n                              }}\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                              className=\"block w-full text-left px-4 py-2 text-red-600 hover:bg-gray-100\"\r\n                              onClick={() => {\r\n                                handleDelete(quotation._id);\r\n                                setDropdownOpen(null);\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n              {currentUsers.length > 0 && (\r\n                <tfoot>\r\n                  <tr className=\"gap-1\">\r\n                    {['', '', '', '', 'Total', total, '', ''].map((footer, index) => (\r\n                      <td key={index} className={`border px-4 py-2 font-bold bg-gray-400 ${index === 4 ? 'text-right' : 'text-left'}`}>\r\n                        {footer}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                </tfoot>\r\n              )}\r\n            </table>\r\n          </div>\r\n          <div className=\"flex items-center justify-between mt-4\">\r\n            <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, qoutation.length)} of {qoutation.length} entries</span>\r\n            <div>\r\n              <button onClick={() => handlePageChange(currentPage - 1)} className=\"px-4 py-2 mr-2 text-gray-600 bg-gray-300 disabled:opacity-50\" disabled={currentPage === 1}>\r\n                Previous\r\n              </button>\r\n              <button onClick={() => handlePageChange(currentPage + 1)} className=\"px-4 py-2 text-gray-600 bg-gray-300 disabled:opacity-50\" disabled={currentPage === totalPages}>\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotationList;","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  "],"names":["QuotationList","navigate","useNavigate","users","setUsers","useState","entriesPerPage","setEntriesPerPage","searchTerm","setSearchTerm","isSidebarOpen","setSidebarOpen","warehouses","setWarehouses","qoutation","setQoutation","startDate","setStartDate","endDate","setEndDate","warehouse","setWarehouse","total","setTotal","currentPage","setCurrentPage","loading","setLoading","dropdownOpen","setDropdownOpen","useEffect","window","innerWidth","fetchQuotation","async","token","localStorage","getItem","response","axios","get","headers","Authorization","data","error","alert","message","console","log","newwarehouse","label","value","map","warehouseName","_id","fetchWarehouses","filteredData","filter","item","_item$warehouse","_item$customer","_item$customer$custom","warehouseCondition","customerCondition","customer","customerName","toLowerCase","includes","start","quotationDate","Date","toDateString","end","reduce","sum","quote","grandTotal","totalPages","Math","ceil","length","currentUsers","slice","handlePageChange","newPage","_jsx","LoadingScreen","_jsxs","className","children","Navbar","Sidebar","href","FaTachometerAlt","BiChevronRight","onClick","Select","options","onChange","selectedOption","type","e","target","Number","handleCopy","quotation","_quotation$customer","expiryDate","quotationCode","referenceNo","join","navigator","clipboard","writeText","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","_quotation$customer2","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","exp","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","placeholder","header","colSpan","_quotation$customer3","toggleDropdown","id","confirm","delete","handleDelete","footer","index","min","disabled"],"sourceRoot":""}