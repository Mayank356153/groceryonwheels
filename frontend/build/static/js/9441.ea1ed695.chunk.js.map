{"version":3,"file":"static/js/9441.ea1ed695.chunk.js","mappings":"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","sources":["components/store/StoreView.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst StoreView = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [stores, setStores] = useState([]);\r\n  const [actionMenu, setActionMenu] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [popupPosition, setPopupPosition] = useState({ top: 0, left: 0 });\r\n  const navigate = useNavigate();\r\n  const menuRef = useRef(null); // Ref for outside click detection\r\n  const buttonRefs = useRef({}); // Store refs for each action button\r\n  const menuRefs = useRef({});\r\n\r\n  // Close menu when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setActionMenu(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // Fetch store list from the API\r\n  useEffect(() => {\r\n    const fetchStores = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        setError(\"No authentication token found. Please log in.\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(\"/admin/store/add/store\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch stores: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log(\"Fetched stores data:\", data);\r\n        const storeList = Array.isArray(data) ? data : data.result || data.stores || [];\r\n        if (!storeList.length) {\r\n          console.warn(\"No stores found in response\");\r\n        }\r\n        setStores(storeList);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error(\"Error fetching stores:\", error);\r\n        setError(\"Failed to load stores. Please try again.\");\r\n      }\r\n    };\r\n    fetchStores();\r\n  }, []);\r\n\r\n  // Pagination calculations\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentStores = stores.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(stores.length / itemsPerPage);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Toggle the action dropdown and calculate position\r\n  const toggleActionMenu = (storeId, event) => {\r\n    if (actionMenu === storeId) {\r\n      setActionMenu(null);\r\n      return;\r\n    }\r\n    setActionMenu(storeId);\r\n\r\n    // Calculate popup position\r\n    const button = buttonRefs.current[storeId];\r\n    if (button) {\r\n      const rect = button.getBoundingClientRect();\r\n      const popupWidth = 192; // w-48 in Tailwind (48 * 4px)\r\n      const popupHeight = 160; // Approximate height (4 items * ~40px)\r\n      const viewportWidth = window.innerWidth;\r\n      const viewportHeight = window.innerHeight;\r\n\r\n      let top = rect.bottom + 8; // 8px below button\r\n      let left = rect.right - popupWidth; // Align right edge with button's right\r\n\r\n      // Adjust if popup would go off-screen\r\n      if (left < 8) left = 8; // Keep 8px from left edge\r\n      if (top + popupHeight > viewportHeight - 8) {\r\n        top = rect.top - popupHeight - 8; // Move above button\r\n      }\r\n      if (top < 8) top = 8; // Keep 8px from top edge\r\n\r\n      setPopupPosition({ top, left });\r\n    }\r\n  };\r\n\r\n  // Handle delete store\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this store?\")) return;\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(`/admin/store/store/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete store\");\r\n      }\r\n      alert(\"Store deleted successfully!\");\r\n      const res = await fetch(\"/admin/store/add/store\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (!res.ok) {\r\n        throw new Error(\"Failed to fetch stores after deletion\");\r\n      }\r\n      const data = await res.json();\r\n      const storeList = Array.isArray(data) ? data : data.result || data.stores || [];\r\n      setStores(storeList);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting store:\", error.message);\r\n      alert(`Error: ${error.message}`);\r\n      setError(\"Failed to delete store. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow bg-gray-200\">\r\n        {/* Sidebar */}\r\n        <div className=\"w-auto\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        {/* Main Content */}\r\n        <div className=\"w-full p-8 mx-auto bg-white\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h1 className=\"text-2xl font-bold\">\r\n              Store List\r\n              <span className=\"text-black text-[16px]\">View/Search Items Store</span>\r\n            </h1>\r\n            <button\r\n              className=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-600 transition-colors duration-200\"\r\n              onClick={() => navigate(\"/store/add\")}\r\n            >\r\n              + Create Store\r\n            </button>\r\n          </div>\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"mb-4 p-4 bg-red-100 text-red-700 rounded\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          {/* Items per page dropdown */}\r\n          <div className=\"flex justify-start mb-4\">\r\n            <label className=\"mr-2 font-semibold text-gray-700\">Items per page:</label>\r\n            <select\r\n              className=\"px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              value={itemsPerPage}\r\n              onChange={(e) => {\r\n                setItemsPerPage(Number(e.target.value));\r\n                setCurrentPage(1);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"75\">75</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"relative\">\r\n            {/* Store table */}\r\n            <table className=\"w-full border-collapse\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                  <th className=\"px-4 py-2 text-left\">#</th>\r\n                  <th className=\"px-4 py-2 text-left\">Store Code</th>\r\n                  <th className=\"px-4 py-2 text-left\">Store Name</th>\r\n                  <th className=\"px-4 py-2 text-left\">Mobile</th>\r\n                  <th className=\"px-4 py-2 text-left\">Address</th>\r\n                  <th className=\"px-4 py-2 text-left\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {stores.length === 0 && !error ? (\r\n                  <tr>\r\n                    <td colSpan=\"6\" className=\"px-4 py-2 text-center\">\r\n                      No stores found.\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  currentStores.map((store, index) => (\r\n                    <tr key={store._id || index} className=\"relative border-b hover:bg-gray-50\">\r\n                      <td className=\"px-4 py-2\">{indexOfFirstItem + index + 1}</td>\r\n                      <td className=\"px-4 py-2\">{store.StoreCode || \"N/A\"}</td>\r\n                      <td className=\"px-4 py-2\">{store.StoreName || \"N/A\"}</td>\r\n                      <td className=\"px-4 py-2\">{store.Mobile || \"N/A\"}</td>\r\n                      <td className=\"px-4 py-2\">{store.Address || \"N/A\"}</td>\r\n                      <td className=\"px-4 py-2\">\r\n  <div>\r\n    <button\r\n      ref={(el) => (buttonRefs.current[store._id] = el)}\r\n      className=\"px-3 py-1.5 font-semibold text-white bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n      onClick={(e) => toggleActionMenu(store._id, e)}\r\n    >\r\n      Action\r\n    </button>\r\n    {actionMenu === store._id && (\r\n      <div\r\n        ref={(el) => (menuRefs.current[store._id] = el)} // Unique ref for each dropdown\r\n        className=\"fixed bg-white border border-gray-200 rounded-lg shadow-xl z-[100] w-48 animate-slide-in\"\r\n        style={{\r\n          top: `${popupPosition.top}px`,\r\n          left: `${popupPosition.left}px`,\r\n          animation: \"slideIn 0.15s ease-in-out forwards\",\r\n        }}\r\n      >\r\n        <button\r\n          className=\"w-full px-4 py-2 text-left text-gray-700 hover:bg-blue-50 hover:text-blue-600 transition-colors duration-150\"\r\n          onClick={(e) => {\r\n            e.stopPropagation(); // Prevent event bubbling\r\n            setActionMenu(null); // Close dropdown\r\n            navigate(`/admin/store/edit?id=${store._id}`);\r\n          }}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          className=\"w-full px-4 py-2 text-left text-red-600 hover:bg-red-50 hover:text-red-700 transition-colors duration-150\"\r\n          onClick={(e) => {\r\n            e.stopPropagation(); // Prevent event bubbling\r\n            setActionMenu(null); // Close dropdown\r\n            handleDelete(store._id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          className=\"w-full px-4 py-2 text-left text-blue-600 hover:bg-blue-50 hover:text-blue-700 transition-colors duration-150\"\r\n          onClick={(e) => {\r\n            e.stopPropagation(); // Prevent event bubbling\r\n            setActionMenu(null); // Close dropdown\r\n            navigate(`/subscription-list?storeId=${store._id}`);\r\n          }}\r\n        >\r\n          View Subscriptions\r\n        </button>\r\n        <button\r\n          className=\"w-full px-4 py-2 text-left text-blue-600 hover:bg-blue-50 hover:text-blue-700 transition-colors duration-150\"\r\n          onClick={(e) => {\r\n            e.stopPropagation(); // Prevent event bubbling\r\n            setActionMenu(null); // Close dropdown\r\n            navigate(`/add-subscription?storeId=${store._id}`);\r\n          }}\r\n        >\r\n          Add Subscription\r\n        </button>\r\n      </div>\r\n    )}\r\n  </div>\r\n</td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Pagination controls */}\r\n          {stores.length > 0 && (\r\n            <div className=\"flex justify-center mt-4\">\r\n              {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNumber) => (\r\n                <button\r\n                  key={pageNumber}\r\n                  className={`mx-1 px-4 py-2 rounded-lg transition-colors duration-200 ${\r\n                    currentPage === pageNumber\r\n                      ? \"bg-blue-500 text-white\"\r\n                      : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n                  }`}\r\n                  onClick={() => handlePageChange(pageNumber)}\r\n                >\r\n                  {pageNumber}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreView;"],"names":["StoreView","isSidebarOpen","setSidebarOpen","useState","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","stores","setStores","actionMenu","setActionMenu","error","setError","popupPosition","setPopupPosition","top","left","navigate","useNavigate","menuRef","useRef","buttonRefs","menuRefs","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","async","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","statusText","data","json","console","log","storeList","Array","isArray","result","length","warn","fetchStores","indexOfLastItem","indexOfFirstItem","currentStores","slice","totalPages","Math","ceil","_jsxs","className","children","_jsx","Navbar","Sidebar","onClick","value","onChange","e","Number","map","store","index","StoreCode","StoreName","Mobile","Address","ref","el","_id","toggleActionMenu","storeId","button","rect","getBoundingClientRect","popupWidth","popupHeight","viewportHeight","window","innerWidth","innerHeight","bottom","right","style","animation","stopPropagation","confirm","id","method","alert","res","message","handleDelete","colSpan","from","_","i","pageNumber","handlePageChange"],"sourceRoot":""}