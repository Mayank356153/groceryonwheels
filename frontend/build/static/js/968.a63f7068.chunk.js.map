{"version":3,"file":"static/js/968.a63f7068.chunk.js","mappings":"+PA8QA,QAlQA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,OACVC,EAAeC,IAAkBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,KACtCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,IAG/CS,EAAAA,EAAAA,YAAU,KACJC,OAAOC,WAAa,KAAKZ,GAAe,EAAM,GACjD,IAGH,MAAMa,EAAiBC,UACrB,IACE,MAAMC,EAAQC,aAAaC,QAAQ,SAC7BC,QAAYC,EAAAA,EAAMC,IACtB,gBACA,CAAEC,QAAS,CAAEC,cAAe,UAAUP,OAExCZ,EAAae,EAAIK,KAAKA,MAAQ,GAChC,CAAE,MAAOC,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GASF,IANAd,EAAAA,EAAAA,YAAU,KACRG,GAAgB,GACf,IAIU,UADAG,aAAaC,QAAQ,QAEhC,OAAOS,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,aAAaC,SAAO,IAI1C,MAqBMC,EAAW5B,EAAU6B,QAAQC,GACjCA,EAAEC,YAAYC,cAAcC,SAAS/B,EAAW8B,iBAE5CE,EAAO5B,EAAcF,EACrB+B,EAAQD,EAAO9B,EACfgC,EAAeR,EAASS,MAAMF,EAAOD,GACrCI,EAAaC,KAAKC,KAAKZ,EAASa,OAASrC,GAEzCsC,EAAYC,IACZA,GAAQ,GAAKA,GAAQL,GAAY/B,EAAeoC,EAAK,EAkD3D,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAAClD,cAAeA,EAAeC,eAAgBA,KACtD8C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BtB,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAACnD,cAAeA,KACxB+C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EAErEF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,uFAAsFC,SAAA,EACtGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,wBAAuBC,SAAC,kBACtCtB,EAAAA,EAAAA,KAAA,QAAMqB,UAAU,wBAAuBC,SAAC,oBAE1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCC,SAAA,EACtDF,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACvB,GAAG,aAAamB,UAAU,wCAAuCC,SAAA,EACxEtB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAe,CAACL,UAAU,SAAS,YAEtCrB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAc,CAACN,UAAU,UAC1BrB,EAAAA,EAAAA,KAAA,QAAAsB,SAAM,wBAIVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACrEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,wBAAuBC,SAAC,eACtCtB,EAAAA,EAAAA,KAAA,UACE4B,QAASA,IAAMzD,EAAS,gBACxBkD,UAAU,2CAA0CC,SACrD,sBAMHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACxDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCtB,EAAAA,EAAAA,KAAA,QAAAsB,SAAM,UACNtB,EAAAA,EAAAA,KAAA,UACEqB,UAAU,qBACVQ,MAAOjD,EACPkD,SAAWC,IAAQlD,GAAYkD,EAAEC,OAAOH,OAAQ9C,EAAe,EAAE,EAAIuC,SAEpE,CAAC,GAAG,GAAG,IAAIW,KAAIC,IAAKlC,EAAAA,EAAAA,KAAA,UAAAsB,SAAiBY,GAAJA,QAEpClC,EAAAA,EAAAA,KAAA,QAAAsB,SAAM,gBAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCtB,EAAAA,EAAAA,KAAA,UAAQ4B,QA5FHO,KACjB,MAAMC,EAAOhC,EAAS6B,KAAK3B,GAAM,GAAGA,EAAEC,eAAeD,EAAE+B,eAAe/B,EAAEgC,WAAUC,KAAK,MACvFC,UAAUC,UAAUC,UAAUN,GAC9BO,MAAM,sBAAsB,EAyFatB,UAAU,2CAA0CC,SAAC,UAClFtB,EAAAA,EAAAA,KAAA,UAAQ4B,QAxFMgB,KAC1B,MAAMC,EAAKC,EAAAA,MAAWC,cAAc3C,GAC9B4C,EAAKF,EAAAA,MAAWG,WACtBH,EAAAA,MAAWI,kBAAkBF,EAAIH,EAAI,aACrCC,EAAAA,UAAeE,EAAI,iBAAiB,EAoFc3B,UAAU,2CAA0CC,SAAC,WAC3FtB,EAAAA,EAAAA,KAAA,UAAQ4B,QAnFIuB,KACxB,MAAMC,EAAM,IAAIC,EAAAA,GAChBD,EAAIhB,KAAK,iBAAkB,GAAI,KAC/BkB,EAAAA,EAAAA,IAAUF,EAAK,CACbG,KAAM,CAAC,CAAC,OAAQ,OAAQ,WACxBC,KAAMpD,EAAS6B,KAAK3B,GAAM,CAACA,EAAEC,YAAaD,EAAE+B,YAAa/B,EAAEgC,YAE7Dc,EAAIK,KAAK,gBAAgB,EA4EuBpC,UAAU,2CAA0CC,SAAC,SACzFtB,EAAAA,EAAAA,KAAA,UAAQ4B,QA3EF8B,IAAMzE,OAAO0E,QA2EWtC,UAAU,2CAA0CC,SAAC,WACnFtB,EAAAA,EAAAA,KAAA,UAAQ4B,QA3EIgC,KACxB,MAAMC,EAAM,+BACVzD,EAAS6B,KAAK3B,GAAM,GAAGA,EAAEC,eAAeD,EAAE+B,eAAe/B,EAAEgC,WAAUC,KAAK,MACtEuB,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,UAAUL,GACtBC,EAAKK,SAAW,gBAChBJ,SAASP,KAAKY,YAAYN,GAC1BA,EAAKO,QACLN,SAASP,KAAKc,YAAYR,EAAK,EAmEiBzC,UAAU,2CAA0CC,SAAC,SACzFtB,EAAAA,EAAAA,KAAA,SACEuE,KAAK,OACLC,YAAY,SACZnD,UAAU,qBACVQ,MAAOnD,EACPoD,SAAWC,GAAMpD,EAAcoD,EAAEC,OAAOH,gBAM9C7B,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qDAAoDC,SAAA,EACnEtB,EAAAA,EAAAA,KAAA,SAAOqB,UAAU,cAAaC,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,mBAAkBC,SAAC,UACjCtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,mBAAkBC,SAAC,UACjCtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,mBAAkBC,SAAC,YACjCtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,mBAAkBC,SAAC,iBAGrCtB,EAAAA,EAAAA,KAAA,SAAAsB,SAC2B,IAAxBV,EAAaK,QACZjB,EAAAA,EAAAA,KAAA,MAAAsB,UACEtB,EAAAA,EAAAA,KAAA,MAAIyE,QAAQ,IAAIpD,UAAU,iCAAgCC,SAAC,iBAE3DV,EAAaqB,KAAK3B,IACpBc,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,WAAUC,SAAA,EAClCtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,YAAWC,SAAEhB,EAAEC,eAC7BP,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,YAAWC,SAAEhB,EAAE+B,eAC7BrC,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,YAAWC,UACvBtB,EAAAA,EAAAA,KAAA,UACE4B,QAASA,IAnKZxC,OAAOsF,EAAIC,KAC9B,MAAMC,EAA8B,WAAlBD,EAA6B,WAAa,SAC5D,IACE,MAAMtF,EAAQC,aAAaC,QAAQ,eAC7BE,EAAAA,EAAMoF,IACV,iBAAiBH,IACjB,CAAEpC,OAAQsC,GACV,CAAEjF,QAAS,CAAEC,cAAe,UAAUP,OAExCZ,GAAcqG,GACZA,EAAK7C,KAAK3B,GACRA,EAAEyE,MAAQL,EAAK,IAAKpE,EAAGgC,OAAQsC,GAActE,KAGnD,CAAE,MAAO0E,GACPjF,QAAQD,MAAM,sBAAuBkF,EAAIC,UAAYD,GACrDrC,MAAM,2BACR,GAkJqCuC,CAAa5E,EAAEyE,IAAKzE,EAAEgC,QACrCjB,UAAW,qBACI,WAAbf,EAAEgC,OAAsB,eAAiB,0BAC7BhB,SAEbhB,EAAEgC,YAGPlB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,YAAWC,SAAA,EACvBtB,EAAAA,EAAAA,KAAA,UACE4B,QAASA,IAAMzD,EAAS,iBAAiBmC,EAAEyE,OAC3C1D,UAAU,gDAA+CC,SAC1D,UAGDtB,EAAAA,EAAAA,KAAA,UACE4B,QAASA,IAlHZxC,WACnB,GAAKH,OAAOkG,QAAQ,wBACpB,IACE,MAAM9F,EAAQC,aAAaC,QAAQ,eAC7BE,EAAAA,EAAM2F,OACV,iBAAiBV,IACjB,CAAE/E,QAAS,CAAEC,cAAe,UAAUP,OAExCsD,MAAM,WACNxD,GACF,CAAE,MAAOW,GACPC,QAAQD,MAAM,kBAAmBA,EACnC,GAsGqCuF,CAAa/E,EAAEyE,KAC9B1D,UAAU,0CAAyCC,SACpD,gBAvBIhB,EAAEyE,eAkCnB3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,WACKX,EAAQ,EAAE,OAAKI,KAAKuE,IAAI5E,EAAMN,EAASa,QAAQ,OAAKb,EAASa,OAAO,eAE/EG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBtB,EAAAA,EAAAA,KAAA,UACE4B,QAASA,IAAMV,EAASpC,EAAc,GACtCyG,SAA0B,IAAhBzG,EACVuC,UAAU,oDAAmDC,SAC9D,cAGDtB,EAAAA,EAAAA,KAAA,UACE4B,QAASA,IAAMV,EAASpC,EAAc,GACtCyG,SAAU7E,GAAQN,EAASa,OAC3BI,UAAU,oDAAmDC,SAC9D,0BAUjB,C","sources":["components/Places/CountryList.jsx"],"sourcesContent":["// src/components/Countries/CountryList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Navigate, useNavigate, NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport axios from \"axios\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction CountryList() {\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [countries, setCountries] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entries, setEntries] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // collapse sidebar on small screens\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // fetch all countries\r\n  const fetchCountries = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\r\n        \"api/countries\",\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setCountries(res.data.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching countries:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  // only admins allowed\r\n  const role = localStorage.getItem(\"role\");\r\n  if (role !== \"admin\") {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // toggle between active/inactive via PUT\r\n  const toggleStatus = async (id, currentStatus) => {\r\n    const newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.put(\r\n        `api/countries/${id}`,\r\n        { status: newStatus },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setCountries((prev) =>\r\n        prev.map((c) =>\r\n          c._id === id ? { ...c, status: newStatus } : c\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(\"toggleStatus error:\", err.response || err);\r\n      alert(\"Unable to change status.\");\r\n    }\r\n  };\r\n\r\n  // filter & paginate\r\n  const filtered = countries.filter((c) =>\r\n    c.countryName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const last = currentPage * entries;\r\n  const first = last - entries;\r\n  const currentItems = filtered.slice(first, last);\r\n  const totalPages = Math.ceil(filtered.length / entries);\r\n\r\n  const paginate = (page) => {\r\n    if (page >= 1 && page <= totalPages) setCurrentPage(page);\r\n  };\r\n\r\n  // export handlers...\r\n  const handleCopy = () => {\r\n    const text = filtered.map((c) => `${c.countryName},${c.countryCode},${c.status}`).join(\"\\n\");\r\n    navigator.clipboard.writeText(text);\r\n    alert(\"Copied to clipboard\");\r\n  };\r\n  const handleExcelDownload = () => {\r\n    const ws = XLSX.utils.json_to_sheet(filtered);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Countries\");\r\n    XLSX.writeFile(wb, \"countries.xlsx\");\r\n  };\r\n  const handlePdfDownload = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Countries List\", 20, 20);\r\n    autoTable(doc, {\r\n      head: [[\"Name\", \"Code\", \"Status\"]],\r\n      body: filtered.map((c) => [c.countryName, c.countryCode, c.status])\r\n    });\r\n    doc.save(\"countries.pdf\");\r\n  };\r\n  const handlePrint = () => window.print();\r\n  const handleCsvDownload = () => {\r\n    const csv = \"data:text/csv;charset=utf-8,\" +\r\n      filtered.map((c) => `${c.countryName},${c.countryCode},${c.status}`).join(\"\\n\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = encodeURI(csv);\r\n    link.download = \"countries.csv\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Delete this country?\")) return;\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.delete(\r\n        `api/countries/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      alert(\"Deleted\");\r\n      fetchCountries();\r\n    } catch (error) {\r\n      console.error(\"Error deleting:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className=\"overflow-x-auto p-4 w-full transition-all duration-300\">\r\n          {/* header & breadcrumbs */}\r\n          <header className=\"flex justify-between p-4 mb-2 bg-gray-100 rounded shadow sm:flex-row sm:items-center\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <h1 className=\"text-lg font-semibold\">Country List</h1>\r\n              <span className=\"text-sm text-gray-600\">View/Search</span>\r\n            </div>\r\n            <nav className=\"flex items-center text-xs text-gray-500\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-1\" /> Home\r\n              </NavLink>\r\n              <BiChevronRight className=\"mx-1\" />\r\n              <span>Country List</span>\r\n            </nav>\r\n          </header>\r\n\r\n          <div className=\"p-4 bg-white border-t-4 border-cyan-500 rounded shadow\">\r\n            <div className=\"flex justify-between mb-4\">\r\n              <h2 className=\"text-lg font-semibold\">Countries</h2>\r\n              <button\r\n                onClick={() => navigate(\"/add-country\")}\r\n                className=\"px-4 py-2 text-white bg-cyan-500 rounded\"\r\n              >\r\n                + New Country\r\n              </button>\r\n            </div>\r\n\r\n            {/* controls */}\r\n            <div className=\"flex flex-wrap justify-between mb-4 gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                <span>Show</span>\r\n                <select\r\n                  className=\"p-1 border rounded\"\r\n                  value={entries}\r\n                  onChange={(e) => { setEntries(+e.target.value); setCurrentPage(1); }}\r\n                >\r\n                  {[10,20,50].map(n => <option key={n}>{n}</option>)}\r\n                </select>\r\n                <span>entries</span>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                <button onClick={handleCopy} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">PDF</button>\r\n                <button onClick={handlePrint} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"px-2 py-1 bg-cyan-500 text-white rounded\">CSV</button>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"p-1 border rounded\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* table */}\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white border-collapse rounded shadow\">\r\n                <thead className=\"bg-gray-200\">\r\n                  <tr>\r\n                    <th className=\"px-4 py-2 border\">Name</th>\r\n                    <th className=\"px-4 py-2 border\">Code</th>\r\n                    <th className=\"px-4 py-2 border\">Status</th>\r\n                    <th className=\"px-4 py-2 border\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentItems.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"4\" className=\"py-4 text-center text-gray-500\">No records</td>\r\n                    </tr>\r\n                  ) : currentItems.map((c) => (\r\n                    <tr key={c._id} className=\"border-b\">\r\n                      <td className=\"px-4 py-2\">{c.countryName}</td>\r\n                      <td className=\"px-4 py-2\">{c.countryCode}</td>\r\n                      <td className=\"px-4 py-2\">\r\n                        <button\r\n                          onClick={() => toggleStatus(c._id, c.status)}\r\n                          className={`px-2 py-1 rounded ${\r\n                            c.status === \"active\" ? \"bg-green-500\" : \"bg-red-500\"\r\n                          } text-white`}\r\n                        >\r\n                          {c.status}\r\n                        </button>\r\n                      </td>\r\n                      <td className=\"px-4 py-2\">\r\n                        <button\r\n                          onClick={() => navigate(`/edit-country/${c._id}`)}\r\n                          className=\"px-2 py-1 mr-2 bg-cyan-600 text-white rounded\"\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDelete(c._id)}\r\n                          className=\"px-2 py-1 bg-red-600 text-white rounded\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* pagination */}\r\n            <div className=\"flex justify-between items-center mt-4\">\r\n              <span>\r\n                Showing {first + 1} to {Math.min(last, filtered.length)} of {filtered.length} entries\r\n              </span>\r\n              <div className=\"space-x-2\">\r\n                <button\r\n                  onClick={() => paginate(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-2 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={() => paginate(currentPage + 1)}\r\n                  disabled={last >= filtered.length}\r\n                  className=\"px-2 py-1 bg-gray-300 rounded disabled:opacity-50\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n"],"names":["navigate","useNavigate","isSidebarOpen","setSidebarOpen","useState","countries","setCountries","searchTerm","setSearchTerm","entries","setEntries","currentPage","setCurrentPage","useEffect","window","innerWidth","fetchCountries","async","token","localStorage","getItem","res","axios","get","headers","Authorization","data","error","console","_jsx","Navigate","to","replace","filtered","filter","c","countryName","toLowerCase","includes","last","first","currentItems","slice","totalPages","Math","ceil","length","paginate","page","_jsxs","className","children","Navbar","Sidebar","NavLink","FaTachometerAlt","BiChevronRight","onClick","value","onChange","e","target","map","n","handleCopy","text","countryCode","status","join","navigator","clipboard","writeText","alert","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csv","link","document","createElement","href","encodeURI","download","appendChild","click","removeChild","type","placeholder","colSpan","id","currentStatus","newStatus","put","prev","_id","err","response","toggleStatus","confirm","delete","handleDelete","min","disabled"],"sourceRoot":""}