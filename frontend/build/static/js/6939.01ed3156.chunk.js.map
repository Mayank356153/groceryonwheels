{"version":3,"file":"static/js/6939.01ed3156.chunk.js","mappings":"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","sources":["Loading.jsx","components/Reports/ItemTransfer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React ,{useState,useEffect,useRef, use}from 'react'\r\nimport Sidebar from '../Sidebar';\r\nimport Navbar from '../Navbar';\r\nimport { Navigate, NavLink, useNavigate } from 'react-router-dom';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport { CameraIcon } from \"@heroicons/react/solid\";\r\nimport Select from 'react-select'\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nexport default function ItemTransfer() {\r\n  const [showExportDropdown, setShowExportDropdown] = useState(false)\r\n   const[isSidebarOpen,setSidebarOpen]=useState(true)\r\n   const[loading,setLoading]=useState(true)\r\n   const[allItems,setAllItems]=useState([])\r\n   const[sales,setSales]=useState([])\r\n   const[stockTransfer,setStockTransfer]=useState([])\r\n   const[items,setItems]=useState([])\r\n   const[options,setOptions]=useState({\r\n    warehouses:[],\r\n   })\r\n   useEffect(()=>{\r\n    if(window.innerWidth<768){\r\n      setSidebarOpen(false)\r\n    }\r\n   },[])\r\n   const Navigate=useNavigate();\r\n   const[SelectedWarehouse,setSelectedWarehouse]=useState(\"\")\r\n   const[resultItems,setResultItems]=useState([])\r\n   const[view,setView]=useState(false)\r\n\r\n\r\n   const[filteredSales,setFilteredSales]=useState([])\r\n   const[filteredStock,setFilteredStock]=useState([])\r\n   const fetchWarehouses=async()=>{\r\n    try {\r\n      setLoading(true)\r\n      const response = await axios.get('api/warehouses', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     \r\n  \r\n     const warehouses =response.data.data.map((warehouse)=>({\r\n      label:warehouse.warehouseName,\r\n      value:warehouse._id\r\n     }))\r\n       setOptions((prev)=>({\r\n        ...prev,\r\n        warehouses:warehouses\r\n       }))\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n  const[dateFrom,setDateFrom]=useState(\"all\")   \r\n  const[dateTo,setDateTo]=useState(\"all\")   \r\n\r\n \r\n   const fetchSales=async()=>{\r\n    try {\r\n      setLoading(true)\r\n      const response = await axios.get('api/sales', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     console.log(\"sale\")\r\n   console.log(response.data)\r\n   setSales(response.data.sales)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n   \r\n   const fetchStockTransfer=async()=>{\r\n    try {\r\n      setLoading(true)\r\n      const response = await axios.get('api/stock-transfers', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     console.log(\"transfer\")\r\n     console.log(response.data)\r\n   setStockTransfer(response.data.data)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n   \r\n   useEffect(()=>{\r\n    fetchWarehouses();\r\n    fetchSales();\r\n    fetchStockTransfer();\r\n   },[])\r\n\r\n  //  function getFilteredGroupedItems(sales, SelectedWarehouse) {\r\n  //       const WarehouseSales=sales.filter(sale=>sale.warehouse?._id===SelectedWarehouse)\r\n          \r\n  //       return WarehouseSales;\r\n  // }\r\n\r\n  \r\n  // function getFilteredGroupedItems(sales, selectedWarehouse) {\r\n  //   // Validate inputs\r\n  //   if (!Array.isArray(sales) || !selectedWarehouse) {\r\n  //     return [];\r\n  //   }\r\n  \r\n  //   // Filter sales by warehouse and extract items\r\n  //   const items = sales\r\n  //     .filter(sale => \r\n  //       sale?.warehouse?._id?.toString() === selectedWarehouse.toString()\r\n  //     )\r\n  //     .flatMap(sale => \r\n  //       Array.isArray(sale.items) \r\n  //         ? sale.items.map(item => ({\r\n  //             ...item,\r\n  //             saleDate: sale.saleDate,\r\n  //             saleCode: sale.saleCode,\r\n  //             customer: sale.customer\r\n  //           }))\r\n  //         : []\r\n  //     );\r\n  \r\n  //   return items;\r\n  // }\r\n\r\n  \r\n  \r\n\r\n\r\n  const filteredItems = sales.filter((transfer) => {\r\n    const { warehouse, saleDate } = transfer;\r\n  \r\n    const warehouseMatch = warehouse && warehouse._id === SelectedWarehouse;\r\n  \r\n    const date = new Date(saleDate);\r\n    const from = new Date(dateFrom);\r\n    const to = new Date(dateTo);\r\n  \r\n    const dateMatch = date >= from && date <= to;\r\n  \r\n    return warehouseMatch && dateMatch;\r\n  });\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  const filteredItems2 = stockTransfer.filter((transfer) => {\r\n    const { toWarehouse, transferDate } = transfer;\r\n  \r\n    const warehouseMatch =\r\n      toWarehouse && toWarehouse._id === SelectedWarehouse;\r\n  \r\n    const date = new Date(transferDate);\r\n    const from = new Date(dateFrom);\r\n    const to = new Date(dateTo);\r\n  \r\n    const dateMatch = date >= from && date <= to;\r\n  \r\n    return warehouseMatch && dateMatch;\r\n  });\r\n  \r\n  \r\n  \r\n  \r\n  const handleCompare=(e)=>{\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true)\r\n      setView(false)\r\n      if(!SelectedWarehouse){\r\n        alert(\"one of the warehouse is not selected\")\r\n        return;\r\n      }\r\n      \r\n   setFilteredSales(filteredItems)\r\n   console.log(filteredItems2)\r\n   setFilteredStock(filteredItems2)\r\n   function getItemsTransferredMoreThanSold(filteredTransfers, filteredSales) {\r\n    const transferMap = new Map();\r\n    const salesMap = new Map();\r\n  \r\n    // 1. Aggregate transferred quantities\r\n    filteredTransfers.forEach(transfer => {\r\n      (transfer.items || []).forEach(it => {\r\n        const id = it.item?._id;\r\n        if (!id) return;\r\n  \r\n        const qty = it.quantity || 0;\r\n        const itemName = it.item?.itemName || 'Unnamed Item';\r\n  \r\n        if (transferMap.has(id)) {\r\n          const existing = transferMap.get(id);\r\n          existing.transferred += qty;\r\n        } else {\r\n          transferMap.set(id, {\r\n            _id: id,\r\n            itemName,\r\n            transferred: qty,\r\n            sold: 0\r\n          });\r\n        }\r\n      });\r\n    });\r\n  \r\n    // 2. Aggregate sold quantities\r\n    filteredSales.forEach(sale => {\r\n      (sale.items || []).forEach(item => {\r\n        const id = item.item?._id || item._id;\r\n        if (!id) return;\r\n  \r\n        const qty = item.quantity || 0;\r\n        const itemName = item.item?.itemName || item.itemName || 'Unnamed Item';\r\n  \r\n        if (transferMap.has(id)) {\r\n          const existing = transferMap.get(id);\r\n          existing.sold += qty;\r\n        } else if (salesMap.has(id)) {\r\n          const existing = salesMap.get(id);\r\n          existing.sold += qty;\r\n        } else {\r\n          salesMap.set(id, {\r\n            _id: id,\r\n            itemName,\r\n            transferred: 0,\r\n            sold: qty\r\n          });\r\n        }\r\n      });\r\n    });\r\n  \r\n    // 3. Combine results\r\n    const result = [];\r\n  \r\n    // Case 1: Items with transferred < sold\r\n    for (const entry of transferMap.values()) {\r\n      if (entry.transferred < entry.sold) {\r\n        result.push(entry);\r\n      }\r\n    }\r\n  \r\n    // Case 2: Items sold but never transferred\r\n    for (const [id, entry] of salesMap.entries()) {\r\n      result.push(entry);\r\n    }\r\n  \r\n    return result;\r\n  }\r\n  \r\n  const result=getItemsTransferredMoreThanSold(filteredItems2,filteredItems)\r\n  console.log(result)\r\n  setResultItems(getItemsTransferredMoreThanSold(filteredItems2,filteredItems))\r\n      // setResultItems(getNonCommonItems(filteredItems1,filteredItems2))\r\n      // if(getNonCommonItems(filteredItems1,filteredItems2) ==[]) {\r\n      //       alert(\"No item is unique\")\r\n      //       return;\r\n      // }\r\n    } catch (error) {\r\n      console.log(\"Error in comparing\",error.message)\r\n    }\r\n    finally{\r\n      \r\n      if(SelectedWarehouse){\r\n         setView(true)\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n \r\n\r\n\r\n \r\n\r\n// Excel Export\r\nconst exportToExcel = () => {\r\n  // Prepare data for Items Sold\r\n  const soldData = [];\r\n  filteredSales.forEach((sale, index) => {\r\n    sale.items?.forEach((item) => {\r\n      soldData.push({\r\n        '#': index + 1,\r\n        'Type': 'Items Sold',\r\n        'Item Name': item.item?.itemName || 'NA',\r\n        'Quantity': item.quantity,\r\n        'Date': sale.date || 'NA'\r\n      });\r\n    });\r\n  });\r\n\r\n  // Prepare data for Items Transferred\r\n  const transferredData = [];\r\n  filteredStock.forEach((stock, index) => {\r\n    stock.items?.forEach((item) => {\r\n      transferredData.push({\r\n        '#': index + 1,\r\n        'Type': 'Items Transferred',\r\n        'Item Name': item.item?.itemName || 'NA',\r\n        'Quantity': item.quantity,\r\n        'Date': stock.date || 'NA'\r\n      });\r\n    });\r\n  });\r\n\r\n  // Prepare data for Items to Transfer\r\n  const toTransferData = resultItems.map((item, index) => ({\r\n    '#': index + 1,\r\n    'Type': 'Items to Transfer',\r\n    'Item Name': item.itemName,\r\n    'Quantity': (item.sold - item.transferred),\r\n    'Date': 'NA'\r\n  }));\r\n\r\n  // Combine all data\r\n  const allData = [...soldData, ...transferredData, ...toTransferData];\r\n\r\n  // Create worksheet\r\n  const ws = XLSX.utils.json_to_sheet(allData);\r\n  \r\n  // Create workbook\r\n  const wb = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(wb, ws, \"InventoryReport\");\r\n  \r\n  // Export the file\r\n  XLSX.writeFile(wb, \"Inventory_Report.xlsx\");\r\n};\r\n\r\n// PDF Export\r\nconst exportToPDF = () => {\r\n  const doc = new jsPDF();\r\n  let yPos = 10;\r\n\r\n  // Add title\r\n  doc.setFontSize(18);\r\n  doc.text('Inventory Movement Report', 105, yPos, { align: 'center' });\r\n  yPos += 15;\r\n\r\n  // Items Sold Table\r\n  doc.setFontSize(14);\r\n  doc.text('Items Sold', 14, yPos);\r\n  yPos += 8;\r\n  \r\n  const soldRows = [];\r\n  filteredSales.forEach((sale, index) => {\r\n    sale.items?.forEach((item) => {\r\n      soldRows.push([\r\n        index + 1,\r\n        item.item?.itemName || 'NA',\r\n        item.quantity,\r\n        new Date(sale.saleDate).toISOString() || 'NA'\r\n      ]);\r\n    });\r\n  });\r\n\r\n  autoTable(doc,{\r\n    startY: yPos,\r\n    head: [['#', 'Item Name', 'Quantity', 'Date']],\r\n    body: soldRows.length > 0 ? soldRows : [['No data available', '', '', '']],\r\n    margin: { top: 10 },\r\n    styles: { fontSize: 10 }\r\n  });\r\n  yPos = doc.lastAutoTable.finalY + 10;\r\n\r\n  // Items Transferred Table\r\n  doc.setFontSize(14);\r\n  doc.text('Items Transferred to Warehouse', 14, yPos);\r\n  yPos += 8;\r\n  \r\n  const transferredRows = [];\r\n  filteredStock.forEach((stock, index) => {\r\n    stock.items?.forEach((item) => {\r\n      transferredRows.push([\r\n        index + 1,\r\n        item.item?.itemName || 'NA',\r\n        item.quantity,\r\n        new Date(stock.transferDate).toISOString() || 'NA'\r\n      ]);\r\n    });\r\n  });\r\n\r\n  autoTable(doc,{\r\n    startY: yPos,\r\n    head: [['#', 'Item Name', 'Quantity', 'Date']],\r\n    body: transferredRows.length > 0 ? transferredRows : [['No data available', '', '', '']],\r\n    margin: { top: 10 },\r\n    styles: { fontSize: 10 }\r\n  });\r\n  yPos = doc.lastAutoTable.finalY + 10;\r\n\r\n  // Items to Transfer Table\r\n  doc.setFontSize(14);\r\n  doc.text('Items Required to Transfer', 14, yPos);\r\n  yPos += 8;\r\n  \r\n  const toTransferRows = resultItems.map((item, index) => [\r\n    index + 1,\r\n    item.itemName,\r\n    (item.sold - item.transferred),\r\n    'NA'\r\n  ]);\r\n\r\n  autoTable(doc,{\r\n    startY: yPos,\r\n    head: [['#', 'Item Name', 'Quantity', 'Date']],\r\n    body: toTransferRows.length > 0 ? toTransferRows : [['No items to transfer', '', '', '']],\r\n    margin: { top: 10 },\r\n    styles: { fontSize: 10 }\r\n  });\r\n\r\n  // Save the PDF\r\n  doc.save('Inventory_Movement_Report.pdf');\r\n};\r\n\r\n\r\n  \r\n    return (\r\n      <div className=\"flex flex-col h-screen\">\r\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n        <div className=\"flex flex-grow\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n    \r\n          {/* Main Content */}\r\n          <div className=\"relative flex flex-col flex-grow w-full px-4 py-6 bg-gray-100\">\r\n            {/* Header */}\r\n            <header className=\"flex flex-col items-center justify-between sm:flex-row\">\r\n              <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n                <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Item Transfer</h1>\r\n              </div>\r\n              <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n                <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                  <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                </NavLink>\r\n                \r\n                <NavLink to=\"/reports/sale-item\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                  &gt; sale item Report\r\n                </NavLink>\r\n              </nav>\r\n            </header>\r\n            \r\n            <div className='flex flex-col w-full mx-auto mt-4 bg-white border-t-4 rounded-lg shadow-md border-cyan-600'>\r\n              <div className='w-full h-auto px-2 border-b-2 border-gray-200'>\r\n                <h4 className='text-gray-700'>Please Enter Valid Information</h4>\r\n              </div>\r\n              <div className='py-4 '>\r\n\r\n\r\n                {/* //first row */}\r\n                <div className='flex flex-col w-full gap-4 px-4 mb-4 md:flex-row md:gap-5'>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">Warehouse</label>\r\n                    <Select className='w-full' options={options.warehouses} onChange={(option)=>setSelectedWarehouse(option.value)} value={options.warehouses.find(option => option.value===SelectedWarehouse)}/>\r\n                  </div>\r\n                  <div className='hidden w-full md:flex'>\r\n                  </div>\r\n                </div>\r\n                <div className='flex w-full gap-5 px-4'>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">From Date</label>\r\n                    <input type=\"date\" name=\"type\" className=\"w-full px-2 py-1 border-2 rounded-md\"  onChange={(e)=>setDateFrom(e.target.value)}/>\r\n                  </div>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">To Date</label>\r\n                    <input type=\"date\" name=\"type\" className=\"w-full px-2 py-1 border-2 rounded-md\"  onChange={(e)=>setDateTo(e.target.value)}/>\r\n                  </div>\r\n                </div>\r\n                <div className='flex flex-col justify-around w-full gap-4 px-2 mt-2 md:justify-center md:flex-row'>\r\n   <button \r\n    className='px-6 py-2 text-white transition-colors duration-300 bg-blue-600 rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50'\r\n    onClick={handleCompare}\r\n    type=\"button\"\r\n  >\r\n    Show\r\n  </button>\r\n  \r\n  <button \r\n    className='px-6 py-2 text-white transition-colors duration-300 bg-gray-600 rounded-lg shadow-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50'\r\n    onClick={() => Navigate(\"/dashboard\")} \r\n    type=\"button\"\r\n  >\r\n    Back to Dashboard\r\n  </button>\r\n</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='flex flex-col w-full mt-5 border-t-4 border-gray-400'>\r\n              \r\n\r\n            \r\n             <div className='flex w-full px-2 py-2 bg-white'>\r\n  <div className='w-full'>\r\n    <h4 className='text-gray-700'>Records Table</h4>\r\n  </div>\r\n  <div className=\"relative\">\r\n    <button \r\n      onClick={() => setShowExportDropdown(!showExportDropdown)}\r\n      className=\"flex items-center px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\r\n    >\r\n      <FaBars className=\"mr-2\" />\r\n      Export\r\n      <span className=\"ml-2 text-sm\">▼</span>\r\n    </button>\r\n    \r\n    {/* Dropdown menu - now controlled by state */}\r\n    {showExportDropdown && (\r\n      <div \r\n        className=\"absolute right-0 z-10 w-40 mt-2 bg-white rounded-md shadow-lg\"\r\n        onMouseLeave={() => setShowExportDropdown(false)}\r\n      >\r\n        <div className=\"py-1\">\r\n          <button \r\n            onClick={() => {\r\n              exportToExcel();\r\n              setShowExportDropdown(false);\r\n            }}\r\n            className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            Excel\r\n          </button>\r\n          <button \r\n            onClick={() => {\r\n              exportToPDF();\r\n              setShowExportDropdown(false);\r\n            }}\r\n            className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n            </svg>\r\n            PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n</div>\r\n{/* second row */}\r\n               <div className='flex flex-col justify-between w-full gap-2 px-2 py-2 overflow-x-auto md:flex-row'>\r\n                \r\n                <div className='w-full h-auto bg-white border-2'>\r\n                  <h5 className='text-center'>Items Sold</h5>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">#</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                      {view &&\r\n  filteredSales.length > 0 &&\r\n  filteredSales.map((item, index) =>\r\n    item.items?.map((it, subIndex) => (\r\n      <tr key={`${index}-${subIndex}`} className=\"bg-gray-100 border-2 border-black\">\r\n        <td className=\"px-4 py-2\">{index + 1}</td>\r\n        <td className=\"px-4 py-2\">{it.item?.itemName}</td>\r\n        <td className=\"px-4 py-2\">{it.quantity}</td>\r\n      </tr>\r\n    ))\r\n  )\r\n}\r\n                      { view &&\r\n                        filteredSales.length===0  && view && (\r\n                          <tr className='bg-gray-100 border-2 border-black' >\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='10'><h5>No Data Found</h5></td>\r\n                        </tr>\r\n                        )\r\n                      }\r\n                     </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n                \r\n                <div className='w-full h-auto bg-white border-2'>\r\n                  <h5 className='text-center'>Items transferred to warehouse </h5>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">#</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                      {view &&\r\n  filteredStock.length > 0 &&\r\n  filteredStock.map((item, index) =>\r\n    item.items?.map((it, subIndex) => (\r\n      <tr key={`${index}-${subIndex}`} className=\"bg-gray-100 border-2 border-black\">\r\n        <td className=\"px-4 py-2\">{index + 1}</td>\r\n        <td className=\"px-4 py-2\">{it.item?.itemName || \"NA\"}</td>\r\n        <td className=\"px-4 py-2\">{it.quantity }</td>\r\n      </tr>\r\n    ))\r\n  )\r\n}\r\n\r\n                      { view &&\r\n                        filteredStock.length===0 && view && (\r\n                          <tr className='bg-gray-100 border-2 border-black' >\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='10'><h5>No Data Found</h5></td>\r\n                        </tr>\r\n                        )\r\n                      }\r\n                     </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n\r\n                <div className='w-full overflow-x-scroll bg-white border-2'>\r\n                  <h5 className='text-center'>Items required to transfer</h5>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">#</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                       {\r\n                        resultItems.length>0 && resultItems.map((item,index)=>(\r\n                          <tr key={index} className='bg-gray-100 border-2 border-black'>\r\n                            <td className=\"px-4 py-2\">{index+1}</td>\r\n                            <td className=\"px-4 py-2\">{item.itemName}</td>\r\n                            <td className=\"px-4 py-2\">{item.sold-item.transferred}</td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                      {view &&\r\n                        resultItems.length===0 &&(\r\n                          <tr  className='bg-gray-100 border-2 border-black'>\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='4' >No item to transfer</td>\r\n                         \r\n                        </tr>\r\n                        )\r\n                      }\r\n                     \r\n                     </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n                \r\n\r\n              </div> \r\n              \r\n              \r\n            </div>\r\n            \r\n    \r\n        \r\n           \r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","ItemTransfer","showExportDropdown","setShowExportDropdown","loading","setLoading","allItems","setAllItems","sales","setSales","stockTransfer","setStockTransfer","items","setItems","options","setOptions","warehouses","useEffect","window","innerWidth","Navigate","useNavigate","SelectedWarehouse","setSelectedWarehouse","resultItems","setResultItems","view","setView","filteredSales","setFilteredSales","filteredStock","setFilteredStock","dateFrom","setDateFrom","dateTo","setDateTo","async","axios","get","headers","Authorization","localStorage","getItem","data","map","warehouse","label","warehouseName","value","_id","prev","err","console","log","message","fetchWarehouses","response","fetchSales","fetchStockTransfer","filteredItems","filter","transfer","saleDate","warehouseMatch","date","Date","from","to","filteredItems2","toWarehouse","transferDate","NavLink","FaTachometerAlt","htmlFor","Select","onChange","option","find","type","name","e","target","onClick","preventDefault","alert","getItemsTransferredMoreThanSold","filteredTransfers","transferMap","Map","salesMap","forEach","it","_it$item","_it$item2","id","item","qty","quantity","itemName","has","transferred","set","sold","sale","_item$item","_item$item2","result","entry","values","push","entries","error","FaBars","onMouseLeave","exportToExcel","soldData","index","_sale$items","_item$item3","transferredData","stock","_stock$items","_item$item4","toTransferData","allData","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","exportToPDF","doc","jsPDF","yPos","setFontSize","text","align","soldRows","_sale$items2","_item$item5","toISOString","autoTable","startY","head","body","length","margin","top","styles","fontSize","lastAutoTable","finalY","transferredRows","_stock$items2","_item$item6","toTransferRows","save","_item$items","subIndex","_it$item3","colSpan","_item$items2","_it$item4"],"sourceRoot":""}