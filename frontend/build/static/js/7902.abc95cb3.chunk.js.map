{"version":3,"file":"static/js/7902.abc95cb3.chunk.js","mappings":"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","sources":["Loading.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","components/Accounts/AddAccounts.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","// src/pages/AddAccount.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\n\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport Loading from \"../../Loading.jsx\";\r\n\r\nconst AddAccount = () => {\r\n  /* ────────────── basics */\r\n  const navigate = useNavigate();\r\n  const [params] = useSearchParams();\r\n  const accountId = params.get(\"id\");\r\n\r\n  const role = (localStorage.getItem(\"role\") || \"\").toLowerCase();\r\n  const assignedStore = localStorage.getItem(\"storeId\");\r\n\r\n  /* ────────────── ui state */\r\n  const [sidebarOpen, setSidebarOpen] = useState(window.innerWidth >= 768);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  /* ────────────── data state */\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [stores, setStores] = useState([]);\r\n  const [storeParent, setStoreParent] = useState(null);\r\n\r\n  const [form, setForm] = useState({\r\n    accountNumber: \"\",\r\n    accountName: \"\",\r\n    openingBalance: 0,\r\n    note: \"\",\r\n    parentAccount: null\r\n  });\r\n\r\n  /* ────────────── helpers */\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers = { Authorization: `Bearer ${token}` };\r\n\r\n  const nextCode = (last) => {\r\n    const [p, n] =\r\n      typeof last === \"string\" && last.includes(\"-\") ? last.split(\"-\") : [\"ACC\", \"099\"];\r\n    return `${p}-${String(+n + 1).padStart(3, \"0\")}`;\r\n  };\r\n\r\n  /* ────────────── fetch all accounts */\r\n  useEffect(() => {\r\n    let alive = true;\r\n    axios\r\n      .get(\"api/accounts\", { headers })\r\n      .then((res) => {\r\n        if (!alive) return;\r\n        const all = res.data.data ?? [];\r\n        setAccounts(\r\n          all.map((a) => ({\r\n            label: `${a.accountNumber} – ${a.accountName}`,\r\n            value: a._id\r\n          }))\r\n        );\r\n\r\n        if (!accountId) {\r\n          const lastAcc = all.at(-1)?.accountNumber;\r\n          setForm((f) => ({ ...f, accountNumber: nextCode(lastAcc) }));\r\n        }\r\n      })\r\n      .catch(console.error);\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, [accountId]);\r\n\r\n  /* ────────────── fetch all stores (only for non-admin) */\r\n  useEffect(() => {\r\n    if (role === \"admin\") return;\r\n    let alive = true;\r\n    axios\r\n      .get(\"admin/store/add/store\", { headers })\r\n      .then((res) => alive && setStores(res.data.result ?? []))\r\n      .catch(console.error);\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, [role]);\r\n\r\n  /* ────────────── fetch account when editing */\r\n  useEffect(() => {\r\n    if (!accountId) return;\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(`api/accounts/${accountId}`, { headers })\r\n      .then((res) => {\r\n        const a = res.data.data;\r\n        if (!a) return;\r\n\r\n        setForm({\r\n          accountNumber: a.accountNumber,\r\n          accountName: a.accountName,\r\n          openingBalance: a.openingBalance || 0,\r\n          note: a.note || \"\",\r\n          parentAccount:\r\n            typeof a.parentAccount === \"string\" ? a.parentAccount : a.parentAccount?._id\r\n        });\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => setLoading(false));\r\n  }, [accountId]);\r\n\r\n  /* ────────────── derive parentAccount for store-user */\r\n  useEffect(() => {\r\n    if (role === \"admin\" || accountId) return;\r\n    if (!accounts.length || !stores.length) return;\r\n\r\n    const storeDoc = stores.find((s) => s._id === assignedStore);\r\n    if (!storeDoc) return;\r\n\r\n    const acctId =\r\n      typeof storeDoc.storeAccount === \"string\"\r\n        ? storeDoc.storeAccount\r\n        : storeDoc.storeAccount?._id;\r\n\r\n    if (!acctId) return;\r\n\r\n    setStoreParent(acctId);\r\n    setForm((f) => ({ ...f, parentAccount: acctId }));\r\n  }, [accounts, stores, role, accountId, assignedStore]);\r\n\r\n  /* ────────────── handlers */\r\n  const onChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setForm((f) => ({ ...f, [name]: type === \"number\" ? Number(value) : value }));\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const payload = { ...form };\r\n\r\n      if (role !== \"admin\") {\r\n        delete payload.parentAccount; // store-user\r\n      } else if (!payload.parentAccount) {\r\n        delete payload.parentAccount; // admin creating root\r\n      }\r\n\r\n      if (accountId) {\r\n        await axios.put(\r\n          `api/accounts/${accountId}`,\r\n          payload,\r\n          { headers }\r\n        );\r\n        alert(\"Account updated!\");\r\n      } else {\r\n        await axios.post(\"api/accounts\", payload, {\r\n          headers\r\n        });\r\n        alert(\"Account created!\");\r\n      }\r\n      navigate(\"/account-list\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.response?.data?.message || err.message || \"Failed to save account\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ────────────── render */\r\n  if (loading) return <Loading />;\r\n\r\n  const parentLabel =\r\n    accounts.find((o) => o.value === (form.parentAccount ?? storeParent))?.label ||\r\n    form.parentAccount ||\r\n    \"Loading…\";\r\n\r\n  /* enable/disable save button */\r\n  const saveDisabled =\r\n    role !== \"admin\"\r\n      ? !form.parentAccount || !form.accountNumber\r\n      : !form.accountNumber;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={sidebarOpen} />\r\n        <main className=\"flex-grow p-4 overflow-auto bg-gray-100\">\r\n          {/* breadcrumb */}\r\n          <header className=\"flex justify-between mb-4 bg-white p-4 rounded shadow\">\r\n            <h1 className=\"text-xl font-bold\">{accountId ? \"Edit Account\" : \"Add Account\"}</h1>\r\n            <nav className=\"flex items-center text-gray-500\">\r\n              <a href=\"/dashboard\" className=\"flex items-center\">\r\n                <FaTachometerAlt className=\"mr-1\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2\" />\r\n              <a href=\"/account-list\">Accounts List</a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* form */}\r\n          <form onSubmit={onSubmit} className=\"bg-white p-6 rounded shadow space-y-4\">\r\n            {/* parent account */}\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">\r\n                Parent Account {role !== \"admin\" && <span className=\"text-red-500\">*</span>}\r\n              </label>\r\n\r\n              {role === \"admin\" ? (\r\n                <Select\r\n                  options={accounts}\r\n                  value={accounts.find((o) => o.value === form.parentAccount) || null}\r\n                  onChange={(sel) =>\r\n                    setForm((f) => ({ ...f, parentAccount: sel ? sel.value : null }))\r\n                  }\r\n                  placeholder=\"(leave blank to create a root account)\"\r\n                  isClearable\r\n                />\r\n              ) : (\r\n                <div className=\"p-2 border rounded bg-gray-100\">{parentLabel}</div>\r\n              )}\r\n            </div>\r\n\r\n            {/* account number */}\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Account Number</label>\r\n              <input\r\n                className=\"w-full p-2 border rounded bg-gray-200\"\r\n                name=\"accountNumber\"\r\n                value={form.accountNumber}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            {/* account name */}\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Account Name</label>\r\n              <input\r\n                className=\"w-full p-2 border rounded\"\r\n                name=\"accountName\"\r\n                value={form.accountName}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* opening balance */}\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Opening Balance</label>\r\n              <input\r\n                className=\"w-full p-2 border rounded\"\r\n                type=\"number\"\r\n                min={0}\r\n                name=\"openingBalance\"\r\n                value={form.openingBalance}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            {/* note */}\r\n            <div>\r\n              <label className=\"block font-semibold mb-1\">Note</label>\r\n              <textarea\r\n                className=\"w-full p-2 border rounded\"\r\n                name=\"note\"\r\n                value={form.note}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            {/* actions */}\r\n            <div className=\"flex justify-center gap-4 pt-4\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={saveDisabled}\r\n                className={`px-6 py-2 rounded text-white ${\r\n                  saveDisabled ? \"bg-gray-400 cursor-not-allowed\" : \"bg-green-600 hover:bg-green-700\"\r\n                }`}\r\n              >\r\n                {accountId ? \"Update\" : \"Save\"}\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => navigate(\"/account-list\")}\r\n                className=\"px-6 py-2 bg-gray-500 text-white rounded hover:bg-gray-600\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAccount;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","_typeof","o","Symbol","iterator","constructor","prototype","AddAccount","_accounts$find","navigate","useNavigate","params","useSearchParams","accountId","get","role","localStorage","getItem","toLowerCase","assignedStore","sidebarOpen","window","innerWidth","loading","setLoading","accounts","setAccounts","stores","setStores","storeParent","setStoreParent","form","setForm","accountNumber","accountName","openingBalance","note","parentAccount","headers","Authorization","nextCode","last","p","n","includes","split","String","padStart","useEffect","alive","axios","then","res","_res$data$data","all","data","map","a","label","value","_id","_all$at","lastAcc","at","f","catch","console","error","_res$data$result","result","_a$parentAccount","finally","_storeDoc$storeAccoun","length","storeDoc","find","s","acctId","storeAccount","onChange","e","name","type","target","Number","Loading","parentLabel","_form$parentAccount","saveDisabled","href","FaTachometerAlt","BiChevronRight","onSubmit","async","preventDefault","payload","put","alert","post","err","_err$response","_err$response$data","response","message","Select","options","sel","placeholder","isClearable","readOnly","required","min","disabled","onClick"],"sourceRoot":""}