{"version":3,"file":"static/js/7583.a0373d99.chunk.js","mappings":"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","sources":["Loading.jsx","components/Accounts/AccountList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  FaTrash,\r\n  FaEdit,\r\n  FaTachometerAlt,\r\n  FaPencilAlt\r\n} from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport Navbar  from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport LoadingScreen from \"../../Loading.jsx\";\r\nimport axios   from \"axios\";\r\n\r\nconst API_BASE = \"api\";\r\nconst todayISO = () => new Date().toISOString().slice(0, 10);\r\nconst safe     = n => Number(n ?? 0).toFixed(2);\r\n\r\nexport default function AccountList() {\r\n  const navigate = useNavigate();\r\n  const token    = localStorage.getItem(\"token\") || \"\";\r\n  axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n\r\n  /* ───────── UI & filter state ───────── */\r\n  const [isSidebarOpen, setSidebarOpen] = useState(window.innerWidth >= 768);\r\n  const [loading,       setLoading]     = useState(false);\r\n  const [error,         setError]       = useState(\"\");\r\n  const [searchTerm,    setSearchTerm]  = useState(\"\");\r\n  const [currentPage,   setCurrentPage] = useState(1);\r\n  const [entriesPerPage]               = useState(10);\r\n\r\n  const [onDate,   setOnDate]   = useState(todayISO());\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate,   setToDate]   = useState(\"\");\r\n\r\n  const [pollTick, setPollTick] = useState(0);\r\n\r\n  /* ───────── data stores ───────── */\r\n  const [accounts,   setAccounts]   = useState([]);\r\n  const [statsByAcc, setStatsByAcc] = useState({});\r\n  const [todayLive,  setTodayLive]  = useState({});\r\n  const [accWhMap,   setAccWhMap]   = useState({});  // account → { warehouseId, warehouseName }\r\n\r\n  const storeId = localStorage.getItem(\"storeId\") || \"\";\r\n  const role    = (localStorage.getItem(\"role\") || \"\").toLowerCase();\r\n  const isAdmin = role === \"admin\";\r\n\r\n  const tableRef = useRef();\r\n\r\n\r\n  /* ───────── 1 – Load accounts & their warehouses ───────── */\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    if (!isAdmin && !storeId) {\r\n      setError(\"No store ID found. Please log in again.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    Promise.all([\r\n      axios.get(`${API_BASE}/accounts`),\r\n      axios.get(`${API_BASE}/warehouses`)\r\n    ])\r\n      .then(([accRes, whRes]) => {\r\n        const wMap = {};\r\n        (whRes.data.data||[]).forEach(w => wMap[w._id] = w);\r\n\r\n        // for each account, ask which warehouse it uses\r\n        const ps = (accRes.data.data||[]).map(acc =>\r\n          axios.get(`${API_BASE}/by-cash-account/${acc._id}`)\r\n            .then(r => {\r\n              const wid = r.data.warehouseId;\r\n              const wh  = wMap[wid];\r\n              const keep = isAdmin ? !!wh : (wh && wh.store===storeId);\r\n              if (!keep) return null;\r\n              setAccWhMap(m => ({ ...m,\r\n                [acc._id]: {\r\n                  warehouseId: wid,\r\n                  warehouseName: wh.warehouseName\r\n                }\r\n              }));\r\n              return acc;\r\n            })\r\n            .catch(()=>null)\r\n        );\r\n\r\n        Promise.all(ps).then(arr => {\r\n          const ok = arr.filter(Boolean);\r\n          setAccounts(ok);\r\n          if (!ok.length) setError(\"No accounts found for your store.\");\r\n        });\r\n      })\r\n      .catch(err=>{\r\n        console.error(err);\r\n        setError(err.response?.data?.message||\"Failed to load data.\");\r\n      })\r\n      .finally(()=>setLoading(false));\r\n  },[storeId,isAdmin]);\r\n\r\n  /* ───────── 2 – Fetch summary for each account ───────── */\r\n  const isRange = ()=>Boolean(fromDate && toDate);\r\n  const isToday = ()=>!isRange() && onDate===todayISO();\r\n  const activeKey = ()=> isRange()\r\n    ? `range:${fromDate}_${toDate}`\r\n    : `day:${onDate}`;\r\n  const dateParams = p => isRange()\r\n    ? { ...p, start: fromDate, end: toDate }\r\n    : { ...p, date: onDate };\r\n\r\n  useEffect(()=>{\r\n    if (isToday()) {\r\n      const id = setInterval(()=>setPollTick(t=>t+1),30_000);\r\n      return ()=>clearInterval(id);\r\n    }\r\n  },[onDate,fromDate,toDate]);\r\n\r\n  const fetchSummary = async accId => {\r\n    const key = `${activeKey()}#${pollTick}`;\r\n    if (statsByAcc[accId]?.key===key) return;\r\n\r\n    setStatsByAcc(s=>({\r\n      ...s,\r\n      [accId]: { loading:true, key }\r\n    }));\r\n    try {\r\n      const { warehouseId } = await axios\r\n        .get(`${API_BASE}/by-cash-account/${accId}`)\r\n        .then(r=>r.data);\r\n\r\n      const row = await axios\r\n        .get(`${API_BASE}/cash-summary`,{\r\n          params: dateParams({ warehouseId })\r\n        })\r\n        .then(r=>r.data);\r\n\r\n      if (isToday()) {\r\n        setTodayLive(t=>({\r\n          ...t,\r\n          [accId]: row.liveBalance\r\n        }));\r\n      }\r\n\r\n      setStatsByAcc(s=>({\r\n        ...s,\r\n        [accId]: { loading:false, key, data:row }\r\n      }));\r\n    } catch(err) {\r\n      console.error(`fetchSummary(${accId}) failed`,err.message);\r\n      const zeros = {\r\n        deposit:0, cashSale:0, bankSale:0, totalSale:0,\r\n        moneyTransfer:0, vanCash:0, vanCashRemark: \"\", diff:0,\r\n        openingBalance:0, closingBalance:0, liveBalance:0\r\n      };\r\n      setStatsByAcc(s=>({\r\n        ...s,\r\n        [accId]: {\r\n          loading:false,\r\n          key,\r\n          data: err.response?.status===404\r\n            ? zeros\r\n            : { ...zeros, error:err.message }\r\n        }\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    accounts.forEach(a=>fetchSummary(a._id));\r\n  },[accounts,onDate,fromDate,toDate,pollTick]);\r\n\r\n  /* ───────── 3 – Edit Van Cash ───────── */\r\n  const handleEditVanCash = async accId => {\r\n    if (isRange()) {\r\n      alert(\"Edit Van Cash only in single-day view.\");\r\n      return;\r\n    }\r\n    const row = statsByAcc[accId]?.data||{};\r\n    const current = row.vanCash||0;\r\n    const currentRemark = row.vanCashRemark||\"\";\r\n    const amountInput = window.prompt(\"New Van Cash amount\", current);\r\n    if (amountInput === null) return;\r\n    const amt = parseFloat(amountInput);\r\n    if (isNaN(amt)) {\r\n      alert(\"Please enter a valid number for the amount.\");\r\n      return;\r\n    }\r\n    const remarkInput = window.prompt(\"Enter remark for Van Cash (optional)\", currentRemark);\r\n    if (remarkInput === null) return; // Allow cancellation\r\n    const remark = remarkInput.trim();\r\n    const wh = accWhMap[accId]?.warehouseId;\r\n    if (!wh) {\r\n      alert(\"Warehouse missing.\");\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      await axios.put(`${API_BASE}/ledger/van-cash`, {\r\n        warehouseId: wh,\r\n        date: `${onDate}T12:00:00Z`,\r\n        amount: amt,\r\n        remark: remark\r\n      });\r\n      fetchSummary(accId);\r\n      alert(\"Updated!\");\r\n    } catch(e) {\r\n      console.error(e);\r\n      alert(e.response?.data?.message || \"Failed to update Van Cash\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ───────── 4 – Search & paginate ───────── */\r\n  const filtered = accounts.filter(a=>{\r\n    const q = searchTerm.toLowerCase();\r\n    return a.accountName?.toLowerCase().includes(q)\r\n       || a.accountNumber?.toLowerCase().includes(q)\r\n       || accWhMap[a._id]?.warehouseName?.toLowerCase().includes(q)\r\n       || a._id.includes(q);\r\n  });\r\n\r\n  const totalPages     = Math.ceil(filtered.length/entriesPerPage)||1;\r\n  const currentRecords = filtered.slice(\r\n    (currentPage-1)*entriesPerPage,\r\n    currentPage*entriesPerPage\r\n  );\r\n\r\n  if (loading) return <LoadingScreen />;\r\n  if (error)   return <p className=\"p-4 text-red-600\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen}/>\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen}/>\r\n        <main className=\"flex-grow p-3 bg-gray-100 overflow-x-auto\">\r\n          {/* header */}\r\n          <header className=\"flex justify-between mb-3 bg-white p-3 rounded shadow\">\r\n            <div>\r\n              <h1 className=\"font-bold text-lg\">Accounts</h1>\r\n              <p className=\"text-sm text-gray-500\">View / Search</p>\r\n            </div>\r\n            <nav className=\"text-gray-500 text-sm flex items-center\">\r\n              <Link to=\"/dashboard\" className=\"flex items-center\">\r\n                <FaTachometerAlt className=\"mr-1\"/>Home\r\n              </Link>\r\n              <BiChevronRight className=\"mx-2\"/>\r\n              <span>Accounts</span>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* controls */}\r\n          <div className=\"flex flex-wrap justify-between items-center mb-3 gap-2\">\r\n            <div className=\"flex gap-2\">\r\n              <Link to=\"/add-account\" className=\"px-4 py-2 bg-cyan-600 text-white rounded\">\r\n                + Create Account\r\n              </Link>\r\n              <Link to=\"/ledger/van-cash/new\" className=\"px-4 py-2 bg-green-600 text-white rounded\">\r\n                + Van Cash\r\n              </Link>\r\n              <Link to=\"/add-deposit\" className=\"px-4 py-2 bg-green-600 text-white rounded\">\r\n                + Add Deposit\r\n              </Link>\r\n              <Link to=\"/add-money-transfer\" className=\"px-4 py-2 bg-green-600 text-white rounded\">\r\n                + Add Money Transfer\r\n              </Link>\r\n            </div>\r\n            <div className=\"flex gap-2 items-center\">\r\n              <input\r\n                type=\"date\"\r\n                value={onDate}\r\n                onChange={e => { setOnDate(e.target.value); setFromDate(\"\"); setToDate(\"\"); }}\r\n                className=\"border p-1 text-sm\"\r\n              />\r\n              <span className=\"text-sm\">or</span>\r\n              <input\r\n                type=\"date\"\r\n                value={fromDate}\r\n                onChange={e => { setFromDate(e.target.value); setOnDate(\"\"); }}\r\n                className=\"border p-1 text-sm\"\r\n              />\r\n              <span className=\"text-sm\">to</span>\r\n              <input\r\n                type=\"date\"\r\n                value={toDate}\r\n                onChange={e => { setToDate(e.target.value); setOnDate(\"\"); }}\r\n                className=\"border p-1 text-sm\"\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search…\"\r\n                value={searchTerm}\r\n                onChange={e => { setSearchTerm(e.target.value); setCurrentPage(1); }}\r\n                className=\"border p-1 text-sm\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* table */}\r\n          <div className=\"overflow-x-auto bg-white rounded shadow\">\r\n            <table ref={tableRef} className=\"min-w-full text-sm\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  {[\r\n                    \"Account #\",\"Account Name\",\"Warehouse\",\r\n                    \"Deposit\",\"Cash Sale\",\"Bank Sale\",\"Total Sale\",\r\n                    \"Money Trf\",\"Van Cash\",\"Van Cash Remark\",\"Diff\",\r\n                    \"Opening\",\"Closing\",\"Live Bal\",\"Action\"\r\n                  ].map(h=>(\r\n                    <th key={h} className=\"border p-2\">{h}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentRecords.length===0\r\n                  ? <tr><td colSpan={15} className=\"text-center p-4\">No accounts.</td></tr>\r\n                  : currentRecords.map(acc=>{\r\n                      const row   = statsByAcc[acc._id]?.data||{};\r\n                      const live  = isToday()\r\n                        ? todayLive[acc._id] ?? row.liveBalance\r\n                        : row.liveBalance;\r\n                      const whRec = accWhMap[acc._id]||{};\r\n                      // build link with query\r\n                      const qs = isRange()\r\n                        ? `?from=${fromDate}&to=${toDate}`\r\n                        : `?on=${onDate}`;\r\n                      const ledgerPath = `/accounts/${acc._id}/ledger${qs}`;\r\n\r\n                      return (\r\n                        <tr key={acc._id} className=\"hover:bg-gray-50\">\r\n                          <td className=\"border p-2\">{acc.accountNumber}</td>\r\n                          <td className=\"border p-2 text-blue-600 hover:underline\">\r\n                            <Link to={ledgerPath}>{acc.accountName}</Link>\r\n                          </td>\r\n                          <td className=\"border p-2 text-blue-600 hover:underline\">\r\n                            <Link to={ledgerPath}>{whRec.warehouseName||\"-\"}</Link>\r\n                          </td>\r\n                          <td className=\"border p-2 text-right\">{safe(row.deposit)}</td>\r\n                          <td className=\"border p-2 text-right\">{safe(row.cashSale)}</td>\r\n                          <td className=\"border p-2 text-right\">{safe(row.bankSale)}</td>\r\n                          <td className=\"border p-2 text-right\">{safe(row.totalSale)}</td>\r\n                          <td className=\"border p-2 text-right\">{safe(row.moneyTransfer)}</td>\r\n                          <td className=\"border p-2 text-right flex items-center justify-end gap-1\">\r\n                            {safe(row.vanCash)}\r\n                            <button\r\n                              onClick={()=>handleEditVanCash(acc._id)}\r\n                              title=\"Edit Van Cash\"\r\n                              className=\"text-blue-600 hover:text-blue-800\"\r\n                            >\r\n                              <FaPencilAlt size={12}/>\r\n                            </button>\r\n                          </td>\r\n                          <td className=\"border p-2\">{row.vanCashRemark || \"-\"}</td>\r\n                          <td className=\"border p-2 text-right font-semibold\">{safe(row.diff)}</td>\r\n                          <td className=\"border p-2 text-right\">{safe(row.openingBalance)}</td>\r\n                          <td className=\"border p-2 text-right\">\r\n                            {safe(isRange()\r\n                              ? row.totalClosingBalanceInRange\r\n                              : row.closingBalance\r\n                            )}\r\n                          </td>\r\n                          <td className=\"border p-2 text-right font-semibold\">{safe(live)}</td>\r\n                          <td className=\"border p-2\">\r\n                            <button onClick={()=>navigate(`/add-account?id=${acc._id}`)}\r\n                              className=\"text-blue-600 mr-2\"><FaEdit/></button>\r\n                            <button onClick={()=>{/* delete... */}}\r\n                              className=\"text-red-600\"><FaTrash/></button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* pager */}\r\n          <div className=\"flex justify-between items-center mt-3 text-sm\">\r\n            <span>\r\n              Showing{\" \"}\r\n              {filtered.length===0?0:(currentPage-1)*entriesPerPage+1}{\" \"}\r\n              to{\" \"}\r\n              {Math.min(currentPage*entriesPerPage, filtered.length)}{\" \"}\r\n              of {filtered.length} entries\r\n            </span>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                disabled={currentPage<=1}\r\n                onClick={()=>setCurrentPage(p=>p-1)}\r\n                className={`px-4 py-1 rounded ${\r\n                  currentPage<=1?\"bg-gray-300\":\"bg-blue-500 text-white\"\r\n                }`}\r\n              >\r\n                Prev\r\n              </button>\r\n              <button\r\n                disabled={currentPage>=totalPages}\r\n                onClick={()=>setCurrentPage(p=>p+1)}\r\n                className={`px-4 py-1 rounded ${\r\n                  currentPage>=totalPages?\"bg-gray-300\":\"bg-blue-500 text-white\"\r\n                }`}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","API_BASE","todayISO","Date","toISOString","slice","safe","n","Number","toFixed","AccountList","navigate","useNavigate","token","localStorage","getItem","axios","defaults","headers","common","Authorization","window","innerWidth","loading","setLoading","error","setError","searchTerm","setSearchTerm","currentPage","setCurrentPage","entriesPerPage","onDate","setOnDate","fromDate","setFromDate","toDate","setToDate","pollTick","setPollTick","accounts","setAccounts","statsByAcc","setStatsByAcc","todayLive","setTodayLive","accWhMap","setAccWhMap","storeId","isAdmin","toLowerCase","tableRef","useRef","useEffect","Promise","all","get","then","_ref","accRes","whRes","wMap","data","forEach","w","_id","ps","map","acc","r","wid","warehouseId","wh","store","m","warehouseName","catch","arr","ok","filter","Boolean","length","err","_err$response","_err$response$data","console","response","message","finally","isRange","isToday","id","setInterval","t","clearInterval","fetchSummary","async","_statsByAcc$accId","key","accId","s","row","params","p","start","end","date","liveBalance","zeros","deposit","cashSale","bankSale","totalSale","moneyTransfer","vanCash","vanCashRemark","diff","openingBalance","closingBalance","_err$response2","status","a","filtered","_a$accountName","_a$accountNumber","_accWhMap$a$_id","_accWhMap$a$_id$wareh","q","accountName","includes","accountNumber","totalPages","Math","ceil","currentRecords","Link","to","FaTachometerAlt","BiChevronRight","type","value","onChange","e","target","placeholder","ref","h","colSpan","_statsByAcc$acc$_id","_todayLive$acc$_id","live","whRec","qs","ledgerPath","onClick","_statsByAcc$accId2","_accWhMap$accId","alert","current","currentRemark","amountInput","prompt","amt","parseFloat","isNaN","remarkInput","remark","trim","put","amount","_e$response","_e$response$data","handleEditVanCash","title","FaPencilAlt","size","totalClosingBalanceInRange","FaEdit","FaTrash","min","disabled"],"sourceRoot":""}