{"version":3,"file":"static/js/8162.835e860e.chunk.js","mappings":"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","sources":["Loading.jsx","components/Banners/ProductImagePreview.jsx","components/Banners/AddProduct.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect } from 'react';\r\n\r\nconst PreviewGallery = ({ setView, previewUrls,setFormData,formData,setPreviewUrls }) => {\r\n\r\n  // Function to handle removing an image\r\n  const handleRemoveImage = (Index) => {\r\n    // Remove image from previewUrls\r\n    \r\n    const updateddata=formData.media.filter((_,index)=>index!==Index)\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      media: updateddata,\r\n    }));\r\n    const updateurl=previewUrls.filter((_,index)=>index!==Index)\r\n    setPreviewUrls(updateurl)\r\n  \r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(()=>console.log(previewUrls),[previewUrls])\r\n  // Function to handle removing a video\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: '#fff',\r\n          padding: '30px',\r\n          borderRadius: '12px',\r\n          maxHeight: '80%',\r\n          width: '80%',\r\n          overflowY: 'auto',\r\n          boxShadow: '0 4px 20px rgba(0,0,0,0.3)',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        {/* Close Button */}\r\n        <button\r\n          onClick={() => setView(false)}  // Close the preview gallery\r\n          style={{\r\n            position: 'absolute',\r\n            top: '15px',\r\n            right: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '26px',\r\n            fontWeight: 'bold',\r\n            color: '#444',\r\n            cursor: 'pointer',\r\n          }}\r\n          title=\"Close\"\r\n        >\r\n          âœ–\r\n        </button>\r\n\r\n\r\n        {previewUrls.length > 0 ? (\r\n          <div\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\r\n              gap: '15px',\r\n            }}\r\n          >\r\n            {previewUrls.map((file, mediaIndex) => (\r\n              <div\r\n                key={mediaIndex}\r\n                style={{\r\n                  position: 'relative',\r\n                  borderRadius: '10px',\r\n                  overflow: 'hidden',\r\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\r\n                }}\r\n              >\r\n                {/* Check if the file is a video or an image based on its path */}\r\n                {file.path.match(/\\.(mp4|webm|ogg|mov|avi)$/i) ? (\r\n                  <video\r\n                    controls\r\n                    src={file.url}  // Use the video path\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '150px',\r\n                      objectFit: 'cover',\r\n                      display: 'block',\r\n                    }}\r\n                    alt={`Video Preview ${mediaIndex + 1}`}\r\n                  />\r\n                ) : file.path.match(/\\.(jpg|jpeg|png|gif|bmp|svg)$/i) ? (\r\n                  <img\r\n                    src={file.url}  // Use the image path\r\n                    alt={`Image Preview ${mediaIndex + 1}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '150px',\r\n                      objectFit: 'cover',\r\n                      display: 'block',\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <p style={{ color: '#666' }}>Unsupported media type</p>\r\n                )}\r\n\r\n                <button\r\n                onClick={()=>handleRemoveImage(mediaIndex)}  // Remove media from previewUrls\r\n                   // Remove media from previewUrls\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '8px',\r\n                    right: '8px',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.8)',\r\n                    border: 'none',\r\n                    color: '#fff',\r\n                    fontWeight: 'bold',\r\n                    borderRadius: '50%',\r\n                    width: '24px',\r\n                    height: '24px',\r\n                    cursor: 'pointer',\r\n                    lineHeight: '22px',\r\n                    textAlign: 'center',\r\n                  }}\r\n                  title=\"Remove Media\"\r\n                >\r\n                  &times;\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p style={{ textAlign: 'center', color: '#666' }}>\r\n            No media selected\r\n          </p>\r\n        )}\r\n     \r\n         \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewGallery;\r\n","import React from 'react'\r\nimport { useState, useRef, useEffect } from 'react'\r\nimport Navbar from '../Navbar.jsx'\r\nimport Sidebar from '../Sidebar.jsx'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport PreviewGallery from './ProductImagePreview.jsx'\r\nimport axios from 'axios'\r\nimport LoadingScreen from '../../Loading.jsx'\r\nexport default function AddProduct() {\r\n    const[isSidebarOpen,setSidebarOpen]=useState(true)\r\n    function generateNewProductId(oldProductId) {\r\n      \r\n      if(!oldProductId) return \"PROD/2025/12\"\r\n  const parts = oldProductId.split('/');\r\n  \r\n  if (parts.length !== 3 || parts[0] !== 'PROD') {\r\n    throw new Error('Invalid product ID format. Expected format: PROD/YYYY/NN');\r\n  }\r\n\r\n  const year = parts[1];\r\n  const number = parseInt(parts[2], 10);\r\n\r\n  if (isNaN(number)) {\r\n    throw new Error('Invalid number part in product ID');\r\n  }\r\n\r\n  const newNumber = number + 1;\r\n  return `PROD/${year}/${newNumber}`;\r\n}\r\n    const[formData,setFormData]=useState({\r\n      ProductId :\"\",\r\n      description:\"\",\r\n      media:[],\r\n      previousMedia:[]\r\n    })\r\n    const[loading,setLoading]=useState(false)\r\n    const[view,setView]=useState(false)\r\n  const[preview,setPreview]=useState([])\r\n    const addFile=async(e)=>{\r\n      const file = e.target.files[0];\r\n\r\n      if (file) {\r\n        const url = URL.createObjectURL(file);\r\n   \r\n        setPreview((prev)=>[...prev,{\r\n          url:url,\r\n          path:file.name,\r\n        }]);\r\n      \r\n        setFormData((prev)=>({...prev,media:[...prev.media,e.target.files[0]]}))\r\n      } else {\r\n        alert(\"Please select an image file.\");\r\n      }\r\n    }\r\n    \r\nuseEffect(()=>console.log(formData),[formData])\r\nuseEffect(()=>console.log(preview),[preview])\r\n    \r\nconst handleSubmit = async () => {\r\n  const formDataToSend = new FormData();\r\n  formDataToSend.append(\"ProductId\", formData.ProductId);\r\n  formDataToSend.append(\"description\", formData.description);\r\n\r\n  formData.media.forEach((file) => {\r\n    formDataToSend.append(\"media\", file); // \"media\" should match multer field\r\n  });\r\n\r\n  try {\r\n    setLoading(true)\r\n    const response = await axios.post(\r\n      \"api/product/add\",\r\n      formDataToSend\r\n    );\r\n    alert(\"created successfully\")\r\n    console.log(\"Success:\", response.data);\r\n    setFormData({\r\n        ProductId :generateNewProductId(response.response.productId),\r\n      description:\"\",\r\n      media:[],\r\n      previousMedia:[]\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Error fetching item code:\", error);\r\n  }\r\n  finally{\r\n    setLoading(false)\r\n  }\r\n};\r\n\r\nuseEffect(()=>{\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('api/product/all', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      console.log(response.data)\r\n     if(response.data){\r\n      const last=response.data[response.data.length-1]\r\n      setFormData((prev)=>({\r\n        ...prev,\r\n        ProductId :generateNewProductId(last.productId)\r\n      }))\r\n     \r\n     }\r\n    } catch (err) {\r\n      console.error(\"Error fetching advance payments:\", err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  fetchData();\r\n},[])\r\n\r\n   \r\n  // return (\r\n  //   <div className=\"flex flex-col h-screen\">\r\n  //     <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n  //     <div className=\"flex flex-grow \">\r\n\r\n  //       <Sidebar isSidebarOpen={isSidebarOpen} />\r\n          \r\n  //          {/* Content */}\r\n  //        <div className={`flex-grow flex flex-col p-2 md:p-2  `}>\r\n  //         <header className=\"flex flex-col items-center justify-between p-4 rounded-md shadow sm:flex-row\">\r\n  //           <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n  //             <h1 className=\"text-lg font-semibold truncate sm:text-xl\">New Product</h1>\r\n  //             <span  className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Product</span>\r\n  //           </div>\r\n  //           <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n  //  <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n  //                           <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n  //                         </NavLink>     \r\n  //                         <NavLink to=\"/banners/view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n  //                          &gt; Product List\r\n  //                         </NavLink>    \r\n  //                         <NavLink to=\"/product/add\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n  //                          &gt; Add Product\r\n  //                         </NavLink>\r\n              \r\n  //           </nav>\r\n  //         </header>\r\n  //        {view && <PreviewGallery previewUrls={preview} setView={setView} view={view} formData={formData} setFormData={setFormData}/>}\r\n  //         <div className=\"p-4 mt-1 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n  //           <div className='flex w-full gap-2'>\r\n  //               <div className='flex flex-col w-full'>\r\n  //                   <label htmlFor=\"\">Product Id</label>\r\n  //                   <input type=\"text\" readOnly name=\"\" id=\"\" className='w-full px-2 py-1 border-2 rounded-md'/>\r\n  //               </div>\r\n  //               <div className='flex flex-col w-full'>\r\n  //                   <label htmlFor=\"\">description</label>\r\n  //                   <input type=\"text\"  value={formData.description} onChange={(e)=>setFormData((prev)=>({...prev,description:e.target.value}))} id=\"\" className='w-full px-2 py-1 border-2 rounded-md'/>\r\n  //               </div>\r\n  //           </div>\r\n  //           <div className='flex flex-col w-full mt-4'>\r\n  //               <label htmlFor=\"\">Media</label>\r\n  //           <input type=\"file\" onChange={addFile} name=\"\" id=\"\" className='w-full px-2 py-1 border-2 rounded-md'/>\r\n  //           </div>\r\n            \r\n  //           <button\r\n  //         onClick={() => setView(true)}\r\n  //         className=\"absolute top-0 left-0 z-50 px-3 py-1 mt-2 ml-2 text-white transition bg-blue-500 rounded-md hover:bg-blue-600\"\r\n  //       >\r\n  //         ðŸ“· View Gallery\r\n  //       </button>\r\n                  \r\n                 \r\n          \r\n  //           </div>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  // )\r\n  if(loading){\r\n    return <LoadingScreen/>\r\n  }\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n  \r\n        {/* Main Content */}\r\n        <div className=\"relative flex flex-col flex-grow p-2 md:p-2\">\r\n          {/* Header */}\r\n          <header className=\"flex flex-col items-center justify-between p-4 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">New Product</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Product</span>\r\n            </div>\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n              </NavLink>\r\n              <NavLink to=\"/product/view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                &gt; Product List\r\n              </NavLink>\r\n              <NavLink to=\"/product/add\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                &gt; Add Product\r\n              </NavLink>\r\n            </nav>\r\n          </header>\r\n  \r\n          {/* View Gallery Button */}\r\n         \r\n  \r\n          {/* Preview Gallery */}\r\n          {view && (\r\n            <PreviewGallery\r\n              previewUrls={preview}\r\n              setPreviewUrls={setPreview}\r\n              setView={setView}\r\n              view={view}\r\n              formData={formData}\r\n              setFormData={setFormData}\r\n            />\r\n          )}\r\n  \r\n          {/* Form Section */}\r\n          <div className=\"p-4 mt-1 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n            <div className=\"flex w-full gap-2\">\r\n              <div className=\"flex flex-col w-full\">\r\n                <label>Product Id</label>\r\n                <input type=\"text\" readOnly className=\"w-full px-2 py-1 border-2 rounded-md\" value={formData.ProductId}/>\r\n              </div>\r\n              <div className=\"flex flex-col w-full\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.description}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({ ...prev, description: e.target.value }))\r\n                  }\r\n                  className=\"w-full px-2 py-1 border-2 rounded-md\"\r\n                />\r\n              </div>\r\n            </div>\r\n  \r\n            {/* Media Input */}\r\n            <div className=\"flex flex-col w-full mt-4\">\r\n              <label>Media</label>\r\n              <input\r\n                type=\"file\"\r\n                onChange={addFile}\r\n                className=\"w-full px-2 py-1 border-2 rounded-md\"\r\n              />\r\n            </div>\r\n            <div className='flex-col w-full mt-4'>\r\n              <button\r\n                onClick={() => setView(true)}\r\n                className=\"z-50 px-3 py-1 mt-2 ml-2 text-white transition bg-blue-500 rounded-md hover:bg-blue-600\"\r\n              >\r\n                ðŸ“· View Gallery\r\n              </button>\r\n            </div>\r\n            <div className='flex-col w-full mt-4'>\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"z-50 px-3 py-1 mt-2 ml-2 text-white transition bg-blue-500 rounded-md hover:bg-blue-600\"\r\n              >\r\nSubmit \r\n             </button>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","_ref","setView","previewUrls","setFormData","formData","setPreviewUrls","useEffect","console","log","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","padding","borderRadius","maxHeight","overflowY","boxShadow","onClick","right","background","border","fontSize","fontWeight","color","cursor","title","length","gridTemplateColumns","gap","map","file","mediaIndex","overflow","path","match","controls","src","url","objectFit","alt","Index","updateddata","media","filter","_","index","prev","updateurl","handleRemoveImage","lineHeight","textAlign","AddProduct","generateNewProductId","oldProductId","parts","split","Error","year","number","parseInt","isNaN","ProductId","description","previousMedia","loading","setLoading","view","preview","setPreview","async","response","axios","get","headers","Authorization","localStorage","getItem","data","last","productId","err","error","message","fetchData","NavLink","to","FaTachometerAlt","PreviewGallery","type","readOnly","value","onChange","e","target","files","URL","createObjectURL","name","alert","formDataToSend","FormData","append","forEach","post"],"sourceRoot":""}