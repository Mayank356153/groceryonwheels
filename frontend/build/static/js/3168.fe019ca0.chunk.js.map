{"version":3,"file":"static/js/3168.fe019ca0.chunk.js","mappings":"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","sources":["Loading.jsx","components/DeliverySlot/DeliverySlotList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaTachometerAlt ,FaEye} from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport Select from 'react-select'\r\n\r\nconst DeliverySlotList = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  \r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n const[data,setData]=useState([])\r\n\r\n \r\n    \r\n  const [dropdownIndex, setDropdownIndex] = useState(null);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[window.innerWidth])\r\n\r\n  \r\n  const toggleDropdown = (id) => {\r\n    setDropdownIndex(dropdownIndex === id ? null : id);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/api/delivery/slot/all-slot', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      console.log(\"DAta\")\r\n      console.log(response)\r\n      setData(response.data.data)\r\n    } catch (err) {\r\n      console.error(\"Error fetching delivery slot:\", err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n \r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Do you want to delete this ?\")) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`/api/delivery/slot/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      alert(\"Deleted Successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting advance payment:\", error.message);\r\n    } finally {\r\n      fetchData();\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n \r\n\r\n\r\n  // Export functions (Copy, Excel, PDF, Print, CSV) remain unchanged...\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"box-border flex\">\r\n        <div className=\"w-auto\">\r\n          \r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n          <header className=\"flex flex-col items-start justify-between p-0 mb-6 md:flex-row md:items-center\">\r\n            <h2 className=\"text-lg font-bold md:text-xl\">Delivery Slot List</h2>\r\n            <nav className=\"flex flex-wrap gap-2 mt-2 text-sm text-gray-600 md:mt-0\">\r\n             <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                            <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                          </NavLink>     \r\n                          <NavLink to=\"/delivery-slot/view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Delivery Slot List\r\n                          </NavLink>    \r\n            </nav>\r\n          </header>\r\n          {/* Filters Section */}\r\n          <div className=\"p-4 mb-4 bg-white border-t-4 rounded shadow border-cyan-500\">\r\n            <div className=\"flex flex-col items-center justify-end mb-4 md:flex-row md:items-center\">\r\n              <button className=\"px-4 py-1 mt-2 text-white rounded bg-cyan-400 hover:bg-cyan-600 md:mt-0\" onClick={() => navigate('/delivery-slot/create')}>\r\n                + Create Delivery Slot\r\n              </button>\r\n            </div>\r\n\r\n            \r\n           \r\n\r\n            {/* Advance Payments Table */}\r\n          <div className=\"relative w-full overflow-x-auto \">\r\n  <table className=\"w-full bg-white border-collapse rounded-md shadow-lg\">\r\n    <thead className=\"text-sm bg-gray-100\">\r\n      <tr>\r\n        <th className=\"px-4 py-2 border\">ID</th>\r\n        <th className=\"px-4 py-2 border\">Start Time</th>\r\n        <th className=\"px-4 py-2 border\">End Time</th>\r\n        <th className=\"px-4 py-2 border\">Fee</th>\r\n        <th className=\"px-4 py-2 border\">Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {data?.length === 0 ? (\r\n        <tr>\r\n          <td colSpan=\"5\" className=\"py-4 text-sm text-center text-gray-500\">\r\n            No data available in table\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        data?.map((transfer) => (\r\n          <tr key={transfer._id} className=\"transition-colors border-t hover:bg-gray-50\">\r\n            <td className=\"px-4 py-3 text-sm border\">{transfer._id}</td>\r\n            <td className=\"px-4 py-3 text-sm border\">{transfer.startTime}</td>\r\n            <td className=\"px-4 py-3 text-sm border\">{transfer.endTime}</td>\r\n            <td className=\"px-4 py-3 text-sm border\">${transfer.fee}</td>\r\n            <td className=\"relative px-4 py-3 text-sm border\">\r\n              <div className=\"flex justify-center\">\r\n                <button\r\n                  className=\"flex items-center gap-1 px-3 py-1 text-sm font-medium text-white transition-colors rounded-md bg-cyan-600 hover:bg-cyan-700\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    toggleDropdown(transfer._id);\r\n                  }}\r\n                >\r\n                  Actions\r\n                  <span className=\"text-xs\">▼</span>\r\n                </button>\r\n              </div>\r\n\r\n              {dropdownIndex === transfer._id && (\r\n                <div className=\"fixed z-50 mt-1 bg-white border border-gray-200 rounded-md shadow-lg w-44 animate-fadeIn\"\r\n                \r\n                >\r\n                  <button\r\n                    className=\"flex items-center w-full gap-2 px-4 py-2 text-sm text-red-600 transition-colors hover:bg-red-50\"\r\n                    onClick={() => handleDelete(transfer._id)}\r\n                  >\r\n                    <FaTrash className=\"text-xs\" />\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))\r\n      )}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DeliverySlotList;"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","DeliverySlotList","loading","setLoading","navigate","useNavigate","data","setData","dropdownIndex","setDropdownIndex","useEffect","window","innerWidth","fetchData","async","response","axios","get","headers","Authorization","localStorage","getItem","console","log","err","error","message","NavLink","to","FaTachometerAlt","onClick","length","colSpan","map","transfer","_id","startTime","endTime","fee","e","id","stopPropagation","confirm","delete","alert","handleDelete","FaTrash"],"sourceRoot":""}