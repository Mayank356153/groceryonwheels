{"version":3,"file":"static/js/7772.b100160d.chunk.js","mappings":"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","sources":["components/ImagePreview.jsx","components/Items/ImportItems.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function ImagePreview({ files, onRemove }) {\n  const [showAll, setShowAll] = useState(false);\n  const MAX_VISIBLE = 50;              // how many filenames to show before “Show all”\n\n  const list = showAll ? files : files.slice(0, MAX_VISIBLE);\n\n  return (\n    <div className=\"mt-3 border rounded p-3 bg-gray-50\">\n      <header className=\"flex justify-between items-center mb-2\">\n        <span className=\"font-semibold text-sm\">\n          Selected files: {files.length}\n        </span>\n\n        {files.length > MAX_VISIBLE && (\n          <button\n            type=\"button\"\n            className=\"text-cyan-600 text-xs underline\"\n            onClick={() => setShowAll(!showAll)}\n          >\n            {showAll ? \"Collapse\" : `Show all (${files.length})`}\n          </button>\n        )}\n      </header>\n\n      <ul className=\"max-h-64 overflow-y-auto text-sm space-y-1 pr-2\">\n        {list.map((f, i) => (\n          <li key={i} className=\"flex justify-between\">\n            <span className=\"truncate\">{f.name}</span>\n            <button\n              type=\"button\"\n              onClick={() => onRemove(i)}\n              className=\"ml-2 text-red-500 hover:text-red-700 shrink-0\"\n            >\n              Remove\n            </button>\n          </li>\n        ))}\n        {!showAll && files.length > MAX_VISIBLE && (\n          <li className=\"text-center text-xs text-gray-500\">\n            …and {files.length - MAX_VISIBLE} more\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ImagePreview from \"../ImagePreview.jsx\";\r\n\r\nconst BASE_URL = \"\"; // Adjust to your production URL\r\n\r\nexport default function ImportItems() {\r\n  /* ─────────────────────────────── STATE ───────────────────────────── */\r\n  const [file, setFile] = useState(null);\r\n  const [imageFiles, setImageFiles] = useState([]);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [subSubCategories, setSubSubCategories] = useState([]);\r\n  const [selectedWarehouse, setSelectedWarehouse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [progress, setProgress] = useState({\r\n    current: 0,\r\n    total: 0,\r\n    phase: \"idle\", // \"validating\", \"uploading\", \"importing\", \"idle\"\r\n  });\r\n  const preloadedImages = useRef({});\r\n  const navigate = useNavigate();\r\n\r\n  /* ─────────────────────────────── UTILS ───────────────────────────── */\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  const headers = useRef({\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  const cache = useRef({ units: {}, brands: {}, taxes: {} });\r\n  const str = (v) => String(v ?? \"\").trim();\r\n\r\n  /* ──────────────────────────── LOOK-UPS ───────────────────────────── */\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n\r\n    Promise.all([\r\n      axios.get(`${BASE_URL}/api/warehouses`, headers.current),\r\n      axios.get(`${BASE_URL}/api/categories`, headers.current),\r\n      axios.get(`${BASE_URL}/api/subcategories`, headers.current),\r\n      axios.get(`${BASE_URL}/api/sub-subcategories`, headers.current),\r\n    ])\r\n      .then(([wRes, cRes, sRes, ssRes]) => {\r\n        setWarehouses((wRes.data.data || wRes.data).filter((w) => w.status === \"Active\"));\r\n        setCategories(cRes.data.data || cRes.data);\r\n        setSubCategories(sRes.data.data || sRes.data);\r\n        setSubSubCategories(ssRes.data.data || sRes.data);\r\n      })\r\n      .catch(() => alert(\"Failed to load lookup data. Refresh to retry.\"))\r\n      .finally(() => setInitializing(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BASE_URL}/api/items/available-images`, headers.current)\r\n      .then((r) => {\r\n        preloadedImages.current = r.data || {};\r\n      })\r\n      .catch(() => {/* ignore */});\r\n  }, []);\r\n\r\n  /* Helper that finds/creates and caches an id */\r\n  const ensureOne = async (endpoint, nameField, rawName, extra = {}) => {\r\n    if (!rawName) return undefined;\r\n    const name = str(rawName);\r\n    cache.current[endpoint] = cache.current[endpoint] || {};\r\n    if (cache.current[endpoint][name]) return cache.current[endpoint][name];\r\n\r\n    const list = await axios\r\n      .get(`${BASE_URL}/api/${endpoint}?search=${encodeURIComponent(name)}`, headers.current)\r\n      .then((r) => r.data.data || r.data)\r\n      .catch(() => []);\r\n\r\n    const found = list.find((it) => str(it[nameField]).toLowerCase() === name.toLowerCase());\r\n    let id = found?._id;\r\n\r\n    if (!id) {\r\n      const body = { [nameField]: name };\r\n      if (endpoint === \"taxes\") {\r\n        body.taxPercentage = Number(extra.value) || 0;\r\n        body.type = extra.type || \"percentage\";\r\n      }\r\n      id = await axios\r\n        .post(`${BASE_URL}/api/${endpoint}`, body, headers.current)\r\n        .then((r) => (r.data.data || r.data)?._id)\r\n        .catch(() => null);\r\n    }\r\n    cache.current[endpoint][name] = id;\r\n    return id;\r\n  };\r\n\r\n  /* ─────────────────────────── HANDLERS ────────────────────────────── */\r\n  const handleFileChange = (e) => setFile(e.target.files[0] || null);\r\n  const handleImageFilesChange = (e) => {\r\n    const Hystack = Array.from(e.target.files);\r\n    if (Hystack.length + imageFiles.length > 20000) {\r\n      alert(\"You can upload up to 20,000 images in total.\");\r\n      return;\r\n    }\r\n    for (const f of Hystack) {\r\n      if (f.size > 10 * 1024 * 1024) {\r\n        alert(`File ${f.name} exceeds the 10 MB limit.`);\r\n        return;\r\n      }\r\n    }\r\n    setImageFiles((prev) => [...prev, ...Hystack]);\r\n  };\r\n  const removeImageFile = (i) => setImageFiles((prev) => prev.filter((_, idx) => idx !== i));\r\n\r\n  /* ─────────────────────────── MAIN IMPORT ─────────────────────────── */\r\n  const handleImport = async () => {\r\n    if (initializing) return alert(\"Loading lookup data; please wait...\");\r\n    if (!selectedWarehouse) return alert(\"Please select a warehouse.\");\r\n    if (!file) return alert(\"Please choose a CSV file.\");\r\n\r\n    setLoading(true);\r\n    setProgress({ current: 0, total: 100, phase: \"validating\" });\r\n\r\n    try {\r\n      /* 0️⃣ Parse CSV */\r\n      const buf = await file.arrayBuffer();\r\n      const wb = XLSX.read(buf, { type: \"array\" });\r\n      const rows = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]], { defval: \"\", raw: false });\r\n      const totalRows = rows.length;\r\n      setProgress({ current: 5, total: 100, phase: \"validating\" }); // 5% for parsing\r\n\r\n      const neededCodes = new Set();\r\n      rows.forEach((r) => {\r\n        const stock = Number(r[\"OPENING STOCK\"] || 0);\r\n        const code = str(r[\"IMAGE CODE\"]);\r\n        if (code && stock > 0) neededCodes.add(code.toLowerCase());\r\n      });\r\n\r\n      /* Prepareasione image map */\r\n      let uploadedImageMap = { ...preloadedImages.current };\r\n\r\n      /* 2️⃣ Upload local images if needed */\r\n      const imagesToUpload = imageFiles.filter((f) => {\r\n        const base = f.name.replace(/\\.[^.]+$/, \"\").toLowerCase();\r\n        return [...neededCodes].some((c) => base.includes(c));\r\n      });\r\n      if (imageFiles.length && !imagesToUpload.length) {\r\n        alert(\"None of the selected images are referenced in the CSV; they'll be skipped.\");\r\n      }\r\n\r\n      if (imagesToUpload.length) {\r\n        const CHUNK_SIZE = 1000;\r\n        const totalImages = imagesToUpload.length;\r\n        let uploadedCount = 0;\r\n\r\n        for (let start = 0; start < totalImages; start += CHUNK_SIZE) {\r\n          const chunk = imagesToUpload.slice(start, start + CHUNK_SIZE);\r\n          const form = new FormData();\r\n          chunk.forEach((f) => form.append(\"itemImages\", f));\r\n\r\n          const up = await axios.post(\r\n            `${BASE_URL}/api/items/upload-images`,\r\n            form,\r\n            { headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"multipart/form-data\" } }\r\n          );\r\n          if (!up.data.success) {\r\n            throw new Error(up.data.message || \"Image upload failed\");\r\n          }\r\n          Object.assign(uploadedImageMap, up.data.uploadedImages || {});\r\n          uploadedCount += chunk.length;\r\n          setProgress({\r\n            current: 20 + (uploadedCount / totalImages) * 20, // 20% to 40% for image uploads\r\n            total: 100,\r\n            phase: \"uploading\",\r\n          });\r\n        }\r\n      }\r\n\r\n      /* 3️⃣ Validate rows & build payload */\r\n      const payload = [];\r\n      const errors = [];\r\n      const failed = [];\r\n      setProgress({ current: 40, total: 100, phase: \"validating\" }); // 40% for starting validation\r\n\r\n      for (let idx = 0; idx < rows.length; idx++) {\r\n        try {\r\n          const row = rows[idx];\r\n\r\n          /* Look-ups — category, etc. */\r\n          const catName = str(row[\"CATEGORY NAME\"]);\r\n          const cat = categories.find((c) => c.name.toLowerCase() === catName.toLowerCase());\r\n          if (!cat) throw new Error(`Category \"${row[\"电站CATEGORY NAME\"]}\" not found`);\r\n\r\n          let subId, subSubId;\r\n          const subName = str(row[\"SUB CATEGORY NAME\"]).toLowerCase();\r\n          const subSubName = str(row[\"SUB SUBCATEGORY NAME\"]).toLowerCase();\r\n          if (subName) {\r\n            const sub = subCategories.find((s) => s.name.toLowerCase() === subName);\r\n            if (!sub) throw new Error(`SubCategory \"${row[\"SUB CATEGORY NAME\"]}\" not found`);\r\n            subId = sub._id;\r\n          }\r\n          if (subSubName) {\r\n            const ssc = subSubCategories.find((s) => s.name.toLowerCase() === subSubName);\r\n            if (!ssc) throw new Error(`SubSubCategory \"${row[\"SUB SUBCATEGORY NAME\"]}\" not found`);\r\n            subSubId = ssc._id;\r\n          }\r\n\r\n          /* Other refs */\r\n          const unitId = await ensureOne(\"units\", \"unitName\", row[\"UNIT NAME\"]);\r\n          const brandId = await ensureOne(\"brands\", \"brandName\", row[\"BRAND NAME\"]);\r\n          const taxId = await ensureOne(\"taxes\", \"taxName\", row[\"TAX NAME\"], {\r\n            value: row[\"TAX VALUE\"],\r\n            type: row[\"TAX TYPE\"],\r\n          });\r\n          if (!unitId || !taxId) throw new Error(\"Missing unit/tax id\");\r\n\r\n          /* Barcodes */\r\n          const toPlain = v =>\r\n            /e\\+/i.test(v) ? Number(v).toLocaleString(\"fullwide\", { useGrouping: false }) : v;\r\n          const barcodes = str(row[\"BARCODES\"])\r\n            .split(\",\")\r\n            .map(b => toPlain(str(b)))\r\n            .filter(Boolean);\r\n\r\n          /* Image mapping */\r\n          const imageCode = str(row[\"IMAGE CODE\"]);\r\n          let mapped = [];\r\n          if (imageCode && Number(row[\"OPENING STOCK\"] || 0) > 0) {\r\n            mapped = Object.entries(uploadedImageMap)\r\n              .filter(([orig]) => orig.replace(/\\.[^.]+$/, \"\").toLowerCase().includes(imageCode.toLowerCase()))\r\n              .flatMap(([, server]) => (Array.isArray(server) ? server : [server]));\r\n            if (!mapped.length) {\r\n              throw new Error(`No uploaded images contain IMAGE CODE \"${imageCode}\"`);\r\n            }\r\n          }\r\n\r\n          /* Expiry date optional */\r\n          let expiry = row[\"EXPIRY DATE\"];\r\n          if (typeof expiry === \"number\") {\r\n            expiry = new Date((expiry - 25569) * 86400 * 1000).toISOString();\r\n          } else if (expiry) {\r\n            expiry = new Date(expiry).toISOString();\r\n          } else {\r\n            expiry = null;\r\n          }\r\n\r\n          /* Mandatory checks */\r\n          if (!str(row[\"ITEM NAME\"])) throw new Error(\"ITEM NAME is required\");\r\n          if (!catName) throw new Error(\"CATEGORY NAME is required\");\r\n          if (!str(row[\"UNIT NAME\"])) throw new Error(\"UNIT NAME is required\");\r\n          if (!str(row[\"TAX NAME\"])) throw new Error(\"TAX NAME is required\");\r\n          if (row[\"TAX VALUE\"] === undefined || row[\"TAX VALUE\"] === \"\") throw new Error(\"TAX VALUE is required\");\r\n          if (!str(row[\"TAX TYPE\"])) throw new Error(\"TAX TYPE is required\");\r\n          if (row[\"PRICE WITHOUT TAX\"] === undefined || row[\"PRICE WITHOUT TAX\"] === \"\") throw new Error(\"PRICE WITHOUT TAX is required\");\r\n          if (row[\"SALES PRICE\"] === undefined || row[\"SALES PRICE\"] === \"\") throw new Error(\"SALES PRICE is required\");\r\n          if (row[\"OPENING STOCK\"] === undefined || row[\"OPENING STOCK\"] === \"\") throw new Error(\"OPENING STOCK is required\");\r\n\r\n          payload.push({\r\n            itemCode: str(row[\"ITEM CODE\"]),\r\n            itemName: str(row[\"ITEM NAME\"]),\r\n            category: cat._id,\r\n            subCategory: subId,\r\n            subSubCategory: subSubId,\r\n            itemGroup: str(row[\"ITEM GROUP\"]) || \"Single\",\r\n            unit: unitId,\r\n            brand: brandId,\r\n            tax: taxId,\r\n            sku: str(row[\"SKU\"]),\r\n            hsn: str(row[\"HSN\"]),\r\n            barcodes,\r\n            priceWithoutTax: Number(row[\"PRICE WITHOUT TAX\"] || 0),\r\n            purchasePrice: Number(row[\"PURCHASE PRICE\"] || 0),\r\n            salesPrice: Number(row[\"SALES PRICE\"] || 0),\r\n            mrp: Number(row[\"MRP\"] || 0),\r\n            openingStock: Number(row[\"OPENING STOCK\"] || 0),\r\n            alertQuantity: Number(row[\"ALERT QTY\"] || 0),\r\n            sellerPoints: Number(row[\"SELLER POINTS\"] || 0),\r\n            discountType: str(row[\"DISCOUNT TYPE\"]).toLowerCase().includes(\"flat\") ? \"Fixed\" : \"Percentage\",\r\n            discount: Number(row[\"DISCOUNT\"] || 0),\r\n            discountPolicy: str(row[\"DISCOUNT POLICY\"]) || \"None\",\r\n            requiredQuantity: Number(row[\"REQUIRED QUANTITY\"] || 0),\r\n            freeQuantity: Number(row[\"FREE QUANTITY\"] || 0),\r\n            warehouse: selectedWarehouse,\r\n            description: str(row[\"ITEM DESCRIPTION\"]),\r\n            expiryDate: expiry,\r\n            itemImages: mapped,\r\n            imageCode: imageCode, // Always include imageCode\r\n            isOnline: ![\"offline\", \"no\", \"0\"].includes(str(row[\"VISIBILITY\"]).toLowerCase()),\r\n          });\r\n\r\n          // Update progress for each row (40% to 60% for validation)\r\n          setProgress({\r\n            current: 40 + ((idx + 1) / totalRows) * 20,\r\n            total: 100,\r\n            phase: \"validating\",\r\n          });\r\n\r\n          // Force React to flush state updates\r\n          await new Promise((resolve) => setTimeout(resolve, 0));\r\n        } catch (err) {\r\n          errors.push(`Row ${idx + 1}: ${err.message}`);\r\n          failed.push({ ...rows[idx], ERROR: err.message, ROW_NUMBER: idx + 1 });\r\n        }\r\n      }\r\n\r\n      /* 4️⃣ Export fail sheet */\r\n      if (failed.length) {\r\n        const csv = XLSX.utils.sheet_to_csv(XLSX.utils.json_to_sheet(failed));\r\n        const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"failed_imports.csv\";\r\n        link.click();\r\n      }\r\n      if (!payload.length) throw new Error(\"No valid items to import\");\r\n\r\n      /* 5️⃣ Bulk insert in chunks */\r\n      const CHUNK = 200;\r\n      let created = 0;\r\n      const chunkErrs = [];\r\n      setProgress({ current: 60, total: 100, phase: \"importing\" }); // 60% for starting bulk insert\r\n\r\n      for (let i = 0; i < payload.length; i += CHUNK) {\r\n        const slice = payload.slice(i, i + CHUNK);\r\n        try {\r\n          const r = await axios.post(`${BASE_URL}/api/items/bulk`, slice, headers.current);\r\n          created += r.data.count ?? slice.length;\r\n        } catch (err) {\r\n          chunkErrs.push(`Chunk ${i / CHUNK + 1}: ${err.message}`);\r\n        }\r\n        // Update progress for each chunk (60% to 95% for importing)\r\n        setProgress({\r\n          current: 60 + ((i + slice.length) / payload.length) * 35,\r\n          total: 100,\r\n          phase: \"importing\",\r\n        });\r\n        // Force React to flush state updates\r\n        await new Promise((resolve) => setTimeout(resolve, 0));\r\n      }\r\n\r\n      setProgress({ current: 95, total: 100, phase: \"finalizing\" }); // 95% for final steps\r\n      alert(`Imported ${created}/${payload.length} rows.\\n${chunkErrs.length ? chunkErrs.join(\"\\n\") : \"\"}`);\r\n      navigate(\"/item-list\");\r\n    } catch (err) {\r\n      console.error(\"[bulk] import failed:\", err);\r\n      alert(err.message || \"Bulk import error\");\r\n    } finally {\r\n      setLoading(false);\r\n      setProgress({ current: 0, total: 0, phase: \"idle\" });\r\n    }\r\n  };\r\n\r\n  /* ───────────────────────────── RENDER ───────────────────────────── */\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\r\n        <div className=\"text-2xl font-semibold text-gray-700\">\r\n          {progress.phase === \"validating\" && \"Validating CSV Rows...\"}\r\n          {progress.phase === \"uploading\" && \"Uploading Images...\"}\r\n          {progress.phase === \"importing\" && \"Importing Items...\"}\r\n          {progress.phase === \"finalizing\" && \"Finalizing Import...\"}\r\n        </div>\r\n        <div className=\"text-lg text-gray-600 mt-2\">\r\n          {Math.round(progress.current)}% Complete\r\n        </div>\r\n        <div className=\"w-64 bg-gray-200 rounded-full h-2.5 mt-4 overflow-hidden\">\r\n          <div\r\n            className=\"bg-green-500 h-2.5 rounded-full transition-all duration-300\"\r\n            style={{ width: `${progress.current}%` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const instructions = [\r\n    { col: 1, name: \"ITEM CODE\", value: \"Optional\", desc: \"\" },\r\n    { col: 2, name: \"ITEM NAME\", value: \"Required\", desc: \"\" },\r\n    { col: 3, name: \"CATEGORY NAME\", value: \"Required\", desc: \"\" },\r\n    { col: 4, name: \"SUB CATEGORY NAME\", value: \"Optional\", desc: \"\" },\r\n    { col: 5, name: \"SUB SUBCATEGORY NAME\", value: \"Optional\", desc: \"\" },\r\n    { col: 6, name: \"UNIT NAME\", value: \"Required\", desc: \"\" },\r\n    { col: 7, name: \"BRAND NAME\", value: \"Optional\", desc: \"\" },\r\n    { col: 8, name: \"TAX NAME\", value: \"Required\", desc: \"\" },\r\n    { col: 9, name: \"TAX VALUE\", value: \"Required\", desc: \"\" },\r\n    { col: 10, name: \"TAX TYPE\", value: \"Required\", desc: \"'Inclusive' or 'Exclusive'\" },\r\n    { col: 11, name: \"ITEM GROUP\", value: \"Optional\", desc: \"Defaults to 'Single'\" },\r\n    { col: 12, name: \"SKU\", value: \"Optional\", desc: \"\" },\r\n    { col: 13, name: \"HSN\", value: \"Optional\", desc: \"\" },\r\n    { col: 14, name: \"BARCODES\", value: \"Optional\", desc: \"Comma-separated\" },\r\n    { col: 15, name: \"PRICE WITHOUT TAX\", value: \"Required\", desc: \"\" },\r\n    { col: 16, name: \"PURCHASE PRICE\", value: \"Optional\", desc: \"\" },\r\n    { col: 17, name: \"SALES PRICE\", value: \"Required\", desc: \"\" },\r\n    { col: 18, name: \"MRP\", value: \"Optional\", desc: \"\" },\r\n    { col: 19, name: \"OPENING STOCK\", value: \"Required\", desc: \"\" },\r\n    { col: 20, name: \"ALERT QTY\", value: \"Optional\", desc: \"\" },\r\n    { col: 21, name: \"SELLER POINTS\", value: \"Optional\", desc: \"\" },\r\n    { col: 22, name: \"DISCOUNT TYPE\", value: \"Optional\", desc: \"'Percentage' or 'Flat'\" },\r\n    { col: 23, name: \"DISCOUNT\", value: \"Optional\", desc: \"\" },\r\n    { col: 24, name: \"DISCOUNT POLICY\", value: \"Optional\", desc: \"'None' or 'BuyXGetY'\" },\r\n    { col: 25, name: \"REQUIRED QUANTITY\", value: \"Optional\", desc: \"Needed for BuyXGetY\" },\r\n    { col: 26, name: \"FREE QUANTITY\", value: \"Optional\", desc: \"Needed for BuyXGetY\" },\r\n    { col: 27, name: \"ITEM DESCRIPTION\", value: \"Optional\", desc: \"\" },\r\n    { col: 28, name: \"EXPIRY DATE\", value: \"Optional\", desc: \"Date or Excel serial\" },\r\n    { col: 29, name: \"IMAGE CODE\", value: \"Optional\", desc: \"Used to link images; required only if OPENING STOCK > 0\" },\r\n    { col: 30, name: \"ITEM IMAGES\", value: \"Optional\", desc: \"Fallback—comma-separated filenames\" },\r\n    { col: 31, name: \"VISIBILITY\", value: \"Optional\", desc: \"'Online' (default) or 'Offline'\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className=\"flex-grow p-4 bg-gray-100 overflow-y-auto\">\r\n          {/* Header */}\r\n          <header className=\"flex flex-col sm:flex-row items-center justify-between bg-white p-4 rounded shadow mb-4\">\r\n            <h1 className=\"text-xl font-semibold\">Import Items (Bulk CSV)</h1>\r\n            <nav className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n              <a href=\"/dashboard\" className=\"hover:text-cyan-600 flex items-center\">\r\n                <FaTachometerAlt className=\"mr-1\" /> Home\r\n              </a>\r\n              <BiChevronRight />\r\n              <a href=\"/item-list\" className=\"hover:text-cyan-600\">Items List</a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Form card */}\r\n          <div className=\"bg-white p-6 rounded shadow space-y-4\">\r\n            {/* Warehouse */}\r\n            <div>\r\n              <label className=\"block mb-1 font-semibold\">\r\n                Warehouse <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <select\r\n                className=\"w-full md:w-1/2 p-2 border rounded\"\r\n                value={selectedWarehouse}\r\n                onChange={(e) => setSelectedWarehouse(e.target.value)}\r\n              >\r\n                <option value=\"\">Select Warehouse</option>\r\n                {warehouses.map((w) => (\r\n                  <option key={w._id} value={w._id}>\r\n                    {w.warehouseName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* CSV */}\r\n            <div>\r\n              <label className=\"block mb-1 font-semibold\">\r\n                Import CSV <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileChange}\r\n                className=\"w-full md:w-1/2 p-2 border rounded\"\r\n              />\r\n              <p className=\"text-sm text-red-500 mt-1\">\r\n                Column names must match the list below. IMAGE CODE can be anywhere in the filename.\r\n              </p>\r\n            </div>\r\n\r\n            {/* Images */}\r\n            <div>\r\n              <label className=\"block mb-1 font-semibold\">Upload Images (Optional)</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                multiple\r\n                onChange={handleImageFilesChange}\r\n                className=\"w-full md:w-1/2 p-2 border rounded\"\r\n              />\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Max 20k files, 10 MB each. Importer links files whose names contain the IMAGE CODE for items with OPENING STOCK greater than\r\n                 0.\r\n              </p>\r\n              {imageFiles.length > 0 && (\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm font-semibold\">Uploaded Files:</p>\r\n                  <ImagePreview files={imageFiles} onRemove={removeImageFile} />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={handleImport}\r\n                className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\r\n              >\r\n                Import\r\n              </button>\r\n              <button\r\n                onClick={() => navigate(\"/item-list\")}\r\n                className=\"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Instructions */}\r\n          <div className=\"mt-6 bg-white rounded shadow p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-lg font-semibold\">Import Instructions</h2>\r\n              <a\r\n                href=\"/templates/bulk-items-example.csv\"\r\n                download\r\n                className=\"px-4 py-2 bg-cyan-500 text-white rounded hover:bg-cyan-600\"\r\n              >\r\n                Download Example Format\r\n              </a>\r\n            </div>\r\n            <table className=\"w-full text-sm border border-gray-300\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"p-2 border\">#</th>\r\n                  <th className=\"p-2 border\">Column Name</th>\r\n                  <th className=\"p-2 border\">Value</th>\r\n                  <th className=\"p-2 border\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {instructions.map((i) => (\r\n                  <tr key={i.col} className=\"even:bg-gray-50\">\r\n                    <td className=\"p-2 border text-center\">{i.col}</td>\r\n                    <td className=\"p-2 border\">{i.name}</td>\r\n                    <td className=\"p-2 border font-semibold\">\r\n                      {i.value === \"Required\" ? (\r\n                        <span className=\"px-2 bg-green-100 text-green-800 rounded text-xs\">\r\n                          {i.value}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"px-2 bg-gray-100 text-gray-600 rounded text-xs italic\">\r\n                          {i.value}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"p-2 border\">{i.desc}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["ImagePreview","_ref","files","onRemove","showAll","setShowAll","useState","list","slice","_jsxs","className","children","length","_jsx","type","onClick","map","f","i","name","BASE_URL","ImportItems","file","setFile","imageFiles","setImageFiles","warehouses","setWarehouses","categories","setCategories","subCategories","setSubCategories","subSubCategories","setSubSubCategories","selectedWarehouse","setSelectedWarehouse","loading","setLoading","initializing","setInitializing","isSidebarOpen","setSidebarOpen","progress","setProgress","current","total","phase","preloadedImages","useRef","navigate","useNavigate","token","localStorage","getItem","headers","Authorization","cache","units","brands","taxes","str","v","String","trim","useEffect","window","innerWidth","Promise","all","axios","get","then","wRes","cRes","sRes","ssRes","data","filter","w","status","catch","alert","finally","r","ensureOne","async","endpoint","nameField","rawName","extra","arguments","undefined","found","encodeURIComponent","find","it","toLowerCase","id","_id","body","taxPercentage","Number","value","post","_ref2","Math","round","style","width","Navbar","Sidebar","href","FaTachometerAlt","BiChevronRight","onChange","e","target","warehouseName","accept","multiple","Hystack","Array","from","size","prev","_","idx","buf","arrayBuffer","wb","XLSX","rows","sheet_to_json","Sheets","SheetNames","defval","raw","totalRows","neededCodes","Set","forEach","stock","code","add","uploadedImageMap","imagesToUpload","base","replace","some","c","includes","CHUNK_SIZE","totalImages","uploadedCount","start","chunk","form","FormData","append","up","success","Error","message","Object","assign","uploadedImages","payload","errors","failed","row","catName","cat","subId","subSubId","subName","subSubName","sub","s","ssc","unitId","brandId","taxId","toPlain","test","toLocaleString","useGrouping","barcodes","split","b","Boolean","imageCode","mapped","entries","_ref3","orig","flatMap","_ref4","server","isArray","expiry","Date","toISOString","push","itemCode","itemName","category","subCategory","subSubCategory","itemGroup","unit","brand","tax","sku","hsn","priceWithoutTax","purchasePrice","salesPrice","mrp","openingStock","alertQuantity","sellerPoints","discountType","discount","discountPolicy","requiredQuantity","freeQuantity","warehouse","description","expiryDate","itemImages","isOnline","resolve","setTimeout","err","ERROR","ROW_NUMBER","csv","sheet_to_csv","json_to_sheet","blob","Blob","link","document","createElement","URL","createObjectURL","download","click","CHUNK","created","chunkErrs","_r$data$count","count","join","console","error","col","desc"],"sourceRoot":""}