{"version":3,"file":"static/js/8314.ba752b77.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/PrintLabels.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PrintLabels() {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [selectedWarehouse, setSelectedWarehouse] = useState(\"\");\r\n\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [rowQuantities, setRowQuantities] = useState({});\r\n  const [printList, setPrintList] = useState([]);\r\n\r\n  // ─── FETCH WAREHOUSES ───────────────────────────────────────────────────\r\n  const fetchWarehouses = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\"api/warehouses\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const list = res.data.data || [];\r\n      setWarehouses(list);\r\n\r\n      // If no warehouse selected yet, pick the restricted one by default:\r\n      if (!selectedWarehouse && list.length > 0) {\r\n        const restricted = list.find(\r\n          (w) => w.isRestricted && w.status === \"Active\"\r\n        );\r\n        const defaultWh = restricted\r\n          ? restricted._id\r\n          : list.find((w) => w.status === \"Active\")?._id || \"\";\r\n        setSelectedWarehouse(defaultWh);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching warehouses:\", err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ─── FETCH ITEMS ON SEARCH ───────────────────────────────────────────────\r\n  const fetchSearchItems = async (query, warehouseId) => {\r\n    if (!warehouseId || !query) {\r\n      setFilteredItems([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      // We assume your backend supports `search` to match itemName, itemCode, or barcodes\r\n      const res = await axios.get(\"api/items\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params: {\r\n          warehouse: warehouseId,\r\n          search: query, // if your API uses a different param (e.g. `q`), replace here\r\n        },\r\n      });\r\n      const items = res.data.data || [];\r\n\r\n      // Flatten variants exactly as in your other pages:\r\n      const flattened = items.map((item) => {\r\n        const isVariant = Boolean(item.parentItemId);\r\n        return {\r\n          ...item,\r\n          parentId: isVariant ? item.parentItemId : item._id,\r\n          variantId: isVariant ? item._id : null,\r\n          itemName: isVariant\r\n            ? `${item.itemName} / ${item.variantName || \"Variant\"}`\r\n            : item.itemName,\r\n          itemCode: item.itemCode || \"\",\r\n          barcode: item.barcodes?.[0] || \"\",\r\n          barcodes: item.barcodes || [],\r\n          isVariant,\r\n          currentStock: item.currentStock || 0,\r\n          warehouse: item.warehouse,\r\n        };\r\n      });\r\n\r\n      // Only keep items that belong to this warehouse and have stock > 0\r\n      const filteredByWarehouse = flattened.filter(\r\n        (it) => it.warehouse?._id === warehouseId && it.currentStock > 0\r\n      );\r\n      setFilteredItems(filteredByWarehouse);\r\n\r\n      // If any item’s barcode or itemCode exactly matches `query`, auto‐add & clear search\r\n      const exactHit = filteredByWarehouse.find(\r\n        (it) => it.barcode === query || it.itemCode === query\r\n      );\r\n      if (exactHit) {\r\n        handleAddItem(exactHit);\r\n        setSearchQuery(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching search items:\", err.message);\r\n      setFilteredItems([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ─── INITIALIZE ON MOUNT ─────────────────────────────────────────────────\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) {\r\n      setSidebarOpen(false);\r\n    }\r\n    fetchWarehouses();\r\n  }, []);\r\n\r\n  // Whenever searchQuery changes, fetch matching items:\r\n  useEffect(() => {\r\n    const trimmed = searchQuery.trim();\r\n    if (selectedWarehouse && trimmed !== \"\") {\r\n      fetchSearchItems(trimmed, selectedWarehouse);\r\n    } else {\r\n      setFilteredItems([]);\r\n    }\r\n  }, [searchQuery, selectedWarehouse]);\r\n\r\n  // Whenever warehouse changes, clear search & dropdown & printList:\r\n  useEffect(() => {\r\n    setSearchQuery(\"\");\r\n    setFilteredItems([]);\r\n    setPrintList([]);\r\n  }, [selectedWarehouse]);\r\n\r\n  // ─── HANDLERS ───────────────────────────────────────────────────────────\r\n  const handleQuantityChange = (itemId, value) => {\r\n    const qty = parseInt(value, 10) || 1;\r\n    setRowQuantities((prev) => ({\r\n      ...prev,\r\n      [itemId]: qty,\r\n    }));\r\n  };\r\n\r\n  const handleAddItem = (item) => {\r\n    const quantity = rowQuantities[item._id] || 1;\r\n    if (!printList.find((p) => p._id === item._id)) {\r\n      setPrintList([...printList, { ...item, quantity }]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveItem = (itemId) => {\r\n    setPrintList(printList.filter((it) => it._id !== itemId));\r\n  };\r\n\r\n  const handlePreview = () => {\r\n    alert(\"Preview:\\n\" + JSON.stringify(printList, null, 2));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setPrintList([]);\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  // ─── TOTAL LABELS ───────────────────────────────────────────────────────\r\n  const totalLabels = printList.reduce(\r\n    (sum, item) => sum + (item.quantity || 0),\r\n    0\r\n  );\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      {/*────────────────────────────────────────────────────────────────────*/}\r\n      {/* 1) Print‐only style block: hide everything except .print-area */}\r\n      <style>\r\n        {`\r\n        @media print {\r\n          /* Hide everything except the print‐area */\r\n          body * {\r\n            visibility: hidden;\r\n          }\r\n          .print-area, .print-area * {\r\n            visibility: visible;\r\n          }\r\n          .print-area {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n          }\r\n        }\r\n      `}\r\n      </style>\r\n      {/*────────────────────────────────────────────────────────────────────*/}\r\n\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      {/* Sidebar + Main Content */}\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        <div className=\"flex-grow p-2 overflow-x-auto transition-all duration-300\">\r\n          {/* Header */}\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-1 bg-white rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-baseline gap-2 sm:flex-row\">\r\n              <h1 className=\"text-xl font-semibold text-gray-800\">\r\n                Print Labels\r\n              </h1>\r\n              <span className=\"text-sm text-gray-600\">Add/Update Sales</span>\r\n            </div>\r\n            <nav className=\"flex items-center text-sm text-gray-500\">\r\n              <Link\r\n                to=\"/dashboard\"\r\n                className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                <FaTachometerAlt className=\"mr-2\" /> Home\r\n              </Link>\r\n              <BiChevronRight className=\"mx-2\" />\r\n              <Link\r\n                to=\"/print-labels\"\r\n                className=\"text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                Print Labels\r\n              </Link>\r\n            </nav>\r\n          </header>\r\n\r\n          {/*──────────────────────────────────────────────────────────────*/}\r\n          {/* 2) Main Content: Warehouse Selector, Search, Table, and Print */}\r\n          {/*──────────────────────────────────────────────────────────────*/}\r\n          <div className=\"p-4 mt-5 overflow-auto border-t-4 rounded-lg border-cyan-500\">\r\n            {/* ─── Warehouse Selector ─────────────────────────────────── */}\r\n            <div className=\"flex justify-center mb-4\">\r\n              <select\r\n                value={selectedWarehouse}\r\n                onChange={(e) => setSelectedWarehouse(e.target.value)}\r\n                className=\"w-full max-w-xs px-4 py-2 border rounded-md bg-white focus:outline-none focus:ring-2 focus:ring-cyan-400\"\r\n              >\r\n                <option value=\"\">Select Warehouse</option>\r\n                {warehouses\r\n                  .filter((w) => w.status === \"Active\")\r\n                  .map((w) => (\r\n                    <option key={w._id} value={w._id}>\r\n                      {w.warehouseName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* ─── Search Bar ─────────────────────────────────────────── */}\r\n            <div className=\"flex justify-center mb-4\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Item name / Barcode / Itemcode\"\r\n                className=\"w-full px-4 py-2 text-gray-700 border border-gray-300 rounded-md md:w-1/2 lg:w-1/2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                disabled={!selectedWarehouse}\r\n              />\r\n            </div>\r\n\r\n            {/* ─── Dropdown of Filtered Items ───────────────────────────── */}\r\n            {searchQuery.trim() !== \"\" && filteredItems.length > 0 && (\r\n              <ul className=\"max-h-60 overflow-y-auto bg-white border rounded shadow mb-4 p-2\">\r\n                {filteredItems.map((item) => (\r\n                  <li\r\n                    key={item._id}\r\n                    className=\"flex items-center justify-between px-3 py-2 border-b last:border-none hover:bg-gray-50 cursor-pointer\"\r\n                    onClick={() => handleAddItem(item)}\r\n                  >\r\n                    <span className=\"text-gray-800\">\r\n                      <strong>{item.itemCode}</strong> — {item.itemName}\r\n                    </span>\r\n                    <span className=\"text-sm text-gray-500\">\r\n                      Stock: {item.currentStock}\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n\r\n            {/* ─── Items to Print Table ─────────────────────────────────── */}\r\n            <div className=\"p-4 bg-white rounded-md shadow-md\">\r\n              {/* Table Header */}\r\n              <div className=\"flex justify-center gap-x-2\">\r\n                <div className=\"w-64 px-4 py-2 text-sm font-semibold text-center text-white bg-cyan-600\">\r\n                  Item Name\r\n                </div>\r\n                <div className=\"w-64 px-4 py-2 text-sm font-semibold text-center text-white bg-cyan-600\">\r\n                  Quantity\r\n                </div>\r\n                <div className=\"w-24 px-4 py-2 text-sm font-semibold text-center text-white bg-cyan-600\">\r\n                  Action\r\n                </div>\r\n              </div>\r\n\r\n              {/* Table Body */}\r\n              {printList.length === 0 ? (\r\n                <div className=\"py-4 text-center text-gray-500\">\r\n                  No items in print list\r\n                </div>\r\n              ) : (\r\n                printList.map((item) => (\r\n                  <div\r\n                    key={item._id}\r\n                    className=\"flex items-center justify-center py-2 border-t gap-x-2\"\r\n                  >\r\n                    <div className=\"w-64 text-center\">{item.itemName}</div>\r\n                    <div className=\"w-64 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        className=\"w-20 py-1 text-center border border-gray-300 rounded-md\"\r\n                        value={item.quantity}\r\n                        onChange={(e) =>\r\n                          setPrintList((prev) =>\r\n                            prev.map((p) =>\r\n                              p._id === item._id\r\n                                ? {\r\n                                    ...p,\r\n                                    quantity:\r\n                                      parseInt(e.target.value, 10) || 1,\r\n                                  }\r\n                                : p\r\n                            )\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"w-24 text-center\">\r\n                      <button\r\n                        className=\"px-2 py-1 text-white bg-red-500 rounded\"\r\n                        onClick={() => handleRemoveItem(item._id)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n\r\n              {/* Total Labels */}\r\n              <div className=\"flex items-center mt-1 ml-20\">\r\n                <span className=\"mr-2 font-semibold text-gray-700\">\r\n                  Total Labels:\r\n                </span>\r\n                <span className=\"text-gray-600\">{totalLabels}</span>\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              <div className=\"flex justify-center mt-2 space-x-4\">\r\n                <button\r\n                  className=\"w-40 px-6 py-2 font-semibold text-white transition duration-300 bg-green-500 shadow-md hover:bg-green-600\"\r\n                  onClick={handlePreview}\r\n                >\r\n                  Preview\r\n                </button>\r\n                <button\r\n                  className=\"w-40 px-6 py-2 font-semibold text-white transition duration-300 bg-orange-500 shadow-md hover:bg-orange-600\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* ─── Print Button Section ────────────────────────────────────── */}\r\n            <div className=\"px-6 py-4 mt-2 bg-white rounded-md shadow-md\">\r\n              <div className=\"mb-4 border-b-2 border-cyan-500\"></div>\r\n              <div className=\"flex justify-end\">\r\n                <button\r\n                  className=\"px-4 py-1 font-bold text-white transition duration-300 shadow-md bg-cyan-600 hover:bg-cyan-600\"\r\n                  onClick={handlePrint}\r\n                >\r\n                  Print\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/*────────────────────────────────────────────────────────────────────*/}\r\n      {/* 3) Print‐only area: render the label cards here.                  */}\r\n      {/*    When you click “Print,” the @media print block above will hide   */}\r\n      {/*    everything else except this .print-area.                         */}\r\n      {/*────────────────────────────────────────────────────────────────────*/}\r\n      <div className=\"print-area hidden\">\r\n        <div className=\"p-4\">\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            {printList.map((item) => (\r\n              <div\r\n                key={item._id}\r\n                className=\"border p-3 text-center break-inside-avoid\"\r\n                style={{ pageBreakInside: \"avoid\" }}\r\n              >\r\n                <div className=\"font-bold mb-2 text-lg\">\r\n                  {item.itemName}\r\n                </div>\r\n                <div className=\"text-sm mb-1\">Code: {item.itemCode}</div>\r\n                <div className=\"text-sm mb-1\">Qty: {item.quantity}</div>\r\n                {/* If you have a barcode image source, you can insert it here: */}\r\n                {/* <img src={item.barcodeImageUrl} alt=\"Barcode\" className=\"mx-auto\" /> */}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*────────────────────────────────────────────────────────────────────*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrintLabels;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","warehouses","setWarehouses","selectedWarehouse","setSelectedWarehouse","filteredItems","setFilteredItems","loading","setLoading","searchQuery","setSearchQuery","rowQuantities","setRowQuantities","printList","setPrintList","useEffect","window","innerWidth","async","token","localStorage","getItem","list","axios","get","headers","Authorization","data","length","_list$find","restricted","find","w","isRestricted","status","defaultWh","_id","err","console","error","message","fetchWarehouses","trimmed","trim","query","warehouseId","filteredByWarehouse","params","warehouse","search","map","item","_item$barcodes","isVariant","Boolean","parentItemId","parentId","variantId","itemName","variantName","itemCode","barcode","barcodes","currentStock","filter","it","_it$warehouse","exactHit","handleAddItem","fetchSearchItems","quantity","p","totalLabels","reduce","sum","Link","to","FaTachometerAlt","BiChevronRight","value","onChange","e","target","warehouseName","type","placeholder","disabled","onClick","min","prev","parseInt","handleRemoveItem","itemId","handlePreview","alert","JSON","stringify","handleClose","handlePrint","print","style","pageBreakInside"],"sourceRoot":""}