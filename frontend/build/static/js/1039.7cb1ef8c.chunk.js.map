{"version":3,"file":"static/js/1039.7cb1ef8c.chunk.js","mappings":"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","sources":["Loading.jsx","components/Sales/ReceivePayment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport LoadingScreen from \"../../Loading\";\r\n\r\nconst ReceivePayment = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const saleId = queryParams.get('id'); // Changed from 'invoice' to 'id' for consistency\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [invoiceData, setInvoiceData] = useState({\r\n    customer: '',\r\n    saleCode: '',\r\n    totalAmount: 0,\r\n    totalPaid: 0,\r\n    dueAmount: 0\r\n  });\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    paymentDate: new Date().toISOString().split('T')[0],\r\n    paymentType: '',\r\n    amount: '',\r\n    account: '',\r\n    paymentNote: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) {\r\n      setSidebarOpen(false);\r\n    }\r\n    if (!saleId) {\r\n      alert(\"Invalid sale ID\");\r\n      navigate('/sales-list');\r\n      return;\r\n    }\r\n    fetchData();\r\n  }, [saleId, navigate]);\r\n\r\n  const fetchData = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"No token found, please log in\");\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Fetch invoice details\r\n      const invoicesResponse = await axios.get(`api/pos/invoices`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      // Log the saleId and invoices response for debugging\r\n      console.log(\"Sale ID:\", saleId);\r\n      console.log(\"Invoices Response:\", invoicesResponse.data);\r\n\r\n      // Try matching by _id first\r\n      let matchingInvoice = invoicesResponse.data.find(invoice => invoice._id.toString() === saleId);\r\n\r\n      // Fallback: Try matching by saleCode if _id doesn't match\r\n      if (!matchingInvoice) {\r\n        matchingInvoice = invoicesResponse.data.find(invoice => invoice.saleCode === saleId);\r\n      }\r\n\r\n      if (!matchingInvoice) {\r\n        throw new Error(`Invoice not found for Sale ID or Sale Code: ${saleId}`);\r\n      }\r\n\r\n      // Fetch existing payments\r\n      const paymentsResponse = await axios.get(`api/payments/${matchingInvoice._id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      // Fetch payment types\r\n      const paymentTypesResponse = await axios.get(`api/paymenttypes`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      // Fetch accounts (optional)\r\n      let accountsData = [];\r\n      try {\r\n        const accountsResponse = await axios.get(`api/accounts`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        accountsData = accountsResponse.data;\r\n      } catch (err) {\r\n        console.warn(\"Accounts endpoint not available, skipping accounts:\", err.message);\r\n      }\r\n\r\n      const totalPaid = paymentsResponse.data.payments.reduce((sum, payment) => sum + (payment.paymentAmount || 0), 0);\r\n      const totalAmount = matchingInvoice.amount || 0;\r\n      const dueAmount = totalAmount - totalPaid;\r\n\r\n      setInvoiceData({\r\n        customer: matchingInvoice.customer?.customerName || \"N/A\",\r\n        saleCode: matchingInvoice.saleCode || \"N/A\",\r\n        totalAmount: totalAmount,\r\n        totalPaid: totalPaid,\r\n        dueAmount: dueAmount\r\n      });\r\n\r\n      setPaymentTypes(paymentTypesResponse.data || []);\r\n      setAccounts(accountsData);\r\n\r\n      if (paymentTypesResponse.data.length > 0) {\r\n        setFormData(prev => ({ ...prev, paymentType: paymentTypesResponse.data[0]._id }));\r\n      }\r\n\r\n      if (accountsData.length > 0) {\r\n        setFormData(prev => ({ ...prev, account: accountsData[0]._id }));\r\n      }\r\n\r\n      if (dueAmount > 0) {\r\n        setFormData(prev => ({ ...prev, amount: dueAmount.toFixed(2) }));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n      alert(`Could not load invoice details: ${err.message}`);\r\n      navigate('/sales-list');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"No token found, please log in\");\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    if (!formData.paymentDate) {\r\n      setError(\"Payment date is required\");\r\n      return;\r\n    }\r\n    if (!formData.paymentType) {\r\n      setError(\"Payment type is required\");\r\n      return;\r\n    }\r\n    if (!formData.amount || formData.amount <= 0) {\r\n      setError(\"Amount must be greater than 0\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const payload = {\r\n        saleId: saleId,\r\n        paymentDate: formData.paymentDate,\r\n        paymentType: formData.paymentType,\r\n        amount: parseFloat(formData.amount),\r\n        account: formData.account || undefined,\r\n        paymentNote: formData.paymentNote || undefined\r\n      };\r\n\r\n      await axios.post(`api/payments/receive`, payload, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      alert(\"Payment received successfully!\");\r\n      navigate('/sales-list');\r\n    } catch (err) {\r\n      console.error(\"Error submitting payment:\", err);\r\n      setError(`Failed to submit payment: ${err.response?.data?.message || err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"box-border flex min-h-screen\">\r\n        <div className=\"w-auto\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        <div className=\"flex flex-col p-2 md:p-2 w-full mx-auto overflow-x-auto\">\r\n          <header className=\"flex flex-col items-center justify-between px-2 py-2 mb-2 bg-gray-100 rounded-md shadow md:flex-row\">\r\n            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">\r\n                Receive Payment\r\n              </h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">\r\n                Payment for Invoice {invoiceData.saleCode}\r\n              </span>\r\n            </div>\r\n          </header>\r\n          <div className=\"p-4 bg-white shadow-md rounded-md mt-3 border-t-4 border-cyan-500\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n              <div>\r\n                <h3 className=\"font-semibold text-gray-700\">Customer Details</h3>\r\n                <p>{invoiceData.customer}</p>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"font-semibold text-gray-700\">Invoice Details</h3>\r\n                <p>Invoice #: {invoiceData.saleCode}</p>\r\n                <p>Grand Total: ₹{invoiceData.totalAmount.toFixed(2)}</p>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"font-semibold text-gray-700\">Payment Status</h3>\r\n                <p>Paid Amount: ₹{invoiceData.totalPaid.toFixed(2)}</p>\r\n                <p>Due Amount: ₹{invoiceData.dueAmount.toFixed(2)}</p>\r\n              </div>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              {error && (\r\n                <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    Payment Date <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"paymentDate\"\r\n                    value={formData.paymentDate}\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-cyan-500 focus:border-cyan-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    Payment Type <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <select\r\n                    name=\"paymentType\"\r\n                    value={formData.paymentType}\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-cyan-500 focus:border-cyan-500\"\r\n                    required\r\n                  >\r\n                    {paymentTypes.length === 0 ? (\r\n                      <option value=\"\">No payment types available</option>\r\n                    ) : (\r\n                      paymentTypes.map(type => (\r\n                        <option key={type._id} value={type._id}>\r\n                          {type.paymentTypeName}\r\n                        </option>\r\n                      ))\r\n                    )}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    Amount <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"amount\"\r\n                    value={formData.amount}\r\n                    onChange={handleChange}\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-cyan-500 focus:border-cyan-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    Account (Optional)\r\n                  </label>\r\n                  <select\r\n                    name=\"account\"\r\n                    value={formData.account}\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-cyan-500 focus:border-cyan-500\"\r\n                  >\r\n                    <option value=\"\">Select Account</option>\r\n                    {accounts.map(account => (\r\n                      <option key={account._id} value={account._id}>\r\n                        {account.accountName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"md:col-span-2\">\r\n                  <label className=\"block text-sm font-medium text-gray-700\">\r\n                    Payment Note (Optional)\r\n                  </label>\r\n                  <textarea\r\n                    name=\"paymentNote\"\r\n                    value={formData.paymentNote}\r\n                    onChange={handleChange}\r\n                    className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-cyan-500 focus:border-cyan-500\"\r\n                    rows=\"3\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4 flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => navigate('/sales-list')}\r\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white bg-cyan-500 rounded-md hover:bg-cyan-600\"\r\n                >\r\n                  Submit Payment\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceivePayment;"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","ReceivePayment","navigate","useNavigate","location","useLocation","saleId","URLSearchParams","search","get","loading","setLoading","invoiceData","setInvoiceData","customer","saleCode","totalAmount","totalPaid","dueAmount","paymentTypes","setPaymentTypes","accounts","setAccounts","formData","setFormData","paymentDate","Date","toISOString","split","paymentType","amount","account","paymentNote","error","setError","useEffect","window","innerWidth","alert","fetchData","async","token","localStorage","getItem","_matchingInvoice$cust","invoicesResponse","axios","headers","Authorization","console","log","data","matchingInvoice","find","invoice","_id","toString","Error","paymentsResponse","paymentTypesResponse","accountsData","accountsResponse","err","warn","message","payments","reduce","sum","payment","paymentAmount","customerName","length","prev","toFixed","handleChange","e","name","value","target","onSubmit","preventDefault","payload","parseFloat","undefined","post","_err$response","_err$response$data","response","type","onChange","required","map","paymentTypeName","step","min","accountName","rows","onClick"],"sourceRoot":""}