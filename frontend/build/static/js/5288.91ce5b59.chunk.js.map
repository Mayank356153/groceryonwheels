{"version":3,"file":"static/js/5288.91ce5b59.chunk.js","mappings":"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","sources":["components/Settings/AddPaymentType.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddPaymentType() {\r\n  const navigate = useNavigate();\r\n  const { paymentTypeId } = useParams(); // if present, we are editing\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  const [formData, setFormData] = useState({\r\n    paymentTypeName: \"\",\r\n    status: \"active\",\r\n  });\r\n\r\n  // If editing, fetch the existing record\r\n  useEffect(() => {\r\n    if (paymentTypeId) {\r\n      fetchPaymentType(paymentTypeId);\r\n    }\r\n  }, [paymentTypeId]);\r\n\r\n  const fetchPaymentType = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await axios.get(\r\n        `api/payment-types/${id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const data = res.data.data;\r\n      setFormData({\r\n        paymentTypeName: data.paymentTypeName || \"\",\r\n        status: data.status || \"active\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching payment type:\", error.message);\r\n      alert(\"Error fetching payment type data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n\r\n      if (paymentTypeId) {\r\n        // Update existing\r\n        await axios.put(\r\n          `api/payment-types/${paymentTypeId}`,\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"Payment Type updated successfully!\");\r\n      } else {\r\n        // Create new\r\n        await axios.post(\r\n          \"api/payment-types\",\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"Payment Type created successfully!\");\r\n      }\r\n      navigate(\"/payment-types-list\"); // your list route\r\n    } catch (error) {\r\n      console.error(\"Error submitting payment type:\", error.message);\r\n      alert(\"Error submitting payment type.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    navigate(\"/payment-types-list\");\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div\r\n          className={`flex-grow p-4 mt-24 transition-all duration-300 ${\r\n            isSidebarOpen ? \"ml-64\" : \"ml-0\"\r\n          }`}\r\n        >\r\n          <h1 className=\"mb-4 text-2xl font-bold\">\r\n            {paymentTypeId ? \"Edit Payment Type\" : \"Add Payment Type\"}\r\n          </h1>\r\n          <div className=\"max-w-lg p-6 bg-white rounded shadow-md\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">Payment Type Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"paymentTypeName\"\r\n                  value={formData.paymentTypeName}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 font-semibold\">Status</label>\r\n                <select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                >\r\n                  <option value=\"active\">Active</option>\r\n                  <option value=\"inactive\">Inactive</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white bg-green-500 rounded hover:bg-green-600\"\r\n                  disabled={loading}\r\n                >\r\n                  {paymentTypeId ? \"Update\" : \"Save\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-4 py-2 text-white bg-orange-500 rounded hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPaymentType;\r\n"],"names":["navigate","useNavigate","paymentTypeId","useParams","isSidebarOpen","setSidebarOpen","useState","loading","setLoading","useEffect","window","innerWidth","formData","setFormData","paymentTypeName","status","fetchPaymentType","async","token","localStorage","getItem","data","axios","get","id","headers","Authorization","error","console","message","alert","handleChange","e","prev","target","name","value","_jsx","children","_jsxs","className","Navbar","Sidebar","onSubmit","preventDefault","put","post","type","onChange","required","disabled","onClick","handleClose"],"sourceRoot":""}