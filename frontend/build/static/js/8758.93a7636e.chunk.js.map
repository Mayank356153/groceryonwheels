{"version":3,"file":"static/js/8758.93a7636e.chunk.js","mappings":"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","sources":["Loading.jsx","components/Sales/SalesPayment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, {useEffect, useState} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from 'axios';\r\nimport Select from 'react-select'\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from \"jspdf\";\r\nimport LoadingScreen from '../../Loading.jsx';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst PurchaseOverview = () => {\r\n  const navigate=useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const[currentPage,setCurrentPage]=useState(1)\r\nconst[paymentType,setPaymentType]=useState([])\r\nconst[salesPayment,setSalesPayment]=useState([])\r\nconst[searchtype,setSearchType]=useState(\"\")\r\nconst[total,setTotal]=useState(0)\r\nconst[loading,setLoading]=useState(false)\r\nconst[actionMenu,setActionMenu]=useState(null)\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  const fetchSales = async ()=>{\r\n    const token=localStorage.getItem(\"token\")\r\n    if(!token){\r\n      console.log (\"No token found redirecting...\")\r\n    \r\n      return ;\r\n    }\r\n    setLoading(true)\r\n    try {\r\n      const response = await axios.get(\"api/payments\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log(\"Sales List\")\r\n      \r\n     console.log(response.data);\r\n     console.log(\"📑 payments payload:\", response.data);\r\n\r\n     setSalesPayment(response.data)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    }\r\n    finally{\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const fetchPaymentType = async ()=>{\r\n    const token=localStorage.getItem(\"token\")\r\n    if(!token){\r\n      console.log (\"No token found redirecting...\")\r\n    \r\n      return ;\r\n    }\r\n    setLoading(true)\r\n    try {\r\n      const response = await axios.get(\"api/payment-types\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log(\"Payment Type List\")\r\n      \r\n     console.log(response.data);\r\n     const newPaymentType = [\r\n      { label: \"All\", value: \"all\" },\r\n      ...response.data.data\r\n        .filter(item => item.status === \"active\")\r\n        .map(item => ({\r\n          label: item.paymentTypeName,\r\n          value: item.paymentTypeName\r\n        }))\r\n    ];\r\n    \r\n     setPaymentType(newPaymentType)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    }\r\n    finally{\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const filteredData = salesPayment.filter(item =>{\r\n    \r\n    const paymenttype=searchtype === \"all\" || searchtype === \"\" || item.paymentType === searchtype\r\n    const search=item.customer.toLowerCase().includes(searchTerm.toLowerCase()) \r\n     return paymenttype && search\r\n  }\r\n  );\r\n  \r\n const handleDelete = async (paymentId) => {\r\n  if (!window.confirm(\"Are you sure you want to delete this payment?\")) return;\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return alert(\"No token, please login again.\");\r\n\r\n  setLoading(true);\r\n  try {\r\n    await axios.delete(`/api/sales/payments/${paymentId}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    await fetchSales();                 // refresh the table\r\n    alert(\"Payment deleted\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.response?.data?.message || err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst calculate = () => {\r\n    const totalAmount = filteredData.reduce((sum, item) => sum + item.paymentAmount, 0);\r\n  setTotal(totalAmount);\r\n};\r\n\r\n  useEffect(()=>{\r\n    calculate()\r\n  },[filteredData])\r\n\r\n  \r\n  \r\n\r\n  \r\n  useEffect(()=>{\r\n    fetchSales();\r\n    fetchPaymentType()\r\n  },[])\r\n\r\n\r\n\r\n    const handleCopy = () => {\r\n        const data = filteredData.map(sale => `${sale.paymentCode}, ${new Date(sale.paymentDate).toDateString()},${sale.saleCode},${sale.customer},${sale.paymentAmount},${sale.paymentType},${sale.paymentNote},${sale.creatorName || \"N/A\"} `).join('\\n');\r\n        navigator.clipboard.writeText(data);\r\n        alert(\"Data copied to clipboard!\");\r\n    };\r\n\r\n    const handleExcelDownload = () => {\r\n        const ws = XLSX.utils.json_to_sheet(filteredData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"salepayment\");\r\n        XLSX.writeFile(wb, \"salepayment.xlsx\");\r\n    };\r\n\r\n    const handlePdfDownload = () => {\r\n        const doc = new jsPDF();\r\n        doc.text(\"Roles List\", 20, 20);\r\n        const tableData = filteredData.map(sale => [sale.paymentCode,new Date(sale.paymentDate).toDateString(),sale.saleCode,sale.customer,sale.paymentAmount,sale.paymentType,sale.paymentNote,sale.creatorName || \"N/A\"]);\r\n        autoTable(doc, {\r\n            head: [[  'Payment Code', 'Payment Date', 'Sales Code', 'Customer Name',\r\n                'Payment', 'Payment Type', 'Payment Note', 'Created by']],\r\n            body: tableData,\r\n        });\r\n        doc.save('salePayment.pdf');\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        window.print();\r\n    };\r\n\r\n    const handleCsvDownload = () => {\r\n        const csvContent = \"data:text/csv;charset=utf-8,\" + filteredData.map(exp => Object.values(exp).join(\",\")).join(\"\\n\");\r\n        const encodedUri = encodeURI(csvContent);\r\n        const link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"salepayment.csv\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    const indexOfLastItem = currentPage * entriesPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\n    const totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\n    const currentUsers = filteredData.slice((currentPage-1)*entriesPerPage, currentPage*entriesPerPage);\r\n\r\n    const handlePageChange = (newPage) =>  {\r\n      if(newPage >=1 && newPage <=totalPages )\r\n      setCurrentPage(newPage);\r\n    }\r\n    const handleEntriesChange=(e)=>{\r\n      setEntriesPerPage(Number(e.target.value))\r\n      setCurrentPage(1)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  if(loading) return (<LoadingScreen />)\r\n  return (\r\n<div className=\"flex flex-col h-screen\">\r\n          {/* Navbar */}\r\n          <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n              {/* Main Content */}\r\n              <div className=\"box-border flex min-h-screen \">\r\n                {/* Sidebar */}\r\n                <div className='w-auto'>\r\n              {/* Sidebar component with open state */}\r\n              <Sidebar isSidebarOpen={isSidebarOpen} />\r\n                </div>\r\n                 {/* Content */}\r\n         <div className={`overflow-x-auto  flex flex-col p-2 md:p-2 min-h-screen w-full`}>\r\n      {/* ----------------header----------------------------------- */}\r\n<header className=\"flex flex-col items-center justify-start px-2 py-2 mb-2 bg-gray-100 rounded-md shadow md:justify-between md:flex-row\">\r\n            \r\n            <div className=\"flex items-baseline gap-2 sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Sales Payment List</h1>\r\n              <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Sales Payment</span>\r\n            </div>\r\n            \r\n            <nav className=\"flex flex-wrap items-center justify-center gap-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"text-gray-500 hover:text-cyan-600\" /> Home\r\n              </NavLink>\r\n              {/* <BiChevronRight className=\"hidden sm:mx-2 sm:inline\" /> */}\r\n              <NavLink to=\"/sales-payment\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n               &gt; Sales Payment List\r\n              </NavLink>\r\n            </nav>\r\n</header>\r\n    \r\n{/* ------------------------------------------------------------------ */}\r\n<div className=\"flex flex-col flex-wrap gap-2 p-4 bg-white border rounded-md shadow-md md:flex-row\">\r\n      {/* Fourth Div (Payment Type) */}\r\n      <div className=\"flex flex-col\">\r\n        <label className=\"text-sm font-semibold text-gray-700\">Payment Type</label>\r\n        <Select options={paymentType} className='w-64' onChange={(selectedoption)=>setSearchType(selectedoption.value)}/>\r\n      </div>\r\n{/* Fifth Div (Payment Status) */}\r\n      {/*<div className=\"flex flex-col flex-1\">\r\n        <label className=\"text-sm font-semibold text-gray-700\">Payment Status</label>\r\n        <select className=\"w-64 p-2 border rounded-md\">\r\n          <option>-Select-</option>\r\n          <option>Paid</option>\r\n          <option>Pending</option>\r\n          <option>Failed</option>\r\n        </select>\r\n      </div>*/}\r\n    </div>\r\n  <div className=\"flex flex-col justify-between mt-4 mb-4 space-y-2 md:flex-row md:space-y-0 md:items-center\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-sm\">Show</span>\r\n                <select className=\"p-2 text-sm border border-gray-300 rounded-md\" value={entriesPerPage} onChange={handleEntriesChange}>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>50</option>\r\n                </select>\r\n                <span className=\"text-sm\">Entries</span>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2 lg:flex-row\">\r\n                <div className='flex items-center justify-between flex-1 gap-2'>\r\n                <button onClick={handleCopy} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Copy</button>\r\n                <button onClick={handleExcelDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Excel</button>\r\n                <button onClick={handlePdfDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">PDF</button>\r\n                <button onClick={handlePrint} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">Print</button>\r\n                <button onClick={handleCsvDownload} className=\"px-3 py-2 text-sm text-white bg-cyan-500\">CSV</button>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Search\" className=\"w-full p-2 text-sm border border-gray-300 \" onChange={(e) => setSearchTerm(e.target.value)} />\r\n              </div>\r\n            </div>\r\n\r\n{/* ------------------------------------------------------------------- */}\r\n      <div className=\"mt-6 overflow-x-auto\">\r\n        <table className=\"min-w-full bg-white border border-gray-300 shadow-sm\">\r\n          <thead className=\"bg-gray-200\">\r\n            <tr>\r\n              {[\r\n                'Payment Code', 'Sales Code', 'Customer Name',\r\n                'Payment', 'Payment Type', 'Payment Note', 'Created by'\r\n              ].map((header) => (\r\n                <th key={header} className=\"px-4 py-2 text-sm font-bold text-left border\">{header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {(currentUsers.length<=0)? (<tr><td colSpan=\"10\" className=\"p-4 text-center text-gray-500 border\">No data available in table</td></tr>):\r\n            (currentUsers.map((sale)=>(\r\n               <tr className=\"bg-gray-100 \" key={sale.saleId}>\r\n              <td  className=\"text-center border\">{sale.paymentCode}</td>\r\n              {/*<td  className=\"text-center border\">{new Date(sale.paymentDate).toDateString()}</td>*/}\r\n              <td  className=\"text-center border\">{sale.saleCode}</td>\r\n              <td  className=\"text-center border\">{sale.customer}</td>\r\n              <td  className=\"text-center border\">{sale.paymentAmount}</td>\r\n              <td  className=\"text-center border\">{sale.paymentType}</td>\r\n              <td  className=\"text-center border\">{sale.paymentNote}</td>\r\n              <td  className=\"text-center border\">{sale.creatorName || \"N/A\"}</td>\r\n              <td className=\"relative p-2 border\">\r\n{/*<button\r\nclassName={`flex items-center gap-2 px-4 py-2 text-sm font-semibold text-white bg-cyan-600 rounded-full shadow-sm \r\n            hover:bg-cyan-700 active:scale-95 transition-all duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-cyan-400`}\r\nonClick={() => {\r\n  if (actionMenu) setActionMenu(null);\r\n  else setActionMenu(sale.saleId);\r\n}}\r\n>\r\n<span>Action</span>\r\n<svg\r\n  className={`w-4 h-4 transition-transform duration-200 ${\r\n    actionMenu === sale.saleId ? \"rotate-180\" : \"\"\r\n  }`}\r\n  fill=\"none\"\r\n  stroke=\"currentColor\"\r\n  strokeWidth={2}\r\n  viewBox=\"0 0 24 24\"\r\n>\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\r\n</svg>\r\n</button>*/}\r\n\r\n\r\n                      {actionMenu === sale.saleId && (\r\n                        <div className=\"absolute right-0 z-40 mt-2 bg-white border shadow-lg w-28\">\r\n                         \r\n                          <button\r\n                            className=\"w-full px-1 py-0 text-left text-red-500 hover:bg-gray-100\"\r\n                            onClick={() => handleDelete(sale.paymentId)}\r\n\r\n                          >\r\n                            🗑️ Delete\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </td>                \r\n            </tr>  \r\n            )))}\r\n            {/* Total Row */}\r\n            {currentUsers.length>0 &&(\r\n               <tr className=\"font-bold bg-gray-100\">\r\n               <td colSpan=\"4\" className=\"text-right border\">Total :</td>\r\n               <td className=\"text-center border\">{total}</td>\r\n               <td className=\"text-center border\"></td>\r\n               <td className=\"text-center border\"></td>\r\n               <td className=\"text-center border\"></td>\r\n               <td className=\"text-center border\"></td>\r\n             </tr>            \r\n            )}\r\n           \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"flex flex-col items-start justify-between gap-2 p-2 md:justify-between md:flex-row\">\r\n              <span>                    <span>Showing {entriesPerPage * (currentPage - 1) + 1} to {Math.min(entriesPerPage * currentPage, filteredData.length)} of {filteredData.length} entries</span>              </span>\r\n              <div className='flex justify-between w-full md:w-auto md:gap-2'>\r\n              <button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === 1 \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage - 1)}\r\n  disabled={currentPage === 1}\r\n>\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n  </svg>\r\n  Previous\r\n</button>\r\n\r\n<button\r\n  className={`flex items-center gap-2 px-4 py-2 text-sm font-semibold rounded-lg transition-all duration-200 shadow-md \r\n    ${currentPage === totalPages \r\n      ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" \r\n      : \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"}`}\r\n  onClick={() => handlePageChange(currentPage + 1)}\r\n  disabled={currentPage === totalPages}\r\n>\r\n  Next\r\n  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n  </svg>\r\n</button>\r\n\r\n              </div>\r\n            </div>\r\n      \r\n    </div>\r\n\r\n    \r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseOverview;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","PurchaseOverview","useNavigate","searchTerm","setSearchTerm","entriesPerPage","setEntriesPerPage","currentPage","setCurrentPage","paymentType","setPaymentType","salesPayment","setSalesPayment","searchtype","setSearchType","total","setTotal","loading","setLoading","actionMenu","setActionMenu","useEffect","window","innerWidth","fetchSales","async","token","localStorage","getItem","response","axios","get","headers","Authorization","console","log","data","error","alert","message","filteredData","filter","item","paymenttype","search","customer","toLowerCase","includes","calculate","totalAmount","reduce","sum","paymentAmount","newPaymentType","label","value","status","map","paymentTypeName","fetchPaymentType","totalPages","Math","ceil","length","currentUsers","slice","handlePageChange","newPage","NavLink","to","FaTachometerAlt","Select","options","onChange","selectedoption","e","Number","target","onClick","handleCopy","sale","paymentCode","Date","paymentDate","toDateString","saleCode","paymentNote","creatorName","join","navigator","clipboard","writeText","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","exp","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","type","placeholder","header","colSpan","saleId","confirm","delete","paymentId","err","_err$response","_err$response$data","handleDelete","min","disabled","fill","stroke","strokeWidth","viewBox","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}