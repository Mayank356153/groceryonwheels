{"version":3,"file":"static/js/823.e42ef5df.chunk.js","mappings":"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","sources":["components/Reports/SalesPaymentReport.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\nconst SalesPaymentReport = () => {\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [reportData, setReportData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  // Function to fetch data from backend\r\n  const fetchReportData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://your-backend-api.com/sales-payment-report?fromDate=${fromDate}&toDate=${toDate}&customer=${customerName}`\r\n      );\r\n      setReportData(response.data);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch data\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchReportData();\r\n  }, [fromDate, toDate, customerName]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar with sidebar state passed */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        {/* Sidebar */}\r\n        <div >\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n    <div className=\"w-full p-4 mt-4 bg-white rounded shadow \">\r\n      <h2 className=\"mb-3 text-dark\">Sales & Payment Report</h2>\r\n\r\n      <div className=\"mb-3 row g-3\">\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">From Date</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={fromDate}\r\n            onChange={(e) => setFromDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">To Date</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={toDate}\r\n            onChange={(e) => setToDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Customer Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search Name/Mobile\"\r\n            value={customerName}\r\n            onChange={(e) => setCustomerName(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gap-2 d-flex\">\r\n        <button className=\"btn btn-success\" onClick={fetchReportData}>Show</button>\r\n        <button className=\"btn btn-warning\">Close</button>\r\n      </div>\r\n\r\n      {loading && <p>Loading data...</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n      <div className=\"mt-4\">\r\n        <h5 className=\"fw-bold\">Records Table</h5>\r\n        <table className=\"table table-bordered table-striped\">\r\n          <thead className=\"table-primary\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Date</th>\r\n              <th>Invoice No.</th>\r\n              <th>Referenced Bill No.</th>\r\n              <th>Description</th>\r\n              <th>Qty</th>\r\n              <th>Bill Amt(₹)</th>\r\n              <th>Receive(₹)</th>\r\n              <th>Total(₹)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {reportData.length > 0 ? (\r\n              reportData.map((record, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{record.date}</td>\r\n                  <td>{record.invoiceNo}</td>\r\n                  <td>{record.refBillNo}</td>\r\n                  <td>{record.description}</td>\r\n                  <td>{record.qty}</td>\r\n                  <td>{record.billAmt}</td>\r\n                  <td>{record.receive}</td>\r\n                  <td>{record.total}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"9\" className=\"text-center\">No records found</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesPaymentReport;\r\n"],"names":["SalesPaymentReport","fromDate","setFromDate","useState","toDate","setToDate","customerName","setCustomerName","reportData","setReportData","loading","setLoading","error","setError","isSidebarOpen","setSidebarOpen","useEffect","window","innerWidth","fetchReportData","async","response","axios","get","data","err","_jsxs","className","children","_jsx","Navbar","Sidebar","type","value","onChange","e","target","placeholder","onClick","length","map","record","index","date","invoiceNo","refBillNo","description","qty","billAmt","receive","total","colSpan"],"sourceRoot":""}