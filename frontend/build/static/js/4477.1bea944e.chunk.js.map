{"version":3,"file":"static/js/4477.1bea944e.chunk.js","mappings":"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","sources":["components/Sales/PaymentModal.jsx","components/Sales/CustomerPopup.jsx","components/Sales/POS.jsx","Loading.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\n/**\r\n * PaymentModal\r\n *\r\n * @param {Object}   props\r\n * @param {Function} props.onClose          – close the modal\r\n * @param {Function} props.onSubmit         – callback that receives { paymentRows, couponCode, adjustAdvancePayment, advance, selectedAccount }\r\n * @param {\"cash\"|\"multiple\"|\"bank\"} props.paymentMode\r\n * @param {Array}   props.paymentTypes      – [{ _id, paymentTypeName }]\r\n * @param {Array}   props.accounts          – [{ _id, accountName }]\r\n * @param {Array}   props.terminals         – [{ _id, tid, warehouse }]\r\n * @param {Number}  props.initialAdvance\r\n * @param {String}  props.initialAccount    – account id\r\n * @param {Object}  props.initialSummary    – { totalItems, totalPrice, discount, couponDiscount, totalPayable, totalPaying, balance, changeReturn }\r\n * @param {String}  props.selectedWarehouse – selected warehouse id\r\n */\r\nconst PaymentModal = ({\r\n  onClose,\r\n  onSubmit,\r\n  paymentMode,\r\n  paymentTypes = [],\r\n  accounts = [],\r\n  terminals = [],\r\n  initialAdvance = 0,\r\n  initialAccount = \"\",\r\n  initialSummary = {\r\n    totalItems: 0,\r\n    totalPrice: 0,\r\n    discount: 0,\r\n    couponDiscount: 0,\r\n    totalPayable: 0,\r\n    totalPaying: 0,\r\n    balance: 0,\r\n    changeReturn: 0,\r\n  },\r\n  selectedWarehouse,\r\n}) => {\r\n  /* ------------------------------------------------------------------ */\r\n  /* Helpers & initial state ------------------------------------------ */\r\n\r\n  const getId = (name) =>\r\n    paymentTypes.find(\r\n      (pt) => pt.paymentTypeName?.toLowerCase() === name.toLowerCase()\r\n    )?._id;\r\n\r\n  const [couponCode, setCouponCode] = useState(\"\");\r\n  const [advance, setAdvance] = useState(initialAdvance);\r\n  const [adjustAdvancePayment, setAdjustAdvancePayment] = useState(false);\r\n  const [summary, setSummary] = useState(initialSummary);\r\n\r\n  // Default row(s)\r\n  const [paymentRows, setPaymentRows] = useState(() => {\r\n    if (paymentMode === \"cash\") {\r\n      return [\r\n        {\r\n          paymentType: getId(\"Cash\") || \"\",\r\n          amount: initialSummary.totalPayable,\r\n          note: \"\",\r\n          terminal: null,\r\n          account: initialAccount || \"\", // Ensure account is set for cash\r\n        },\r\n      ];\r\n    } else if (paymentMode === \"bank\") {\r\n      return [\r\n        {\r\n          paymentType: getId(\"Bank\") || \"\",\r\n          amount: initialSummary.totalPayable,\r\n          note: \"\",\r\n          terminal: terminals.find((t) => t.warehouse === selectedWarehouse)?._id || \"\", // Default to first matching terminal\r\n          account: null,\r\n        },\r\n      ];\r\n    }\r\n    return [\r\n      {\r\n        paymentType: \"\",\r\n        amount: 0,\r\n        note: \"\",\r\n        terminal: null,\r\n        account: null,\r\n      },\r\n    ];\r\n  });\r\n\r\n  /* ------------------------------------------------------------------ */\r\n  /* Effects ----------------------------------------------------------- */\r\n\r\n  useEffect(() => {\r\n    // Calculate dynamic summary\r\n    const totalPaying = paymentRows.reduce(\r\n      (sum, row) => sum + Number(row.amount || 0),\r\n      0\r\n    );\r\n    const couponDiscount = couponCode ? initialSummary.couponDiscount : 0; // Backend handles coupon calculation\r\n    const advanceAmount = adjustAdvancePayment ? Number(advance) : 0;\r\n    const totalPayable =\r\n      initialSummary.totalPrice - initialSummary.discount - advanceAmount;\r\n    const balance = totalPayable - totalPaying;\r\n    const changeReturn =\r\n      totalPaying > totalPayable ? totalPaying - totalPayable : 0;\r\n\r\n    setSummary({\r\n      totalItems: initialSummary.totalItems,\r\n      totalPrice: initialSummary.totalPrice,\r\n      discount: initialSummary.discount,\r\n      couponDiscount,\r\n      totalPayable,\r\n      totalPaying,\r\n      balance: balance > 0 ? balance : 0,\r\n      changeReturn,\r\n    });\r\n  }, [\r\n    paymentRows,\r\n    couponCode,\r\n    adjustAdvancePayment,\r\n    advance,\r\n    initialSummary.totalPrice,\r\n    initialSummary.discount,\r\n    initialSummary.couponDiscount,\r\n    initialSummary.totalItems,\r\n  ]);\r\n\r\n  // Update terminal selection when selectedWarehouse changes\r\n  useEffect(() => {\r\n    setPaymentRows((rows) =>\r\n      rows.map((row) => {\r\n        if (row.paymentType === getId(\"Bank\")) {\r\n          const availableTerminals = terminals.filter(\r\n            (t) => t.warehouse === selectedWarehouse\r\n          );\r\n          const newTerminal = availableTerminals.find(\r\n            (t) => t._id === row.terminal\r\n          )\r\n            ? row.terminal\r\n            : availableTerminals[0]?._id || \"\";\r\n          return { ...row, terminal: newTerminal };\r\n        }\r\n        return row;\r\n      })\r\n    );\r\n  }, [selectedWarehouse, terminals, paymentTypes]);\r\n\r\n  /* ------------------------------------------------------------------ */\r\n  /* Handlers ---------------------------------------------------------- */\r\n\r\n  const addRow = () =>\r\n    paymentMode === \"multiple\" &&\r\n    setPaymentRows([\r\n      ...paymentRows,\r\n      {\r\n        paymentType: \"\",\r\n        amount: 0,\r\n        note: \"\",\r\n        terminal: null,\r\n        account: null,\r\n      },\r\n    ]);\r\n\r\n    const handleChangeRow = (idx, field, value) => {\r\n      setPaymentRows(rows =>\r\n        rows.map((r, i) => {\r\n          if (i !== idx) return r;\r\n    \r\n          // start with the raw update of the one field\r\n          const updated = { ...r, [field]: value };\r\n    \r\n          // if they just changed the paymentType, auto-fill account/terminal\r\n          if (field === \"paymentType\") {\r\n            const isCash = value === getId(\"Cash\");\r\n            const isBank = value === getId(\"Bank\");\r\n    \r\n            // for cash: assign the warehouse’s cash account\r\n            if (isCash) {\r\n              updated.account = initialAccount;\r\n              updated.terminal = null;\r\n            }\r\n            // for bank: pick the first terminal for that warehouse\r\n            else if (isBank) {\r\n              updated.terminal =\r\n                terminals.find((t) => t.warehouse === selectedWarehouse)?._id || \"\";\r\n              updated.account = null;\r\n            } else {\r\n              // other types clear both\r\n              updated.account = null;\r\n              updated.terminal = null;\r\n            }\r\n          }\r\n    \r\n          return updated;\r\n        })\r\n      );\r\n    };\r\n    \r\n\r\n  const handleSave = () => {\r\n    const invalid = paymentRows.some(\r\n      (r) =>\r\n        !r.paymentType ||\r\n        Number(r.amount) <= 0 ||\r\n        (r.paymentType === getId(\"Bank\") && !r.terminal) ||\r\n        (r.paymentType === getId(\"Cash\") && !r.account)\r\n    );\r\n    if (invalid) {\r\n      alert(\r\n        \"Select a payment type, enter a positive amount, select a terminal for bank payments, and select an account for cash payments.\"\r\n      );\r\n      return;\r\n    }\r\n    onSubmit({\r\n      paymentRows: paymentRows.map((r) => ({\r\n        paymentType: r.paymentType,\r\n        amount: Number(r.amount),\r\n        note: r.note,\r\n        terminal: r.terminal || undefined,\r\n        account: r.account || undefined, // Include account in payload\r\n      })),\r\n      couponCode,\r\n      adjustAdvancePayment,\r\n      advance: Number(advance),\r\n      selectedAccount: undefined, // No global selectedAccount\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  /* ------------------------------------------------------------------ */\r\n  /* Render ------------------------------------------------------------ */\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div className=\"relative w-full max-w-4xl p-4 bg-white rounded shadow-lg\">\r\n        {/* Close button */}\r\n        <button\r\n          className=\"absolute text-gray-600 top-2 right-2 hover:text-gray-800\"\r\n          onClick={onClose}\r\n        >\r\n          <FaTimes size={18} />\r\n        </button>\r\n\r\n        <h2 className=\"mb-4 text-xl font-bold capitalize\">\r\n          {paymentMode === \"multiple\"\r\n            ? \"Multiple Payment\"\r\n            : paymentMode === \"cash\"\r\n            ? \"Cash Payment\"\r\n            : \"Bank Payment\"}\r\n        </h2>\r\n\r\n        <div className=\"flex flex-col gap-4 md:flex-row\">\r\n          {/* Left – settings */}\r\n          <div className=\"flex-1 p-4 border rounded bg-gray-50\">\r\n            {/* Coupon */}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-semibold\">\r\n                Discount Coupon Code\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full p-2 border rounded\"\r\n                placeholder=\"Enter Coupon Code\"\r\n                value={couponCode}\r\n                onChange={(e) => setCouponCode(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            {/* Advance payment */}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-1 text-sm font-semibold\">\r\n                Adjust Advance Payment\r\n              </label>\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={adjustAdvancePayment}\r\n                  onChange={(e) => setAdjustAdvancePayment(e.target.checked)}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"w-full p-2 border rounded\"\r\n                  placeholder=\"Enter Advance Amount\"\r\n                  value={advance}\r\n                  onChange={(e) => setAdvance(Number(e.target.value))}\r\n                  disabled={!adjustAdvancePayment}\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Payment rows */}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-2 text-sm font-semibold\">\r\n                Payment Details\r\n              </label>\r\n\r\n              {paymentRows.map((row, idx) => (\r\n                <div key={idx} className=\"p-2 mb-2 border rounded\">\r\n                  {/* Type */}\r\n                  <label className=\"block mb-1 text-xs font-medium\">\r\n                    Payment Type\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full p-2 mb-2 border rounded\"\r\n                    value={row.paymentType}\r\n                    onChange={(e) =>\r\n                      handleChangeRow(idx, \"paymentType\", e.target.value)\r\n                    }\r\n                  >\r\n                    <option value=\"\">-- Select Payment Type --</option>\r\n                    {paymentTypes.map((pt) => (\r\n                      <option key={pt._id} value={pt._id}>\r\n                        {pt.paymentTypeName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n\r\n                  {/* Account (for cash payments) */}\r\n                  {row.paymentType === getId(\"Cash\") && (\r\n                    <div className=\"mb-2\">\r\n                      <label className=\"block mb-1 text-xs font-medium\">\r\n                        Select Account\r\n                      </label>\r\n                      <select\r\n                        className=\"w-full p-2 border rounded\"\r\n                        value={row.account || \"\"}\r\n                        onChange={(e) =>\r\n                          handleChangeRow(idx, \"account\", e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"\">-- Select an Account --</option>\r\n                        {accounts.map((acc) => (\r\n                          <option key={acc._id} value={acc._id}>\r\n                            {acc.accountName}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Terminal (for bank payments) */}\r\n                  {row.paymentType === getId(\"Bank\") && (\r\n                    <div className=\"mb-2\">\r\n                      <label className=\"block mb-1 text-xs font-medium\">\r\n                        Terminal\r\n                      </label>\r\n                      <select\r\n                        className=\"w-full p-2 border rounded\"\r\n                        value={row.terminal || \"\"}\r\n                        onChange={(e) =>\r\n                          handleChangeRow(idx, \"terminal\", e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"\">-- Select Terminal --</option>\r\n                        {terminals\r\n                          .filter((t) => t.warehouse === selectedWarehouse)\r\n                          .map((t) => (\r\n                            <option key={t._id} value={t._id}>\r\n                              {t.tid}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Amount */}\r\n                  <label className=\"block mb-1 text-xs font-medium\">Amount</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"w-full p-2 mb-2 border rounded\"\r\n                    value={row.amount}\r\n                    onChange={(e) =>\r\n                      handleChangeRow(idx, \"amount\", Number(e.target.value))\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n\r\n                  {/* Note */}\r\n                  <label className=\"block mb-1 text-xs font-medium\">\r\n                    Payment Note\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border rounded\"\r\n                    placeholder=\"Enter Payment Note\"\r\n                    value={row.note}\r\n                    onChange={(e) =>\r\n                      handleChangeRow(idx, \"note\", e.target.value)\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              {paymentMode === \"multiple\" && (\r\n                <button\r\n                  onClick={addRow}\r\n                  className=\"px-2 py-1 text-sm text-white bg-blue-600 rounded\"\r\n                >\r\n                  + Add Payment Row\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right – summary */}\r\n          <div className=\"flex-1 p-4 bg-white border rounded\">\r\n            <h3 className=\"mb-2 text-sm font-bold\">Summary</h3>\r\n            <div className=\"flex flex-col gap-1 text-sm\">\r\n              {[\r\n                [\"Total Items:\", summary.totalItems],\r\n                [\"Total Price (₹):\", summary.totalPrice],\r\n                [\"Discount (₹):\", summary.discount],\r\n                [\"Coupon Discount (₹):\", summary.couponDiscount],\r\n                [\"Advance Used (₹):\", adjustAdvancePayment ? advance : 0],\r\n                [\"Total Payable (₹):\", summary.totalPayable],\r\n                [\"Total Paying (₹):\", summary.totalPaying],\r\n                [\"Balance (₹):\", summary.balance],\r\n                [\"Change Return (₹):\", summary.changeReturn],\r\n              ].map(([label, value]) => (\r\n                <div key={label} className=\"flex justify-between\">\r\n                  <span>{label}</span>\r\n                  <span>{Number(value).toFixed(2)}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex justify-end mt-4\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"px-3 py-1 mr-2 text-gray-700 bg-gray-300 rounded\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                onClick={handleSave}\r\n                className=\"px-3 py-1 text-white bg-green-600 rounded\"\r\n              >\r\n                Save & Print\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentModal;","import { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\n\nconst toOpt = (label) => (o) => ({\n  label: o[label],\n  value: o._id ?? o[label],\n});\n\nexport default function CustomerPopup({ open, onClose, onCreated }) {\n  const empty = {\n    customerName: \"\",\n    email: \"\",\n    mobile: \"\",\n    phone: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    postcode: \"\",\n    gstNumber: \"\",\n    taxNumber: \"\",\n    openingBalance: 0,\n    previousBalance: 0,\n    purchaseDue: 0,\n    purchaseReturnDue: 0,\n    status: \"Active\",\n    type: \"Online\",\n    shippingCity: \"\",\n    shippingArea: \"\",\n    shippingState: \"\",\n    shippingPostcode: \"\",\n    shippingLocationLink: \"\",\n    shippingCountry: \"\",\n    panNumber: \"\",\n    priceLevel: 0,\n    priceLevelType: \"\",\n    salesReturnDue: 0,\n    customerId: \"\",\n    attachmentPath: \"\",\n    customerImage: \"\",\n    openingBalancePayments: [],\n  };\n\n  const [form, setForm] = useState(empty);\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [saving, setSaving] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  useEffect(() => {\n    if (!open) return;\n    setForm(empty);\n    setErrorMsg(\"\");\n\n    const token = localStorage.getItem(\"token\");\n    const hdr = { headers: { Authorization: `Bearer ${token}` } };\n\n    Promise.all([\n      axios.get(\"/api/countries\", hdr),\n      axios.get(\"/api/states\", hdr),\n    ])\n      .then(([cRes, sRes]) => {\n        setCountries(\n          (cRes.data.data || []).filter((c) => c.status === \"active\").map(toOpt(\"countryName\"))\n        );\n        setStates(\n          (sRes.data.data || []).filter((s) => s.status === \"active\").map(toOpt(\"stateName\"))\n        );\n      })\n      .catch((e) => setErrorMsg(\"Failed to load country/state lists\"));\n  }, [open]);\n\n  useEffect(() => {\n    if (!open) return;\n    const onEsc = (e) => e.key === \"Escape\" && onClose();\n    window.addEventListener(\"keydown\", onEsc);\n    return () => window.removeEventListener(\"keydown\", onEsc);\n  }, [open, onClose]);\n\n  if (!open) return null;\n\n  const change = (e) =>\n    setForm({\n      ...form,\n      [e.target.name]: e.target.type === \"number\" ? Number(e.target.value) : e.target.value,\n    });\n\n  const save = async (e) => {\n    e.preventDefault();\n    setSaving(true);\n    setErrorMsg(\"\");\n    try {\n      const { data } = await axios.post(\n        \"api/customer-data/create\",\n        form,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      );\n      onCreated?.(data.data || data);\n      onClose();\n    } catch (err) {\n      setErrorMsg(err.response?.data?.message || err.message || \"Save failed\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\"\n      onClick={onClose}\n    >\n      <form\n        onClick={(e) => e.stopPropagation()}\n        onSubmit={save}\n        className=\"max-h-[95vh] w-full max-w-3xl overflow-y-auto rounded-lg bg-white p-6 shadow-lg\"\n      >\n        <h2 className=\"mb-4 text-xl font-semibold text-center\">Add Customer</h2>\n\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm font-medium\">Customer Name *</label>\n            <input\n              required\n              name=\"customerName\"\n              value={form.customerName}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={form.email}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Mobile</label>\n            <input\n              name=\"mobile\"\n              value={form.mobile}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Phone</label>\n            <input\n              name=\"phone\"\n              value={form.phone}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4\">\n          <label className=\"mb-1 block text-sm\">Address</label>\n          <textarea\n            name=\"address\"\n            rows=\"2\"\n            value={form.address}\n            onChange={change}\n            className=\"w-full rounded border px-3 py-2\"\n          />\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">City</label>\n            <input\n              name=\"city\"\n              value={form.city}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Postcode</label>\n            <input\n              name=\"postcode\"\n              value={form.postcode}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Country</label>\n            <Select\n              options={countries}\n              value={countries.find((o) => o.value === form.country) || null}\n              onChange={(o) => setForm({ ...form, country: o?.value || \"\" })}\n              placeholder=\"Select country\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">State</label>\n            <Select\n              options={states}\n              value={states.find((o) => o.value === form.state) || null}\n              onChange={(o) => setForm({ ...form, state: o?.value || \"\" })}\n              placeholder=\"Select state\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">GST Number</label>\n            <input\n              name=\"gstNumber\"\n              value={form.gstNumber}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Tax Number</label>\n            <input\n              name=\"taxNumber\"\n              value={form.taxNumber}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Opening Balance</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              name=\"openingBalance\"\n              value={form.openingBalance}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Previous Balance</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              name=\"previousBalance\"\n              value={form.previousBalance}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Purchase Due</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              name=\"purchaseDue\"\n              value={form.purchaseDue}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Purchase Return Due</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              name=\"purchaseReturnDue\"\n              value={form.purchaseReturnDue}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Customer Type</label>\n            <select\n              name=\"type\"\n              value={form.type}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            >\n              <option value=\"Online\">Online</option>\n              <option value=\"Offline\">Offline</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Status</label>\n            <select\n              name=\"status\"\n              value={form.status}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            >\n              <option value=\"Active\">Active</option>\n              <option value=\"Inactive\">Inactive</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Shipping City</label>\n            <input\n              name=\"shippingCity\"\n              value={form.shippingCity}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Shipping Area</label>\n            <input\n              name=\"shippingArea\"\n              value={form.shippingArea}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Shipping State</label>\n            <Select\n              options={states}\n              value={states.find((o) => o.value === form.shippingState) || null}\n              onChange={(o) => setForm({ ...form, shippingState: o?.value || \"\" })}\n              placeholder=\"Select shipping state\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Shipping Postcode</label>\n            <input\n              name=\"shippingPostcode\"\n              value={form.shippingPostcode}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Shipping Country</label>\n            <Select\n              options={countries}\n              value={countries.find((o) => o.value === form.shippingCountry) || null}\n              onChange={(o) => setForm({ ...form, shippingCountry: o?.value || \"\" })}\n              placeholder=\"Select shipping country\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Shipping Location Link</label>\n            <input\n              name=\"shippingLocationLink\"\n              value={form.shippingLocationLink}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">PAN Number</label>\n            <input\n              name=\"panNumber\"\n              value={form.panNumber}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Price Level</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              name=\"priceLevel\"\n              value={form.priceLevel}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 grid gap-4 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-sm\">Price Level Type</label>\n            <input\n              name=\"priceLevelType\"\n              value={form.priceLevelType}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n          <div>\n            <label className=\"mb-1 block text-sm\">Sales Return Due</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              name=\"salesReturnDue\"\n              value={form.salesReturnDue}\n              onChange={change}\n              className=\"w-full rounded border px-3 py-2\"\n            />\n          </div>\n        </div>\n\n        {errorMsg && (\n          <p className=\"mt-4 rounded border border-red-300 bg-red-100 px-3 py-2 text-sm text-red-700\">\n            {errorMsg}\n          </p>\n        )}\n\n        <div className=\"mt-6 flex justify-end gap-3\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"rounded bg-gray-200 px-4 py-2 text-gray-700 hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            disabled={saving}\n            className=\"rounded bg-emerald-600 px-6 py-2 text-white hover:bg-emerald-700 disabled:opacity-60\"\n          >\n            {saving ? \"Saving…\" : \"Save\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  FaHandPaper,\r\n  FaLayerGroup,\r\n  FaMoneyBill,\r\n  FaCreditCard,\r\n  FaBarcode,\r\n  FaList,\r\n  FaUsers,\r\n  FaBox,\r\n  FaFileInvoice,\r\n  FaBars,\r\n  FaWindowMaximize,\r\n} from \"react-icons/fa\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/browser\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MdOutlineDashboard } from \"react-icons/md\";\r\nimport { CameraIcon } from \"@heroicons/react/outline\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport CustomerPopup from \"./CustomerPopup\";\r\nconst beep = new Audio(\"/sounds/beep-new.mp3\");   // point to your file\r\nconst sndRemove = new Audio(\"/sounds/remove.mp3\");\r\nfunction playBeep() {\r\n  try {\r\n    beep.pause();\r\n    beep.currentTime = 0;\r\n    beep.play();\r\n  } catch {}       // autoplay blocked → ignore\r\n}\r\n\r\nfunction playRemove() { try { sndRemove.pause(); sndRemove.currentTime = 0; sndRemove.play(); } catch {} }\r\n/** Returns a full printable HTML page as a string */\r\n/** Returns a printable A4/80-mm receipt that matches the WhatsApp mock-up  */\r\nfunction buildInvoiceHTML(order, payments = [], store, cust, rows, sellerName = \"–\") {\r\n  const {\r\n    logo, storeName, tagline, address, gst, phone, email\r\n  } = store;\r\n\r\n  const today  = new Date(order.createdAt || Date.now());\r\n  const fmt    = (n) => (+n).toLocaleString(\"en-IN\", {minimumFractionDigits:2});\r\n  const totalQuantity = rows.reduce((sum, r) => sum + r.quantity, 0);\r\n\r\n  // 2️⃣ “Before Tax” is pure quantity × rate, no discounts\r\n  const rawTotal      = rows.reduce((sum, r) => sum + (r.quantity * r.salesPrice), 0);\r\n\r\n  // 3️⃣ Your existing order.totalDiscount and taxAmount\r\n  const disc          = order.totalDiscount || 0;\r\n  const taxAmt        = order.taxAmount     || 0;\r\n\r\n  // 4️⃣ Net total after discount, before adding tax\r\n  const netBeforeTax  = rawTotal - disc;\r\n\r\n  // 5️⃣ Paid & previous due\r\n  const paid          = payments.reduce((s, p) => s + p.amount, 0);\r\n  const prevDue       = order.previousBalance || 0;\r\n\r\n  // 6️⃣ Final due\r\n  const totalDue      = prevDue + netBeforeTax + taxAmt - paid;\r\n\r\n  // build your rows as before…\r\n  const body = rows.map((r,i) => `\r\n    <tr>\r\n      <td>${i+1}</td>\r\n      <td>${r.itemName}</td>\r\n      <td class=\"r\">${r.quantity}</td>\r\n      <td class=\"r\">${r.mrp.toFixed(2)}</td>\r\n      <td class=\"r\">${r.salesPrice.toFixed(2)}</td>\r\n      <td class=\"r\">${(r.quantity * r.salesPrice).toFixed(2)}</td>\r\n    </tr>`\r\n  ).join(\"\");\r\n\r\n  const payRows = payments.map((p,i)=>`\r\n    <tr><td>${i+1}</td><td>${p.paymentNote||\"-\"}</td><td class=\"r\">${fmt(p.amount)}</td></tr>`\r\n  ).join(\"\");\r\n\r\n  return `<!doctype html><html><head><meta charset=\"utf-8\">\r\n  <title>${order.saleCode}</title>\r\n  <style>\r\n    *{font-family:Arial,Helvetica,sans-serif;font-size:11px;margin:0;padding:0;box-sizing:border-box}\r\n    body{padding:8px}\r\n    h2{font-size:18px;margin:4px 0}\r\n    .center{text-align:center}\r\n    .r{text-align:right}\r\n    table{width:100%;border-collapse:collapse;margin-top:4px}\r\n    th,td{border:1px solid #ddd;padding:4px}\r\n    th{background:#f7f7f7;}\r\n    .no-border td{border:none}\r\n    .sep{margin:6px 0;border-top:1px dashed #555}\r\n    @media print{@page{size:auto;margin:6mm}button{display:none}}\r\n    @media print {\r\n.noprint, .noprint * { display:none !important }}\r\n  </style></head><body>\r\n\r\n  <!-- Header -->\r\n  <div class=\"center\">\r\n    <img src=\"${logo}\" alt=\"logo\" style=\"height:45px\"><br>\r\n    <h2>${storeName}</h2>\r\n    <strong>${tagline}</strong><br>\r\n    <div style=\"white-space:pre-line\">${address}</div>\r\n    GST Number: ${gst}<br>\r\n    Phone: ${phone}<br>\r\n    ${email}\r\n  </div>\r\n\r\n  <div class=\"sep\"></div>\r\n\r\n  <!-- Invoice meta (two-column) -->\r\n  <table class=\"no-border\">\r\n    <tr><td><strong>Invoice</strong></td><td class=\"r\">#${order.saleCode}</td></tr>\r\n    <tr><td><strong>Name</strong></td><td class=\"r\">${cust.customerName||\"–\"}</td></tr>\r\n    <tr><td><strong>Seller</strong></td><td class=\"r\">${sellerName}</td></tr>\r\n    <tr><td><strong>Date</strong></td><td class=\"r\">${today.toLocaleDateString()}</td></tr>\r\n    <tr><td><strong>Time</strong></td><td class=\"r\">${today.toLocaleTimeString([], {hour:'2-digit',minute:'2-digit'})}</td></tr>\r\n  </table>\r\n\r\n  <!-- Items -->\r\n  <table>\r\n    <thead><tr>\r\n      <th>#</th><th>Description</th><th>Quantity</th>\r\n      <th>MRP</th><th>Rate</th><th>Total</th>\r\n    </tr></thead>\r\n    <tbody>${body}</tbody>\r\n  </table>\r\n\r\n  <!-- Totals -->\r\n  <table class=\"no-border\">\r\n   <tr><td>Total Quantity</td><td class=\"r\">${totalQuantity}</td></tr>\r\n      <tr><td>Before Tax</td>       <td class=\"r\">${rawTotal.toFixed(2)}</td></tr>\r\n      <tr><td>Total Discount</td>   <td class=\"r\">−${disc.toFixed(2)}</td></tr>\r\n      <tr><td>Net Before Tax</td>   <td class=\"r\">${netBeforeTax.toFixed(2)}</td></tr>\r\n      <tr><td>Tax Amount</td>       <td class=\"r\">${taxAmt.toFixed(2)}</td></tr>\r\n      <tr><td><strong>Total</strong></td>\r\n          <td class=\"r\"><strong>${(netBeforeTax + taxAmt).toFixed(2)}</strong></td></tr>\r\n      <tr><td>Paid Payment</td>     <td class=\"r\">${paid.toFixed(2)}</td></tr>\r\n      <tr><td>Previous Due</td>     <td class=\"r\">${prevDue.toFixed(2)}</td></tr>\r\n      <tr><td><strong>Total Due Amount</strong></td>\r\n          <td class=\"r\"><strong>${totalDue.toFixed(2)}</strong></td></tr>\r\n\r\n  </table>\r\n\r\n  <!-- Payments -->\r\n  <p style=\"margin-top:6px\"><strong>Note:</strong></p>\r\n  <table><thead><tr><th>#</th><th>Payment Type</th><th>Amount</th></tr></thead>\r\n    <tbody>${payRows || `<tr><td colspan=\"3\" class=\"center\">–</td></tr>`}</tbody>\r\n  </table>\r\n\r\n  <p style=\"margin-top:8px\"><strong>Invoice T&amp;C:</strong></p>\r\n  <div class=\"sep\"></div>\r\n  <p class=\"center\" style=\"margin-top:4px\">----------Thanks You. Visit Again!----------</p>\r\n\r\n  <button class=\"noprint\" onclick=\"window.print()\" style=\"margin:12px auto;display:block;padding:6px 18px\">Print</button>\r\n  <script>window.onload=()=>setTimeout(()=>window.print(),200)</script>\r\n  </body></html>`;\r\n}\r\n\r\n\r\nexport default function POS() {\r\n  const navigate = useNavigate();\r\n  const [params] = useSearchParams();\r\n  const editId = params.get(\"id\");\r\n  const bookingId  = params.get(\"bookingId\");\r\n  const preCust    = params.get(\"customer\");\r\n  const preCustModel   = params.get(\"customerModel\") || \"CustomerData\";\r\n\r\n  // ─── STATE ─────────────────────────────────────────────────────────\r\n  const [user, setUser] = useState({ name: \"Guest\", role: \"Guest\" });\r\n  const [loadingUser, setLoadingUser] = useState(false);\r\n  const [isLoadingEdit, setIsLoadingEdit] = useState(false);\r\n  const [showProfileDropdown, setShowProfileDropdown] = useState(false);\r\n\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [selectedWarehouse, setSelectedWarehouse] = useState(\"\");\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState(\"\");\r\n  const [linkedBooking, setLinkedBooking]       = useState(\"\");\r\n\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\r\n  const [terminals, setTerminals] = useState([]);\r\n\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n\r\n  const [allItems, setAllItems] = useState([]);\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n  const [searchItemCode, setSearchItemCode] = useState(\"\");\r\n  const [scanning, setScanning] = useState(false);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [totalDiscount, setTotalDiscount] = useState(0);\r\n\r\n  const [invoiceCode, setInvoiceCode] = useState(\r\n    `SL/${new Date().getFullYear()}/${String(new Date().getMonth() + 1).padStart(2, \"0\")}/`\r\n  );\r\n  const [invoiceCount, setInvoiceCount] = useState(0);\r\n  const [previousBalance, setPreviousBalance] = useState(0);\r\n\r\n  const [couponCode, setCouponCode] = useState(\"\");\r\n  const [adjustAdvancePayment, setAdjustAdvancePayment] = useState(false);\r\n  const [advancePaymentAmount, setAdvancePaymentAmount] = useState(0);\r\n\r\n  const [heldInvoices, setHeldInvoices] = useState([]);\r\n  const [showHoldList, setShowHoldList] = useState(false);\r\n  const [currentOrderId, setCurrentOrderId] = useState(\"\");\r\n\r\n  const [isPaymentModalOpen, setIsPaymentModalOpen] = useState(false);\r\n  const [paymentMode, setPaymentMode] = useState(\"\"); // \"cash\" | \"bank\" | \"multiple\" | \"hold\"\r\n  const [orderPaymentMode, setOrderPaymentMode] = useState(\"\"); // Tracks payment mode of loaded order\r\n\r\n  const videoRef = useRef(null);\r\n  const codeReaderRef = useRef(null);\r\n  const [storeName, setStoreName] = useState(\"\");\r\n  const [orderToEdit, setOrderToEdit] = useState(null);\r\n  const [defaultWarehouse, setDefaultWarehouse]   = useState(\"\");\r\n  const prevWarehouseRef = useRef();    \r\n  const [showCustomerPopup, setShowCustomerPopup] = useState(false);\r\n  const [filteredAccounts, setFilteredAccounts] = useState([]);\r\n  const [customerModel, setCustomerModel] = useState(\"CustomerData\");\r\n\r\n  // ─── HELPERS ────────────────────────────────────────────────────────\r\n  const authHeaders = () => ({\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n  });\r\n\r\n  const getPaymentTypeId = (name) =>\r\n    paymentTypes.find((pt) => pt.paymentTypeName?.toLowerCase() === name.toLowerCase())?._id;\r\n\r\n  const esc = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n\r\n  // ───────────────────── Live-stock helper ─────────────────────────\r\nasync function fetchLiveQty (warehouseId, invId) {\r\n  if (!warehouseId || !invId) return 0;\r\n  const { data } = await axios.get(\r\n    `/api/stock/${invId}?warehouse=${warehouseId}`,\r\n    authHeaders()\r\n  );\r\n  /* fall back to openingStock if qty hasn’t moved yet */\r\n  return (data.currentStock ?? data.openingStock ?? 0);\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n  // skip the very first render (prevWarehouseRef === undefined)\r\n  if (\r\n    prevWarehouseRef.current &&                     // we already had one before\r\n    prevWarehouseRef.current !== selectedWarehouse  // AND it actually changed\r\n  ) {\r\n    if (items.length > 0) {\r\n      // 👉 optional safety prompt; remove if you don’t want it\r\n      const ok = window.confirm(\r\n        \"Changing the warehouse will clear the current cart. Continue?\"\r\n      );\r\n      if (!ok) {\r\n        // user aborted → roll back the <select>\r\n        setSelectedWarehouse(prevWarehouseRef.current);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 🚿 flush everything that belongs to the old warehouse\r\n    setItems([]);\r\n    setSearchItemCode(\"\");\r\n  }\r\n\r\n  // finally, remember this value for the next tick\r\n  prevWarehouseRef.current = selectedWarehouse;\r\n}, [selectedWarehouse, items.length]);\r\n\r\n  useEffect(() => {\r\n    // if we came in via Start-Sale…\r\n    if (preCust) {\r\n      setSelectedCustomer(preCust);\r\n    }\r\n    if (bookingId) {\r\n      setLinkedBooking(bookingId);\r\n    }\r\n  }, [preCust, bookingId]);\r\nuseEffect(() => {\r\n    if (preCustModel) setCustomerModel(preCustModel);\r\n  }, [preCustModel]);\r\n\r\n  // ─── FETCHERS ───────────────────────────────────────────────────────\r\n  useEffect(() => {\r\n    fetchProfile();\r\n    fetchLookups();\r\n    fetchHeld();\r\n    if (editId) {\r\n      setIsLoadingEdit(true);\r\n      fetchPosById(editId)\r\n  .then(async (inv) => {\r\n    if (!inv) return;\r\n    //1️⃣ set the warehouse so that fetchItems kicks off for that warehouse\r\n    setSelectedWarehouse(inv.warehouse._id);\r\n\r\n    // 2️⃣ wait for the items to come back\r\n    await fetchItems(inv.warehouse._id);\r\n\r\n    // 3️⃣ only then remember the order to edit\r\n    setOrderToEdit(inv);\r\n  })\r\n\r\n        .catch(console.error)\r\n        .finally(() => setIsLoadingEdit(false));\r\n    } else {\r\n      loadNextInvoiceCode();\r\n    }\r\n  }, [editId]);\r\n  useEffect(() => {\r\n  fetchItems();\r\n}, [selectedWarehouse])\r\n\r\n\r\n  async function fetchProfile() {\r\n    setLoadingUser(true);\r\n    try {\r\n      const role = localStorage.getItem(\"role\");\r\n      const url =\r\n        role === \"admin\"\r\n          ? \"auth/profile\"\r\n          : \"admiaddinguser/profile\";\r\n      const { data } = await axios.get(url, authHeaders());\r\n      setUser(data);\r\n      setStoreName(data.storeName || \"Grocery on Wheels\");\r\n      setDefaultWarehouse(data.defaultWarehouse || \"\");\r\n    } catch {\r\n      setUser({ name: \"Guest\", role: \"Guest\" });\r\n    } finally {\r\n      setLoadingUser(false);\r\n    }\r\n  }\r\nasync function fetchLookups() {\r\n    // ── 1) Warehouses ─────────────────────────────────────\r\n    try {\r\n      const { data } = await axios.get(\r\n        \"api/warehouses\",\r\n        authHeaders()\r\n      );\r\n      const list = data.data || data.warehouses || [];\r\n      if (Array.isArray(list)) {\r\n  setWarehouses(list);\r\n} else {\r\n  setWarehouses([]);\r\n}\r\n\r\n    } catch (err) {\r\n      console.error(\"❌ failed to load warehouses\", err);\r\n      setWarehouses([]);\r\n    }\r\n\r\n  // ── 2) Customers ──────────────────────────────────────\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"api/customer-data/all\",\r\n      authHeaders()\r\n    );\r\n    const cust = data.data || data || [];\r\n    if (Array.isArray(cust)) {\r\n      setCustomers(cust);\r\n      // AFTER (only default if no ?customer=… param)\r\nif (!editId && !preCust && cust.length) {\r\n  const walkIn = cust.find(c => c.customerName.toLowerCase() === \"walk-in customer\");\r\n  setSelectedCustomer((walkIn?._id) || cust[0]._id);\r\n}\r\n\r\n    } else {\r\n      setCustomers([]);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"❌ failed to load customers\", err);\r\n    setCustomers([]);\r\n  }\r\n\r\n  // ── 3) Accounts ───────────────────────────────────────\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"api/accounts\",\r\n      authHeaders()\r\n    );\r\n    const accts = data.data || data || [];\r\n    if (Array.isArray(accts)) {\r\n      setAccounts(accts);\r\n      if (!editId && accts.length) {\r\n        setSelectedAccount(accts[0]._id);\r\n      }\r\n    } else {\r\n      setAccounts([]);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"❌ failed to load accounts\", err);\r\n    setAccounts([]);\r\n  }\r\n\r\n  // ── 4) Payment Types ───────────────────────────────────\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"api/payment-types\",\r\n      authHeaders()\r\n    );\r\n    setPaymentTypes(data.data || data || []);\r\n  } catch (err) {\r\n    console.error(\"❌ failed to load payment types\", err);\r\n    setPaymentTypes([]);\r\n  }\r\n\r\n  // ── 5) Terminals ──────────────────────────────────────\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"api/terminals\",\r\n      authHeaders()\r\n    );\r\n    setTerminals(data.data || data || []);\r\n  } catch (err) {\r\n    console.error(\"❌ failed to load terminals\", err);\r\n    setTerminals([]);\r\n  }\r\n}\r\n\r\n\r\n  async function loadNextInvoiceCode() {\r\n    try {\r\n      const year = new Date().getFullYear();\r\n      const [saleRes, posRes] = await Promise.all([\r\n        axios.get(\"api/sales\", authHeaders()),\r\n        axios.get(\"api/pos\", authHeaders()),\r\n      ]);\r\n      const sales = saleRes.data.sales || saleRes.data;\r\n      const poses = posRes.data.data || posRes.data;\r\n\r\n      const allCodes = [\r\n        ...sales.map((s) => s.saleCode),\r\n        ...poses.map((p) => p.saleCode),\r\n      ].filter(Boolean);\r\n\r\n      let maxSeq = 0;\r\n      allCodes.forEach((code) => {\r\n        const parts = code.split(\"/\");\r\n        if (parts[1] == year) {\r\n          const seq = parseInt(parts[2], 10);\r\n          if (seq > maxSeq) maxSeq = seq;\r\n        }\r\n      });\r\n\r\n      const next = maxSeq + 1;\r\n      const padded = String(next).padStart(7, \"0\");\r\n      const nextCode = `SL/${year}/${padded}`;\r\n\r\n      setInvoiceCode(nextCode);\r\n    } catch (err) {\r\n      console.error(\"Could not compute next code:\", err);\r\n      const year = new Date().getFullYear();\r\n      setInvoiceCode(`SL/${year}/${String(new Date().getMonth() + 1).padStart(2, \"0\")}/`);\r\n    }\r\n  }\r\n\r\n  async function fetchHeld() {\r\n    try {\r\n      const { data } = await axios.get(\"api/pos\", authHeaders());\r\n      setHeldInvoices((data.data || data).filter((o) => o.status === \"OnHold\"));\r\n    } catch (err) {\r\n      console.error(\"Fetch held invoices error:\", err.message);\r\n    }\r\n  }\r\n\r\n  async function fetchPosById(id) {\r\n    try {\r\n      const { data } = await axios.get(`api/pos/${id}`, authHeaders());\r\n      console.log(\"Fetched POS order:\", data);\r\n      return data.order || data;\r\n    } catch (err) {\r\n      console.error(\"Fetch POS by ID error:\", err.message);\r\n      alert(`Failed to load POS order: ${err.message}`);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async function deletePosTransaction(id) {\r\n    try {\r\n      await axios.delete(`api/pos/${id}`, authHeaders());\r\n      setHeldInvoices((prev) => prev.filter((inv) => inv._id !== id));\r\n      navigate(\"/sale-list\");\r\n    } catch (err) {\r\n      console.error(\"Delete POS transaction error:\", err.message);\r\n      alert(`Failed to delete POS order: ${err.message}`);\r\n    }\r\n  }\r\n\r\n  async function fetchItems() {\r\n  if (!selectedWarehouse) {\r\n    setAllItems([]);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"api/items\",\r\n      {\r\n        headers: authHeaders().headers,\r\n        params:  {\r\n          warehouse: selectedWarehouse,\r\n          inStock: true    // <-- only fetch items with currentStock > 0\r\n        }\r\n      }\r\n    );\r\n    const rawItems = data.data || [];\r\n\r\n      const flatItems = rawItems\r\n        .filter((it) => it._id && it.warehouse?._id)\r\n        .map((it) => {\r\n          const isVariant = Boolean(it.parentItemId);\r\n          return {\r\n            ...it,\r\n            parentId: isVariant ? it.parentItemId : it._id,\r\n            variantId: isVariant ? it._id : null,\r\n            itemName: isVariant ? `${it.itemName} / ${it.variantName || \"Variant\"}` : it.itemName,\r\n            barcode: it.barcode || \"\",\r\n            barcodes: it.barcodes || [],\r\n            itemCode: it.itemCode || \"\",\r\n          };\r\n        });\r\n\r\n      console.log(\r\n        \"Flattened items:\",\r\n        flatItems.map((i) => ({\r\n          _id: i._id,\r\n          parentId: i.parentId,\r\n          variantId: i.variantId,\r\n          itemName: i.itemName,\r\n          itemCode: i.itemCode,\r\n          barcode: i.barcode,\r\n          barcodes: i.barcodes,\r\n          isVariant: !!i.variantId,\r\n          warehouseId: i.warehouse?._id,\r\n        }))\r\n      );\r\n      setAllItems(flatItems);\r\n    } catch (err) {\r\n      console.error(\"Fetch items error:\", err.message);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // ─── EDIT HYDRATION ─────────────────────────────────────────────────\r\n  function hydrateForEdit(inv) {\r\n    console.log(\"Hydrating POS order:\", inv);\r\n\r\n    let detectedPaymentMode = inv.paymentMode || \"\";\r\n    if (!detectedPaymentMode) {\r\n      if (inv.status === \"OnHold\") {\r\n        detectedPaymentMode = \"hold\";\r\n      } else if (inv.status === \"Completed\") {\r\n        if (inv.payments?.length > 1) {\r\n          detectedPaymentMode = \"multiple\";\r\n        } else if (inv.payments?.length === 1) {\r\n          const payment = inv.payments[0];\r\n          const paymentType = paymentTypes.find((pt) => pt._id === payment.paymentType);\r\n          if (paymentType?.paymentTypeName?.toLowerCase() === \"cash\") {\r\n            detectedPaymentMode = \"cash\";\r\n          } else if (paymentType?.paymentTypeName?.toLowerCase() === \"bank\" || payment.terminal) {\r\n            detectedPaymentMode = \"bank\";\r\n          } else {\r\n            detectedPaymentMode = \"multiple\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const items = inv.items\r\n      .map((i) => {\r\n        const itemDoc = allItems.find(\r\n          (ai) =>\r\n            ai.parentId === i.item._id &&\r\n            (!i.variant || ai._id === i.variant || ai.variantId === i.variant) &&\r\n            ai.warehouse?._id === inv.warehouse?._id\r\n        );\r\n        if (!itemDoc) {\r\n          console.warn(\"Invalid item in POS order:\", {\r\n            itemId: i.item._id,\r\n            variantId: i.variant,\r\n            itemName: i.item.itemName,\r\n            warehouseId: inv.warehouse?._id,\r\n          });\r\n          return null;\r\n        }\r\n        return {\r\n          item: i.item._id,\r\n          variant: i.variant || null,\r\n          itemName: itemDoc.itemName,\r\n          itemCode: itemDoc.itemCode || \"\",\r\n          openingStock: itemDoc.openingStock || 0,\r\n          currentStock:  itemDoc.currentStock != null   // 👈 add this\r\n                  ? itemDoc.currentStock\r\n                  : (itemDoc.openingStock || 0),\r\n          salesPrice: i.price || itemDoc.salesPrice || 0,\r\n          quantity: i.quantity || 1,\r\n          origQty:  i.quantity || 1,\r\n          discount: i.discount || 0,\r\n          tax: i.tax?._id || itemDoc.tax?._id || null,\r\n          taxRate: i.tax?.taxPercentage || itemDoc.tax?.taxPercentage || 0,\r\n          unit: i.unit || itemDoc.unit || null,\r\n          mrp: itemDoc.mrp || 0,\r\n          expiryDate: itemDoc.expiryDate || null,\r\n          subtotal:\r\n            i.subtotal || (i.price || itemDoc.salesPrice || 0) * (i.quantity || 1) - (i.discount || 0),\r\n        };\r\n      })\r\n      .filter((i) => i !== null);\r\n\r\n    setItems(items);\r\n    setInvoiceCode(inv.saleCode || \"\");\r\n    setInvoiceCount(inv.invoiceCount || 0);\r\n    setPreviousBalance(inv.previousBalance || 0);\r\n    setCouponCode(inv.couponCode || \"\");\r\n    setAdjustAdvancePayment(inv.advanceUsed > 0);\r\n    setAdvancePaymentAmount(inv.advanceUsed || 0);\r\n\r\n    // Validate and set customer\r\n    const customerId = inv.customer?._id;\r\n    if (!customerId || !customers.find((c) => c._id === customerId)) {\r\n      console.warn(\"Invalid or missing customer ID:\", customerId);\r\n      const walkIn = customers.find((c) => c.customerName.toLowerCase() === \"walk-in customer\");\r\n      setSelectedCustomer(walkIn?._id || \"\");\r\n    } else {\r\n      setSelectedCustomer(customerId);\r\n    }\r\n\r\n    // Validate and set warehouse\r\n    const warehouseId = inv.warehouse?._id;\r\n    if (!warehouseId || !warehouses.find((w) => w._id === warehouseId)) {\r\n      console.warn(\"Invalid or missing warehouse ID:\", warehouseId);\r\n      setSelectedWarehouse(warehouses[0]?._id || \"\");\r\n    } else {\r\n      setSelectedWarehouse(warehouseId);\r\n    }\r\n\r\n    // Validate and set account\r\n    const accountId = inv.account?._id;\r\n    if (!accountId || !accounts.find((a) => a._id === accountId)) {\r\n      console.warn(\"Invalid or missing account ID:\", accountId);\r\n      const warehouse = warehouses.find((w) => w._id === warehouseId);\r\n      setSelectedAccount(warehouse?.cashAccount?._id || accounts[0]?._id || \"\");\r\n    } else {\r\n      setSelectedAccount(accountId);\r\n    }\r\n\r\n    setCurrentOrderId(inv._id);\r\n    setOrderPaymentMode(detectedPaymentMode);\r\n  }\r\n\r\n  // ─── EFFECTS ────────────────────────────────────────────────────────\r\n  useEffect(() => {\r\n    let qty = 0,\r\n      amt = 0,\r\n      disc = 0;\r\n    items.forEach((i) => {\r\n      qty += i.quantity;\r\n      amt += i.quantity * i.salesPrice;\r\n      disc += i.discount || 0;\r\n    });\r\n    setQuantity(qty);\r\n    setTotalAmount(amt);\r\n    setTotalDiscount(disc);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    const q = searchItemCode.trim();\r\n    if (!q || !selectedWarehouse) return setFilteredItems([]);\r\n    const rx = new RegExp(esc(q), \"i\");\r\n    const filtered = allItems\r\n      .filter(\r\n        (it) =>\r\n          it.warehouse?._id === selectedWarehouse &&\r\n          (rx.test(it.itemName) || rx.test(it.itemCode) || rx.test(it.barcodes?.join(\" \") || \"\"))\r\n      )\r\n      .slice(0, 15);\r\n    setFilteredItems(filtered);\r\n    console.log(\"Filtered items:\", filtered);\r\n  }, [searchItemCode, selectedWarehouse, allItems]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const reader = codeReaderRef.current;\r\n      if (reader) {\r\n        try {\r\n          if (typeof reader.reset === \"function\") {\r\n            reader.reset();\r\n          } else if (typeof reader.stopStreams === \"function\") {\r\n            reader.stopStreams();\r\n          }\r\n        } catch (e) {\r\n          console.error(\"Error during scanner cleanup:\", e);\r\n        }\r\n      }\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const c = customers.find((c) => c._id === selectedCustomer);\r\n    setPreviousBalance(c?.previousDue || 0);\r\n  }, [selectedCustomer, customers]);\r\n\r\n  useEffect(() => {\r\n    const w = warehouses.find((w) => w._id === selectedWarehouse);\r\n    if (w?.cashAccount?._id) setSelectedAccount(w.cashAccount._id);\r\n    else if (accounts.length) setSelectedAccount(accounts[0]?._id);\r\n  }, [selectedWarehouse, warehouses, accounts]);\r\n\r\n useEffect(() => {\r\n  const ready = \r\n    orderToEdit &&\r\n    customers.length > 0 &&\r\n    warehouses.length > 0 &&\r\n    accounts.length > 0 &&\r\n    paymentTypes.length > 0 &&\r\n    allItems.length > 0;\r\n\r\n  console.log(\"🔍 hydrate ready?\", {\r\n    order: !!orderToEdit,\r\n    cust: customers.length,\r\n    wh: warehouses.length,\r\n    accts: accounts.length,\r\n    ptypes: paymentTypes.length,\r\n    items: allItems.length\r\n  });\r\n\r\n  if (!ready) return;\r\n\r\n  hydrateForEdit(orderToEdit);\r\n  setOrderToEdit(null);\r\n}, [orderToEdit, customers, warehouses, accounts, paymentTypes, allItems]);\r\n\r\nuseEffect(() => {\r\n  if (editId) return;                  // skip if we’re editing an existing order\r\n  if (!warehouses.length) return;      // need the list loaded\r\n  if (defaultWarehouse) {\r\n    // user has a default → honor it\r\n    setSelectedWarehouse(defaultWarehouse);\r\n  } else {\r\n    // fallback to restricted / first active\r\n    const restricted = warehouses.find(\r\n      (w) => w.isRestricted && w.status === \"Active\"\r\n    );\r\n    setSelectedWarehouse(\r\n      restricted?._id ||\r\n        warehouses.find((w) => w.status === \"Active\")?._id ||\r\n        \"\"\r\n    );\r\n  }\r\n}, [warehouses, defaultWarehouse, editId]);\r\n\r\n\r\n  // ─── SCANNER LOGIC ─────────────────────────────────────────────────\r\n  const startScanner = () => {\r\n  if (!selectedWarehouse) { alert(\"Select a warehouse first\"); return; }\r\n  setScanning(true);\r\n  const codeReader = new BrowserMultiFormatReader();\r\n  codeReaderRef.current = codeReader;\r\n\r\n  let lastText = null;\r\n  let lastTime = 0;\r\n\r\n  codeReader.decodeFromConstraints(\r\n    { video: { facingMode: { exact: \"environment\" } } },\r\n    videoRef.current,\r\n    (result, err) => {\r\n      if (result) {\r\n        const text = result.getText();\r\n        const now = Date.now();\r\n        // only process if it's a new code, or >1s since the last time we processed this same code\r\n        if (text !== lastText || now - lastTime > 1000) {\r\n          lastText = text;\r\n          lastTime = now;\r\n\r\n          const hit = allItems.find(i =>\r\n            i.itemCode === text ||\r\n            i.barcodes?.includes(text) ||\r\n            i.itemName.toLowerCase() === text.toLowerCase()\r\n          );\r\n          if (hit) addItem(hit);\r\n          setSearchItemCode(\"\");\r\n          playBeep();\r\n        }\r\n        // don’t reset here—leave the camera on so you can keep scanning\r\n      }\r\n\r\n      if (err && err.name !== \"NotFoundException\") {\r\n        console.error(err);\r\n        alert(\"Scanning failed: \" + err.message);\r\n        codeReader.reset();\r\n        setScanning(false);\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n\r\n  // ─── ITEM HANDLERS ─────────────────────────────────────────────────\r\nasync function addItem(it) {\r\n  const liveQty = await fetchLiveQty(selectedWarehouse, it.variantId || it._id);\r\nit.currentStock = liveQty;      // overwrite the stale copy we got from /items\r\n\r\nif (liveQty <= 0) {\r\n  Swal.fire(\"Out of stock\",\r\n            `\"${it.itemName}\" is out of stock in this warehouse.`,\r\n            \"warning\");\r\n  return;\r\n}\r\n  if (!it || !it.parentId) {\r\n    console.error(\"Invalid item, missing parentId:\", it);\r\n    return;\r\n  }\r\n   \r\n if (it.currentStock <= 0) {\r\n   Swal.fire({\r\n     icon: \"warning\",\r\n     title: \"Out of stock\",\r\n     text: `\"${it.itemName}\" is out of stock in this warehouse.`,\r\n   });\r\n   return;\r\n }\r\n\r\n  const parentExists = allItems.some((ai) => ai._id === it.parentId && !ai.variantId);\r\n  if (!parentExists && !it.variantId) {\r\n    console.error(`Parent item not found for parentId: ${it.parentId}`, it);\r\n    return;\r\n  }\r\n\r\n  if (it.variantId) {\r\n    const variantValid = allItems.some((ai) => ai._id === it.variantId && ai.parentId === it.parentId);\r\n    if (!variantValid) {\r\n      console.error(`Invalid variantId: ${it.variantId} for parentId: ${it.parentId}`, it);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const existingIdx = items.findIndex(\r\n    (r) => r.item === it.parentId && r.variant === (it.variantId || null)\r\n  );\r\n\r\n  if (existingIdx !== -1) {\r\n    // Item already exists → update quantity only\r\n    const updated = [...items];\r\n    const existing = updated[existingIdx];\r\n\r\n    if (existing.quantity + 1 > it.currentStock) {\r\n     Swal.fire({\r\n       icon: \"warning\",\r\n       title: \"Insufficient stock\",\r\n       text: `Only ${it.currentStock} unit${it.currentStock > 1 ? \"s\" : \"\"} left for \"${it.itemName}\".`,\r\n     });\r\n     return;\r\n   }\r\n\r\n    updated[existingIdx] = {\r\n      ...existing,\r\n      quantity: existing.quantity + 1,\r\n      subtotal:\r\n        (existing.quantity + 1) * existing.salesPrice - (existing.discount || 0),\r\n    };\r\n\r\n    setItems(updated);\r\n  } else {\r\n    // New item → add it to the list\r\n    const newItem = {\r\n      item: it.parentId,\r\n      variant: it.variantId || null,\r\n      itemName: it.itemName,\r\n      itemCode: it.itemCode || \"\",\r\n      openingStock: it.openingStock || 0,\r\n      currentStock: it.currentStock != null ? it.currentStock : (it.openingStock || 0),\r\n      salesPrice: it.salesPrice || 0,\r\n      quantity: 1,\r\n      discount: it.discount || 0,\r\n      tax: it.tax?._id || null,\r\n      taxRate: it.tax?.taxPercentage || 0,\r\n      unit: it.unit || null,\r\n      mrp: it.mrp || 0,\r\n      expiryDate: it.expiryDate || null,\r\n      subtotal: (it.salesPrice || 0) - (it.discount || 0),\r\n    };\r\n\r\n    if (newItem.salesPrice <= 0) {\r\n      alert(\"Item sales price must be greater than zero.\");\r\n      return;\r\n    }\r\n\r\n    setItems((prev) => [...prev, newItem]);\r\n  }\r\n\r\n  setSearchItemCode(\"\");\r\n  playBeep(); \r\n}\r\n\r\n\r\nasync function updateItem(idx, field, rawVal) {\r\n\r\n  /* 1️⃣ let the field go temporarily empty --------------------------- */\r\n  if (rawVal === \"\") {\r\n    setItems(prev =>\r\n      prev.map((r, i) =>\r\n        i === idx\r\n          ? { ...r, [field]: \"\" }   // store a blank string for now\r\n          : r\r\n      )\r\n    );\r\n    return;                         // skip the rest of the checks\r\n  }\r\n\r\n  /* 2️⃣ parse the value once we have something ---------------------- */\r\n  const numericVal = Number(rawVal);\r\n  if (isNaN(numericVal)) return;    // guard against weird input\r\n\r\n  const row = items[idx];\r\n  const delta = field === \"quantity\" ? numericVal - row.quantity : 0;\r\n\r\n\r\nif (field === \"quantity\") {\r\n  const row = items[idx];\r\n\r\n  // what’s left in the warehouse right now\r\n  const liveQty = await fetchLiveQty(selectedWarehouse, row.variant || row.item);\r\n\r\n  // max you can go back up to = original sold + whatever remains\r\n  const available = (row.origQty || 0) + liveQty;\r\n\r\n  if (numericVal > available) {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"Insufficient stock\",\r\n      text: `Only ${available} unit${available > 1 ? \"s\" : \"\"} available for \"${row.itemName}\".`,\r\n    });\r\n    return;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n if (field === \"salesPrice\" && numericVal > row.mrp) {\r\n   Swal.fire({\r\n     icon: \"warning\",\r\n     title: \"Price exceeds MRP\",\r\n     text: `Sales price ₹${numericVal} is above MRP ₹${row.mrp}.`,\r\n   });\r\n   return;\r\n }\r\n\r\n if (\r\n   (field === \"quantity\" || field === \"salesPrice\") &&\r\n   numericVal <= 0\r\n ) {\r\n   Swal.fire({\r\n     icon: \"warning\",\r\n     title: \"Invalid value\",\r\n     text: `${field.charAt(0).toUpperCase() + field.slice(1)} must be greater than zero.`,\r\n   });\r\n   return;\r\n }\r\n\r\n  setItems(prev =>\r\n    prev.map((r, i) =>\r\n      i === idx\r\n        ? {\r\n            ...r,\r\n            [field]: numericVal,\r\n            subtotal:\r\n              (field === \"salesPrice\" ? numericVal : r.salesPrice) *\r\n                (field === \"quantity\" ? numericVal : r.quantity) -\r\n              (field === \"discount\" ? numericVal : r.discount || 0),\r\n          }\r\n        : r\r\n    )\r\n  );\r\n  if (field === \"quantity\") {\r\n    if (delta > 0)   playBeep();   \r\n    if (delta < 0)   playRemove(); \r\n  }\r\n}\r\n\r\n\r\n\r\n  function removeItem(idx) {\r\n    playRemove();\r\n    setItems((prev) => prev.filter((_, i) => i !== idx));\r\n  }\r\n\r\n  // ─── PDF GENERATION ────────────────────────────────────────────────\r\n  const generateInvoicePDF = (order, payments) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Header\r\n    doc.setFontSize(20);\r\n    doc.text(\"Invoice\", 14, 20);\r\n    doc.setFontSize(12);\r\n    doc.text(`Invoice #: ${order.saleCode || \"N/A\"}`, 14, 30);\r\n    doc.text(`Date: ${new Date().toLocaleDateString()}`, 14, 38);\r\n    doc.text(`Source: POS`, 14, 46);\r\n\r\n    // Customer Information\r\n    const customer = customers.find((c) => c._id === selectedCustomer);\r\n    doc.setFontSize(14);\r\n    doc.text(\"Customer Information\", 14, 60);\r\n    doc.setFontSize(12);\r\n    doc.text(`Name: ${customer?.customerName || \"N/A\"}`, 14, 70);\r\n    doc.text(`Mobile: ${customer?.mobile || \"N/A\"}`, 14, 78);\r\n    const addrObj = customer?.address || {};\r\n    const addrStr = [\r\n      addrObj.street,\r\n      addrObj.city,\r\n      addrObj.state,\r\n      addrObj.zip,\r\n      addrObj.country,\r\n    ]\r\n      .filter((part) => typeof part === \"string\" && part.trim() !== \"\")\r\n      .join(\", \");\r\n    doc.text(`Address: ${addrStr || \"N/A\"}`, 14, 86);\r\n\r\n    // Items Table\r\n    doc.setFontSize(14);\r\n    doc.text(\"Items\", 14, 100);\r\n    const itemRows = items.map((item) => [\r\n      item.itemName || \"N/A\",\r\n      item.quantity || 0,\r\n      `Rs. ${(item.salesPrice || 0).toFixed(2)}`,\r\n      `Rs. ${(item.discount || 0).toFixed(2)}`,\r\n      `Rs. ${(item.subtotal || 0).toFixed(2)}`,\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      startY: 106,\r\n      head: [[\"Item Name\", \"Quantity\", \"Unit Price\", \"Discount\", \"Subtotal\"]],\r\n      body: itemRows,\r\n      theme: \"striped\",\r\n      styles: { fontSize: 10 },\r\n      headStyles: { fillColor: [0, 123, 255] },\r\n    });\r\n\r\n    // Totals\r\n    let finalY = doc.lastAutoTable.finalY || 106;\r\n    doc.setFontSize(12);\r\n    doc.text(`Subtotal: Rs. ${(totalAmount || 0).toFixed(2)}`, 14, finalY + 10);\r\n    doc.text(`Discount: Rs. ${(totalDiscount || 0).toFixed(2)}`, 14, finalY + 18);\r\n    doc.text(`Grand Total: Rs. ${(totalAmount - totalDiscount).toFixed(2)}`, 14, finalY + 26);\r\n\r\n    // Payments (if any)\r\n    if (payments && payments.length > 0) {\r\n      finalY = finalY + 34;\r\n      doc.setFontSize(14);\r\n      doc.text(\"Payments\", 14, finalY);\r\n      const paymentRows = payments.map((payment) => {\r\n        const paymentType = paymentTypes.find((pt) => pt._id === payment.paymentType);\r\n        return [\r\n          new Date().toLocaleDateString(),\r\n          paymentType?.paymentTypeName || \"N/A\",\r\n          `Rs. ${(payment.amount || 0).toFixed(2)}`,\r\n          payment.paymentNote || \"-\",\r\n        ];\r\n      });\r\n\r\n      autoTable(doc, {\r\n        startY: finalY + 6,\r\n        head: [[\"Date\", \"Payment Type\", \"Amount\", \"Note\"]],\r\n        body: paymentRows,\r\n        theme: \"striped\",\r\n        styles: { fontSize: 10 },\r\n        headStyles: { fillColor: [0, 123, 255] },\r\n      });\r\n\r\n      finalY = doc.lastAutoTable.finalY;\r\n      const totalPaid = payments.reduce((sum, p) => sum + (p.amount || 0), 0);\r\n      doc.setFontSize(12);\r\n      doc.text(`Total Paid: Rs. ${totalPaid.toFixed(2)}`, 14, finalY + 10);\r\n      const dueAmount = totalAmount - totalDiscount - totalPaid;\r\n      doc.text(`Due Amount: Rs. ${dueAmount.toFixed(2)}`, 14, finalY + 18);\r\n    }\r\n\r\n    // Footer\r\n    finalY = payments && payments.length > 0 ? finalY + 26 : finalY + 34;\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(150);\r\n    doc.text(\"Thank you for your business!\", 14, finalY + 10);\r\n    doc.text(`Generated by ${storeName || \"Grocery on Wheels\"}`, 14, finalY + 16);\r\n\r\n    // Open PDF in a new tab\r\n    const pdfBlob = doc.output(\"blob\");\r\n    const pdfUrl = URL.createObjectURL(pdfBlob);\r\n    window.open(pdfUrl, \"_blank\");\r\n  };\r\n\r\n  // ─── PAYMENT / ORDER LOGIC ──────────────────────────────────────────\r\n  function buildPayload({ status, payments, paymentMode }) {\r\n    console.log(\"Building payload with:\", {\r\n      selectedWarehouse,\r\n      selectedCustomer,\r\n      selectedAccount,\r\n      items,\r\n      status,\r\n      paymentMode,\r\n    });\r\n\r\n    if (!selectedWarehouse) {\r\n      throw new Error(\"Warehouse is required\");\r\n    }\r\n    if (!selectedCustomer) {\r\n      throw new Error(\"Customer is required\");\r\n    }\r\n    if (!selectedAccount) {\r\n      throw new Error(\"Account is required\");\r\n    }\r\n\r\n    const validItems = items\r\n      .map((it) => {\r\n        const isValid = allItems.some(\r\n          (ai) =>\r\n            ai.parentId === it.item &&\r\n            (!it.variant || ai._id === it.variant || ai.variantId === it.variant)\r\n        );\r\n        if (!isValid) {\r\n          console.error(\"Invalid item in payload:\", {\r\n            itemId: it.item,\r\n            variantId: it.variant,\r\n            itemName: it.itemName,\r\n            itemCode: it.itemCode,\r\n          });\r\n          return null;\r\n        }\r\n        if (it.quantity <= 0 || it.salesPrice <= 0) {\r\n          console.error(\"Invalid quantity or price for item:\", {\r\n            itemId: it.item,\r\n            itemName: it.itemName,\r\n            quantity: it.quantity,\r\n            price: it.salesPrice,\r\n          });\r\n          return null;\r\n        }\r\n        return {\r\n          item: it.item,\r\n          variant: it.variant,\r\n          quantity: it.quantity,\r\n          origQty: it.origQty,\r\n          price: it.salesPrice,\r\n          discount: it.discount || 0,\r\n          unit: it.unit,\r\n          tax: it.tax,\r\n          subtotal: it.subtotal,\r\n        };\r\n      })\r\n      .filter((it) => it !== null);\r\n       const stockErrors = [];\r\n   validItems.forEach((it) => {\r\n     // find the freshest item doc for this warehouse\r\n     const doc = allItems.find(\r\n       (ai) =>\r\n         ai.parentId === it.item &&\r\n         (!it.variant || ai._id === it.variant || ai.variantId === it.variant) &&\r\n         ai.warehouse?._id === selectedWarehouse\r\n     );\r\n\r\n     if (!doc) {\r\n       stockErrors.push(`Item not found in warehouse (id: ${it.item}).`);\r\n       return;\r\n     }\r\n\r\n     \r\n    const previousQty = it.origQty || 0;\r\nconst liveAvailable = doc.currentStock + previousQty;\r\n\r\nif (it.quantity > liveAvailable) {\r\n  stockErrors.push(\r\n    `\"${doc.itemName}\" – requested ${it.quantity}, available ${liveAvailable}`\r\n  );\r\n}\r\n   });\r\n\r\n   if (stockErrors.length) {\r\n     Swal.fire({\r\n       icon: \"warning\",\r\n       title: \"Insufficient stock\",\r\n       html: stockErrors.join(\"<br/>\"),\r\n     });\r\n     throw new Error(\"Stock validation failed\");\r\n   }\r\n\r\n    if (validItems.length === 0) {\r\n      throw new Error(\"No valid items to save. Please add valid items to the order.\");\r\n    }\r\n\r\n    const payload = {\r\n      warehouse: selectedWarehouse,\r\n      customer: selectedCustomer,\r\n      customerModel,\r\n      account: selectedAccount,\r\n      items: validItems,\r\n      totalAmount: totalAmount - totalDiscount,\r\n      totalDiscount,\r\n      couponCode: couponCode || undefined,\r\n      payments,\r\n      ...(linkedBooking ? { booking: linkedBooking } : {}),\r\n      status,\r\n      paymentMode,\r\n      invoiceCount,\r\n      previousBalance,\r\n      adjustAdvancePayment,\r\n      advancePaymentAmount,\r\n    };\r\n    console.log(\"Generated payload:\", payload);\r\n    return payload;\r\n  }\r\n\r\n async function sendOrder(payload, method = \"post\", id) {\r\n  /* ---- 1️⃣ Open the preview window immediately (during the click) ---- */\r\n  const previewWin = window.open(\"\", \"_blank\");\r\n  if (previewWin) {\r\n    previewWin.document.write(\r\n      \"<p style='font-family:Arial;padding:24px'>Generating invoice…</p>\"\r\n    );\r\n    previewWin.document.close();\r\n  }\r\n\r\n  try {\r\n    /* ---- 2️⃣ Save the order ---- */\r\n    const url  = id ? `api/pos/${id}` : \"api/pos\";\r\n    const { data } = await axios[method](url, payload, authHeaders());\r\n\r\n    /* ---- 3️⃣ Build the final invoice HTML ---- */\r\n    const custObj = customers.find(c => c._id === selectedCustomer) || {};\r\n    const html = buildInvoiceHTML(\r\n      data.order,\r\n      payload.payments,\r\n      storeInfo,\r\n      custObj,\r\n      items,\r\n      sellerDisplayName(user)          \r\n    );\r\n\r\n    /* ---- 4️⃣ Swap the temporary page with the real invoice ---- */\r\n    if (previewWin) {\r\n      previewWin.document.open();\r\n      previewWin.document.write(html);\r\n      previewWin.document.close();\r\n    }\r\n\r\n    /* ---- 5️⃣ House-keeping ---- */\r\n    setInvoiceCode(data.order.saleCode);\r\n    resetForm();\r\n    fetchHeld();\r\n    Swal.fire(\"Saved!\", \"\", \"success\");\r\n  } catch (err) {\r\n    if (previewWin) previewWin.close();   // don’t leave a blank tab\r\n    console.error(\"Send order error details:\", err);\r\n    Swal.fire(\"Error\", err.response?.data?.message || err.message, \"error\");\r\n  }\r\n}\r\n\r\n\r\n  function resetForm() {\r\n    setItems([]);\r\n    setQuantity(0);\r\n    setTotalAmount(0);\r\n    setTotalDiscount(0);\r\n    loadNextInvoiceCode();\r\n    setInvoiceCount(0);\r\n    setPreviousBalance(0);\r\n    setCouponCode(\"\");\r\n    setAdjustAdvancePayment(false);\r\n    setAdvancePaymentAmount(0);\r\n    setCurrentOrderId(\"\");\r\n    setSelectedCustomer(customers[0]?._id || \"\");\r\n    setSelectedWarehouse(warehouses[0]?._id || \"\");\r\n    setSelectedAccount(accounts[0]?._id || \"\");\r\n    setOrderPaymentMode(\"\");\r\n  }\r\n\r\n async function onHold() {\r\n  // 0️⃣  Fancy confirm dialog -----------------------\r\n  const { isConfirmed } = await Swal.fire({\r\n    title: \"Put order on hold?\",\r\n    text: \"Are you sure you want to add this order to held invoices?\",\r\n    icon: \"question\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#d33\",       // red – matches your Hold button\r\n    cancelButtonColor: \"#3085d6\",     // blue\r\n    confirmButtonText: \"Yes, Hold\",\r\n  });\r\n  if (!isConfirmed) return;           // user aborted\r\n\r\n  // 1️⃣  Basic validation (unchanged) --------------\r\n  if (!selectedWarehouse || !selectedCustomer || !selectedAccount) {\r\n    Swal.fire(\"Missing data\", \"Warehouse, customer and account are required.\", \"warning\");\r\n    return;\r\n  }\r\n\r\n  // 2️⃣  Find Hold payment type --------------------\r\n  const pt = getPaymentTypeId(\"Hold\");\r\n  if (!pt) {\r\n    Swal.fire(\"Config error\", \"Payment type 'Hold' is missing.\", \"error\");\r\n    return;\r\n  }\r\n\r\n  // 3️⃣  Build payload (your code) -----------------\r\n  const payload = {\r\n    warehouse: selectedWarehouse,\r\n    customer: selectedCustomer,\r\n    account: selectedAccount,\r\n    items: items.map((it) => ({\r\n      item: it.item,\r\n      variant: it.variant || null,\r\n      quantity: it.quantity,\r\n      price: it.salesPrice,\r\n      discount: it.discount || 0,\r\n      unit: it.unit,\r\n      tax: it.tax,\r\n      subtotal: it.subtotal,\r\n    })),\r\n    totalAmount: totalAmount - totalDiscount,\r\n    totalDiscount,\r\n    payments: [\r\n      {\r\n        paymentType: pt,\r\n        amount: totalAmount - totalDiscount,\r\n        paymentNote: \"Hold payment\",\r\n      },\r\n    ],\r\n    status: \"OnHold\",\r\n    paymentMode: \"hold\",\r\n    invoiceCount,\r\n    previousBalance,\r\n    adjustAdvancePayment,\r\n    advancePaymentAmount,\r\n    couponCode: couponCode || undefined,\r\n  };\r\n\r\n  // 4️⃣  POST / PUT exactly as before --------------\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (currentOrderId) {\r\n      await axios.put(`api/pos/${currentOrderId}`, payload, { headers: { Authorization: `Bearer ${token}` } });\r\n    } else {\r\n      await axios.post(\"api/pos\", payload, { headers: { Authorization: `Bearer ${token}` } });\r\n    }\r\n    await fetchHeld();\r\n    Swal.fire(\"Held!\", \"Order has been moved to held invoices.\", \"success\");\r\n  } catch (err) {\r\n    console.error(\"Hold error:\", err);\r\n    Swal.fire(\"Error\", err.response?.data?.message || err.message, \"error\");\r\n  }\r\n}\r\nfunction getAllowedAccounts(mode) {\r\n  const wh = warehouses.find(w => w._id === selectedWarehouse);\r\n  if (!wh) return [];\r\n\r\n  const cashId = wh.cashAccount?._id;                 // <- warehouse’s cash A/C\r\n  const bankAccounts = accounts.filter(a => a.accountType === \"Bank\");\r\n\r\n  if (mode === \"cash\") {\r\n    // Pure cash payment → only warehouse cash + (optionally) the one\r\n    // already stored on an edited bill so we don’t break existing data.\r\n    const legacy = accounts.find(a => a._id === selectedAccount);\r\n    return [ ...accounts.filter(a => a._id === cashId),\r\n             ...(legacy && legacy._id !== cashId ? [legacy] : []) ];\r\n  }\r\n\r\n  if (mode === \"multiple\") {\r\n    // Multiple: warehouse cash + every bank account\r\n    return [\r\n      ...accounts.filter(a => a._id === cashId),\r\n      ...bankAccounts,\r\n    ];\r\n  }\r\n\r\n  // Bank-only mode → only bank accounts\r\n  return bankAccounts;\r\n}\r\n\r\n async function onOpenModal(mode) {\r\n  if (!editId) {\r\n    // only enforce stock guard on new sales, not on edits\r\n    for (const r of items) {\r\n      const liveQty = await fetchLiveQty(selectedWarehouse, r.variant || r.item);\r\n      if (r.quantity > liveQty) {\r\n    Swal.fire(\"Stock changed\",\r\n      `\"${r.itemName}\" now has only ${liveQty} left. Please adjust your cart.`,\r\n      \"warning\");\r\n    return;               // stop – don’t open the payment modal\r\n  }\r\n}\r\n  }\r\n\r\n    if (!editId || mode === \"multiple\") {\r\n      if (!selectedWarehouse || !selectedCustomer || !selectedAccount) {\r\n        alert(\"Please select a warehouse, customer, and account before proceeding with payment.\");\r\n        return;\r\n      }\r\n    }\r\n    if (!items.length) {\r\n      alert(\"Please add at least one item to the order.\");\r\n      return;\r\n    }\r\n\r\n    if (mode === \"cash\" || mode === \"bank\") {\r\n      const paymentTypeId = getPaymentTypeId(mode);\r\n      if (!paymentTypeId) {\r\n        alert(\r\n          `Missing payment type: ${mode.charAt(0).toUpperCase() + mode.slice(1)}. Please ensure it is configured.`\r\n        );\r\n        return;\r\n      }\r\n\r\n      const payment = {\r\n        paymentType: paymentTypeId,\r\n        amount: totalAmount - totalDiscount,\r\n        paymentNote: `${mode.charAt(0).toUpperCase() + mode.slice(1)} payment`,\r\n      };\r\n\r\n      if (mode === \"bank\") {\r\n        if (terminals.length > 0) {\r\n          payment.terminal = terminals[0]._id;\r\n        }\r\n      }\r\n\r\n      try {\r\n        sendOrder(\r\n          buildPayload({\r\n            status: \"Completed\",\r\n            payments: [payment],\r\n            paymentMode: mode,\r\n          }),\r\n          currentOrderId ? \"put\" : \"post\",\r\n          currentOrderId\r\n        );\r\n      } catch (err) {\r\n        alert(err.message);\r\n      }\r\n    } else {\r\n      setPaymentMode(mode);\r\n      setFilteredAccounts(getAllowedAccounts(mode));\r\n      setIsPaymentModalOpen(true);\r\n    }\r\n  }\r\n  const sellerDisplayName = (u = {}) =>\r\n  // ① show what’s in the navbar\r\n  u.name?.trim() ||\r\n  // ② otherwise try first + last\r\n  [u.FirstName, u.LastName].filter(Boolean).join(\" \").trim() ||\r\n  // ③ fall back to email or phone\r\n  u.userName || u.Mobile || \"–\";\r\n  const storeInfo = {\r\n  logo:        \"/logo/inspiredgrow.jpg\",                       //  40-50 px square looks right\r\n  storeName:   storeName,                                //  already in state\r\n  tagline:     \"GROCERY ON WHEELS\",\r\n  address:     \"Basement 210-211 new Rishi Nagar near\\nShree Shyam Baba Mandir Gali No. 9, Hisar – 125001\",\r\n  gst:         \"06AAGCI0630K1ZR\",\r\n  phone:       \"9050092092\",\r\n  email:       \"INSPIREDGROW@GMAIL.COM\",\r\n};\r\n\r\n\r\n  \r\n\r\n  // ─── HELPER: Edit / Delete held invoices ─────────────────────────────\r\n  async function handleEditInvoice(id) {\r\n    const inv = await fetchPosById(id);\r\n    if (!inv) return;\r\n    hydrateForEdit(inv);\r\n    setShowHoldList(false);\r\n  }\r\n\r\n  async function handleDeleteInvoice(id) {\r\n    if (!window.confirm(\"Delete this held invoice?\")) return;\r\n    await deletePosTransaction(id);\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.clear();\r\n    navigate(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function toggleFullScreen() {\r\n    if (!document.fullscreenElement) {\r\n      document.documentElement.requestFullscreen().catch(console.error);\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n  }\r\n \r\n\r\n  // ─── RENDER ─────────────────────────────────────────────────────────\r\n  const paymentSummary = {\r\n    totalItems: quantity,\r\n    totalPrice: totalAmount,\r\n    discount: totalDiscount,\r\n    couponDiscount: 0,\r\n    totalPayable: totalAmount - totalDiscount,\r\n    totalPaying: 0,\r\n    balance: totalAmount - totalDiscount,\r\n    changeReturn: 0,\r\n  };\r\n\r\n  const buttonStyles = {\r\n    hold: orderPaymentMode === \"hold\" ? \"border-4 border-yellow-400 shadow-lg\" : \"border border-gray-300\",\r\n    multiple: orderPaymentMode === \"multiple\" ? \"border-4 border-yellow-400 shadow-lg\" : \"border border-gray-300\",\r\n    cash: orderPaymentMode === \"cash\" ? \"border-4 border-yellow-400 shadow-lg\" : \"border border-gray-300\",\r\n    bank: orderPaymentMode === \"bank\" ? \"border-4 border-yellow-400 shadow-lg\" : \"border border-gray-300\",\r\n  };\r\n\r\n  if (isLoadingEdit) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gray-100\">\r\n      {/* Navbar */}\r\n      <nav className=\"flex items-center justify-between p-4 bg-gradient-to-r from-gray-800 to-gray-900 text-white shadow-lg\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <h1\r\n            className=\"text-xl font-bold cursor-pointer hover:text-yellow-400 transition-colors\"\r\n            onClick={() => navigate(\"/dashboard\")}\r\n          >\r\n            {storeName || \"Grocery on Wheels\"}\r\n          </h1>\r\n          <button\r\n            className=\"md:hidden text-2xl hover:text-yellow-400 transition-colors\"\r\n            onClick={() => setShowHoldList((v) => !v)}\r\n          >\r\n            <FaBars />\r\n          </button>\r\n          <div className=\"hidden md:flex gap-4\">\r\n            <div\r\n              className=\"flex items-center gap-1 cursor-pointer hover:text-yellow-400 transition-colors\"\r\n              onClick={() => navigate(\"/sale-list\")}\r\n            >\r\n              <FaList className=\"text-yellow-500\" /> Sales List\r\n            </div>\r\n            <div\r\n              className=\"flex items-center gap-1 cursor-pointer hover:text-yellow-400 transition-colors\"\r\n              onClick={() => navigate(\"/customer/view\")}\r\n            >\r\n              <FaUsers className=\"text-yellow-500\" /> Customers\r\n            </div>\r\n            <div\r\n              className=\"flex items-center gap-1 cursor-pointer hover:text-yellow-400 transition-colors\"\r\n              onClick={() => navigate(\"/item-list\")}\r\n            >\r\n              <FaBox className=\"text-yellow-500\" /> Items\r\n            </div>\r\n            <div\r\n              className=\"flex items-center gap-1 cursor-pointer hover:text-yellow-400 transition-colors\"\r\n              onClick={resetForm}\r\n            >\r\n              <FaFileInvoice className=\"text-yellow-500\" /> New Invoice\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"hidden md:flex items-center gap-4\">\r\n          <div\r\n            className=\"relative cursor-pointer text-sm hover:text-yellow-400 transition-colors\"\r\n            onClick={() => setShowHoldList((v) => !v)}\r\n          >\r\n            Hold List{\" \"}\r\n            <span className=\"absolute -top-2 -right-3 bg-red-600 px-2 py-1 text-xs rounded-full\">\r\n              {heldInvoices.length}\r\n            </span>\r\n          </div>\r\n          <FaWindowMaximize\r\n            className=\"cursor-pointer text-xl hover:text-yellow-400 transition-colors\"\r\n            onClick={toggleFullScreen}\r\n          />\r\n          <div\r\n            className=\"relative flex items-center gap-2 cursor-pointer\"\r\n            onClick={() => setShowProfileDropdown((v) => !v)}\r\n          >\r\n            <img\r\n              src=\"/userlogoprof.png\"\r\n              alt=\"Profile\"\r\n              className=\"w-10 h-10 rounded-full border-2 border-gray-300 shadow-sm\"\r\n            />\r\n            <span className=\"hover:text-yellow-400 transition-colors\">\r\n              {loadingUser ? \"Loading...\" : user.name}\r\n            </span>\r\n            {showProfileDropdown && (\r\n              <div className=\"absolute top-full right-0 w-64 p-4 bg-white text-black rounded-lg shadow-xl border border-gray-200 z-20\">\r\n                <div className=\"flex flex-col items-center\">\r\n                  <img\r\n                    src=\"/userlogoprof.png\"\r\n                    alt=\"Profile\"\r\n                    className=\"w-16 h-16 rounded-full border-2 border-gray-400 shadow-sm\"\r\n                  />\r\n                  <h3 className=\"mt-2 font-bold text-gray-800\">{user.name}</h3>\r\n                  <p className=\"text-sm text-blue-600\">Role: {user.role}</p>\r\n                </div>\r\n                <div className=\"mt-4 flex flex-col gap-2\">\r\n                  <button className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 transition-colors\">\r\n                    Profile\r\n                  </button>\r\n                  <button\r\n                    onClick={handleLogout}\r\n                    className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors\"\r\n                  >\r\n                    Sign Out\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"flex items-center gap-1 cursor-pointer hover:text-yellow-400 transition-colors\"\r\n            onClick={() => navigate(\"/dashboard\")}\r\n          >\r\n            <MdOutlineDashboard className=\"text-yellow-500\" /> Dashboard\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Held invoices */}\r\n      {showHoldList && (\r\n  <div className=\"absolute top-16 right-4 w-80 p-4 bg-white rounded-lg shadow-xl border border-gray-200 z-20\">\r\n    <h3 className=\"mb-3 font-bold text-gray-800 text-lg\">Held Invoices</h3>\r\n    {heldInvoices.length ? (\r\n      heldInvoices.map((inv) => (\r\n        <div\r\n          key={inv._id}\r\n          className=\"flex justify-between items-center p-3 mb-2 bg-white rounded-lg border-l-4 border-cyan-500 hover:bg-gray-50 transition\"\r\n        >\r\n          {/* Show saleCode if available, otherwise first item name */}\r\n          <div className=\"flex flex-col\">\r\n            <span className=\"font-semibold text-gray-800\">\r\n              {inv.saleCode || inv.items?.[0]?.itemName || inv._id.slice(0, 6)}\r\n            </span>\r\n            {inv.items?.length > 1 && (\r\n              <span className=\"text-xs text-gray-500\">\r\n                +{inv.items.length - 1} more item{inv.items.length - 1 > 1 ? \"s\" : \"\"}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <button\r\n              onClick={() => handleEditInvoice(inv._id)}\r\n              className=\"text-blue-600 hover:text-blue-800 font-medium\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => handleDeleteInvoice(inv._id)}\r\n              className=\"text-red-600 hover:text-red-800 font-medium\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <p className=\"text-gray-500 text-sm\">No held invoices</p>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex flex-col lg:flex-row flex-grow gap-6 p-6\">\r\n        <div className=\"lg:w-2/3 w-full p-6 bg-white rounded-xl shadow-lg border-t-4 border-cyan-500\">\r\n          {/* Invoice form */}\r\n          <div className=\"flex flex-col gap-5\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              <select\r\n                className=\"border border-gray-300 p-3 rounded-lg bg-gray-50 text-gray-700 focus:ring-2 focus:ring-cyan-400 focus:outline-none transition-all\"\r\n                value={selectedWarehouse}\r\n                onChange={(e) => setSelectedWarehouse(e.target.value)}\r\n              >\r\n                <option value=\"\">Select Warehouse</option>\r\n                 {warehouses\r\n    // only show Active ones\r\n    .filter(w => w.status === \"Active\")\r\n    .map((w) => (\r\n      <option key={w._id} value={w._id}>\r\n        {w.warehouseName}\r\n      </option>\r\n    ))\r\n  }\r\n</select>\r\n              <input\r\n                className=\"border border-gray-300 p-3 rounded-lg bg-gray-100 text-gray-700 focus:ring-2 focus:ring-cyan-400 focus:outline-none transition-all\"\r\n                readOnly\r\n                value={invoiceCode}\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              <div className=\"flex items-center border border-gray-300 rounded-lg bg-gray-50\">\r\n  <select\r\n    className=\"flex-grow border-none p-3 bg-transparent text-gray-700 focus:ring-2 focus:ring-cyan-400 focus:outline-none transition-all\"\r\n    value={selectedCustomer}\r\n    onChange={(e) => setSelectedCustomer(e.target.value)}\r\n  >\r\n    <option value=\"\">Select Customer</option>\r\n    {customers.map((c) => (\r\n      <option key={c._id} value={c._id}>\r\n        {c.customerName}\r\n      </option>\r\n    ))}\r\n  </select>\r\n  <button\r\n    type=\"button\"\r\n    onClick={() => {\r\n  console.log(\"Plus button clicked!\");\r\n  setShowCustomerPopup(true);\r\n}}\r\n    title=\"Add new customer\"\r\n    className=\"px-3 py-2 text-lg font-bold text-blue-600 border-l hover:bg-gray-100\"\r\n  >\r\n    +\r\n  </button>\r\n</div>\r\n              <div className=\"relative flex items-center border border-gray-300 rounded-lg p-3 bg-gray-50\">\r\n                <FaBarcode className=\"text-gray-500 mr-3\" />\r\n                <input\r\n  className=\"flex-grow text-gray-700 focus:outline-none bg-transparent\"\r\n  placeholder=\"Item name / Barcode / Item code\"\r\n  value={searchItemCode}\r\n  onChange={e => {\r\n    const val = e.target.value.trim()\r\n    // 1️⃣ always update the search term so filteredItems keeps working\r\n    setSearchItemCode(val)\r\n\r\n    // 2️⃣ if it's a full, exact barcode or itemCode match, auto-add\r\n    const hit = allItems.find(i => i.barcodes?.includes(val))\r\n    \r\n    if (hit) {\r\n      addItem(hit)\r\n      // clear so user can type the next code\r\n      setSearchItemCode(\"\") \r\n    }\r\n  }}\r\n \r\n  onKeyDown={e => {\r\n  if (e.key === \"Enter\") {      // first swallow Enter\r\n    e.preventDefault();         // ⏹ stops the form submit\r\n  }\r\n   if (e.key === \"Enter\" && filteredItems[0]) {\r\n     addItem(filteredItems[0]);\r\n     setSearchItemCode(\"\");\r\n   }\r\n}}\r\n/>\r\n\r\n                <button\r\n                  disabled={!selectedWarehouse}\r\n                  onClick={startScanner}\r\n                  className={`ml-2 rounded-full p-2 transition-all ${\r\n                    selectedWarehouse\r\n                      ? \"hover:bg-blue-600 text-white bg-blue-500\"\r\n                      : \"text-gray-400 cursor-not-allowed\"\r\n                  }`}\r\n                >\r\n                  <CameraIcon className=\"w-5 h-5\" />\r\n                </button>\r\n                {searchItemCode && filteredItems.length > 0 && (\r\n                  <ul className=\"absolute top-full left-0 w-full max-h-60 overflow-y-auto bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\r\n                    {filteredItems.map((it) => (\r\n                      <li\r\n                        key={it._id}\r\n                        className=\"p-3 hover:bg-gray-100 cursor-pointer transition-colors\"\r\n                        onClick={() => addItem(it)}\r\n                      >\r\n                        <strong className=\"text-gray-800\">{it.itemCode}</strong> - {it.itemName}\r\n                        {it.barcodes?.length > 0 && (\r\n                          <span className=\"text-gray-500\"> ({it.barcodes[0]})</span>\r\n                        )}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n                {scanning && (\r\n                  <div className=\"fixed inset-0 bg-black/70 flex flex-col items-center justify-center z-50\">\r\n                    <div className=\"w-72 h-72 border-4 border-white rounded-lg overflow-hidden\">\r\n                      <video\r\n                        ref={videoRef}\r\n                        className=\"object-cover w-full h-full\"\r\n                        autoPlay\r\n                        muted\r\n                        playsInline\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={() => {\r\n                        const reader = codeReaderRef.current;\r\n                        if (reader?.reset) {\r\n                          reader.reset();\r\n                        } else if (reader?.stopStreams) {\r\n                          reader.stopStreams();\r\n                        }\r\n                        if (videoRef.current?.srcObject) {\r\n                          videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n                        }\r\n                        setScanning(false);\r\n                      }}\r\n                      className=\"mt-4 px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <input\r\n                className=\"border border-gray-300 p-3 rounded-lg bg-gray-100 text-gray-700 focus:ring-2 focus:ring-cyan-400 focus:outline-none transition-all\"\r\n                readOnly\r\n                value={\r\n                  orderPaymentMode\r\n                    ? `Payment Method: ${orderPaymentMode.charAt(0).toUpperCase() + orderPaymentMode.slice(1)}`\r\n                    : \"\"\r\n                }\r\n                placeholder=\"Payment Method: None\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {showCustomerPopup && (\r\n  <CustomerPopup\r\n    open={showCustomerPopup}\r\n    onClose={() => setShowCustomerPopup(false)}\r\n    onCreated={(newCustomer) => {\r\n      setCustomers((prev) => [...prev, newCustomer]);\r\n      setSelectedCustomer(newCustomer._id);\r\n      setShowCustomerPopup(false);\r\n    }}\r\n  />\r\n)}\r\n\r\n\r\n          {/* Previous due */}\r\n          <div className=\"mt-4 text-red-600 font-medium\">\r\n            Previous Due: ₹{previousBalance.toFixed(2)}\r\n          </div>\r\n\r\n          {/* Items table */}\r\n          <div className=\"mt-6 overflow-x-auto border border-gray-200 rounded-lg shadow-sm\">\r\n            <table className=\"min-w-full bg-white\">\r\n              <thead className=\"bg-gray-200 text-gray-700 text-sm\">\r\n                <tr>\r\n                  {[\"Item Name\", \"Stock\", \"Quantity\", \"Sales Price\", \"MRP\", \"Total ₹\", \"Remove\"].map((h) => (\r\n                    <th key={h} className=\"px-4 py-3 text-left font-semibold border-b\">\r\n                      {h}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-gray-600 text-sm\">\r\n                {items.length ? (\r\n                  items.map((it, i) => (\r\n                    <tr key={i} className=\"border-b hover:bg-gray-50 transition-colors\">\r\n                      <td className=\"px-4 py-3\">{it.itemName}</td>\r\n                      {/*<td className=\"px-4 py-3\">{it.itemCode}</td>*/}\r\n                      <td className=\"px-4 py-3\">{it.currentStock}</td>\r\n                      <td className=\"px-4 py-3\">\r\n                        <input\r\n    type=\"number\"\r\n    min=\"1\"\r\n    className=\"w-16 text-center border rounded\"\r\n    value={it.quantity}\r\n    onChange={e => updateItem(i, \"quantity\", e.target.value)}\r\n  />\r\n                      </td>\r\n                      <td className=\"px-4 py-3\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-20 p-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-cyan-400 focus:outline-none\"\r\n                          value={it.salesPrice}\r\n                          onChange={(e) => updateItem(i, \"salesPrice\", e.target.value)}\r\n                        />\r\n                      </td>\r\n                      {/*<td className=\"px-4 py-3\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-20 p-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-cyan-400 focus:outline-none\"\r\n                          value={it.discount}\r\n                          onChange={(e) => updateItem(i, \"discount\", e.target.value)}\r\n                        />\r\n                      </td>*/}\r\n                      {/*<td className=\"px-4 py-3\">{it.taxRate}</td>*/}\r\n                      {/*<td className=\"px-4 py-3\">{it.unit?.unitName || \"N/A\"}</td>*/}\r\n                      <td className=\"px-4 py-3\">{it.mrp}</td>\r\n                      {/*<td className=\"px-4 py-3\">\r\n                        {it.expiryDate ? new Date(it.expiryDate).toLocaleDateString() : \"N/A\"}\r\n                      </td>*/}\r\n                      <td className=\"px-4 py-3 text-center font-semibold\">\r\n  {(it.quantity * it.salesPrice).toFixed(2)}\r\n</td>\r\n                      <td className=\"px-4 py-3\">\r\n                        <button\r\n                          className=\"text-red-500 hover:text-red-700 font-medium transition-colors\"\r\n                          onClick={() => removeItem(i)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"11\" className=\"py-6 text-center text-red-500 font-medium\">\r\n                      No Items Added\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Footer action buttons */}\r\n          <div className=\"mt-6 p-4 bg-gray-100 border-t rounded-b-lg flex flex-wrap justify-center gap-4\">\r\n            <button\r\n              onClick={onHold}\r\n              className={`flex items-center justify-center gap-2 px-6 py-3 text-white bg-red-600 hover:bg-red-700 rounded-lg shadow-md transition-all duration-200 ${buttonStyles.hold}`}\r\n            >\r\n              <FaHandPaper /> Hold\r\n            </button>\r\n            <button\r\n              onClick={() => onOpenModal(\"multiple\")}\r\n              className={`flex items-center justify-center gap-2 px-6 py-3 text-white bg-blue-600 hover:bg-blue-700 rounded-lg shadow-md transition-all duration-200 ${buttonStyles.multiple}`}\r\n            >\r\n              <FaLayerGroup /> Multiple\r\n            </button>\r\n            <button\r\n              onClick={() => onOpenModal(\"cash\")}\r\n              className={`flex items-center justify-center gap-2 px-6 py-3 text-white bg-green-600 hover:bg-green-700 rounded-lg shadow-md transition-all duration-200 ${buttonStyles.cash}`}\r\n            >\r\n              <FaMoneyBill /> Cash\r\n            </button>\r\n            <button\r\n              onClick={() => onOpenModal(\"bank\")}\r\n              className={`flex items-center justify-center gap-2 px-6 py-3 text-white bg-purple-600 hover:bg-purple-700 rounded-lg shadow-md transition-all duration-200 ${buttonStyles.bank}`}\r\n            >\r\n              <FaCreditCard /> Bank\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Side summary */}\r\n        <div className=\"lg:w-1/3 w-full p-6 bg-white rounded-xl shadow-lg border-l-4 border-cyan-500\">\r\n          {[\r\n            [\"Quantity:\", quantity],\r\n            [\"Total Amount (₹):\", totalAmount.toFixed(2)],\r\n            [\"Total Discount (₹):\", totalDiscount.toFixed(2)],\r\n            [\"Grand Total (₹):\", (totalAmount - totalDiscount).toFixed(2)],\r\n          ].map(([label, val]) => (\r\n            <div key={label} className=\"flex justify-between mb-4 text-gray-700 text-lg\">\r\n              <span className=\"font-semibold\">{label}</span>\r\n              <span>{val}</span>\r\n            </div>\r\n          ))}\r\n          <div className=\"mt-6\">\r\n            <label className=\"block mb-2 text-lg font-semibold text-gray-800\">Coupon Code</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full p-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700 focus:ring-2 focus:ring-cyan-400 focus:outline-none transition-all\"\r\n              placeholder=\"Enter Coupon Code\"\r\n              value={couponCode}\r\n              onChange={(e) => setCouponCode(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Payment modal */}\r\n      {isPaymentModalOpen && (\r\n        <PaymentModal\r\n          onClose={() => setIsPaymentModalOpen(false)}\r\n          paymentMode={paymentMode}\r\n          paymentTypes={paymentTypes}\r\n          accounts={filteredAccounts}\r\n          terminals={terminals}\r\n          initialAdvance={advancePaymentAmount}\r\n          initialAccount={selectedAccount}\r\n          initialSummary={paymentSummary}\r\n          selectedWarehouse={selectedWarehouse}\r\n          onSubmit={({\r\n            paymentRows,\r\n            couponCode,\r\n            adjustAdvancePayment,\r\n            advance,\r\n            selectedAccount,\r\n          }) => {\r\n            sendOrder(\r\n              buildPayload({\r\n                status: \"Completed\",\r\n                payments: paymentRows,\r\n                paymentMode: paymentMode,\r\n              }),\r\n              currentOrderId ? \"put\" : \"post\",\r\n              currentOrderId\r\n            );\r\n            setCouponCode(couponCode || \"\");\r\n            setAdjustAdvancePayment(adjustAdvancePayment);\r\n            setAdvancePaymentAmount(advance);\r\n            setSelectedAccount(selectedAccount);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  "],"names":["_ref","onClose","onSubmit","paymentMode","paymentTypes","accounts","terminals","initialAdvance","initialAccount","initialSummary","totalItems","totalPrice","discount","couponDiscount","totalPayable","totalPaying","balance","changeReturn","selectedWarehouse","getId","name","_paymentTypes$find","find","pt","_pt$paymentTypeName","paymentTypeName","toLowerCase","_id","couponCode","setCouponCode","useState","advance","setAdvance","adjustAdvancePayment","setAdjustAdvancePayment","summary","setSummary","paymentRows","setPaymentRows","paymentType","amount","note","terminal","account","_terminals$find","t","warehouse","useEffect","reduce","sum","row","Number","advanceAmount","rows","map","_availableTerminals$","availableTerminals","filter","newTerminal","handleChangeRow","idx","field","value","r","i","updated","isCash","isBank","_terminals$find2","_jsx","className","children","_jsxs","onClick","FaTimes","size","type","placeholder","onChange","e","target","checked","disabled","min","acc","accountName","tid","addRow","_ref2","label","toFixed","handleSave","some","alert","undefined","selectedAccount","toOpt","o","_o$_id","CustomerPopup","open","onCreated","empty","customerName","email","mobile","phone","address","city","state","country","postcode","gstNumber","taxNumber","openingBalance","previousBalance","purchaseDue","purchaseReturnDue","status","shippingCity","shippingArea","shippingState","shippingPostcode","shippingLocationLink","shippingCountry","panNumber","priceLevel","priceLevelType","salesReturnDue","customerId","attachmentPath","customerImage","openingBalancePayments","form","setForm","countries","setCountries","states","setStates","saving","setSaving","errorMsg","setErrorMsg","hdr","headers","Authorization","localStorage","getItem","Promise","all","axios","get","then","cRes","sRes","data","c","s","catch","onEsc","key","window","addEventListener","removeEventListener","change","stopPropagation","async","preventDefault","post","err","_err$response","_err$response$data","response","message","required","Select","options","beep","Audio","sndRemove","playBeep","pause","currentTime","play","playRemove","POS","navigate","useNavigate","params","useSearchParams","editId","bookingId","preCust","preCustModel","user","setUser","role","loadingUser","setLoadingUser","isLoadingEdit","setIsLoadingEdit","showProfileDropdown","setShowProfileDropdown","warehouses","setWarehouses","setSelectedWarehouse","customers","setCustomers","selectedCustomer","setSelectedCustomer","linkedBooking","setLinkedBooking","setAccounts","setSelectedAccount","setTerminals","setPaymentTypes","allItems","setAllItems","filteredItems","setFilteredItems","searchItemCode","setSearchItemCode","scanning","setScanning","items","setItems","quantity","setQuantity","totalAmount","setTotalAmount","totalDiscount","setTotalDiscount","invoiceCode","setInvoiceCode","Date","getFullYear","String","getMonth","padStart","invoiceCount","setInvoiceCount","setPreviousBalance","advancePaymentAmount","setAdvancePaymentAmount","heldInvoices","setHeldInvoices","showHoldList","setShowHoldList","currentOrderId","setCurrentOrderId","isPaymentModalOpen","setIsPaymentModalOpen","setPaymentMode","orderPaymentMode","setOrderPaymentMode","videoRef","useRef","codeReaderRef","storeName","setStoreName","orderToEdit","setOrderToEdit","defaultWarehouse","setDefaultWarehouse","prevWarehouseRef","showCustomerPopup","setShowCustomerPopup","filteredAccounts","setFilteredAccounts","customerModel","setCustomerModel","authHeaders","getPaymentTypeId","fetchLiveQty","warehouseId","invId","_data$currentStock","currentStock","openingStock","loadNextInvoiceCode","year","saleRes","posRes","sales","poses","allCodes","saleCode","p","Boolean","maxSeq","forEach","code","parts","split","seq","parseInt","padded","console","error","fetchHeld","fetchPosById","id","log","order","fetchItems","inStock","flatItems","it","_it$warehouse","isVariant","parentItemId","parentId","variantId","itemName","variantName","barcode","barcodes","itemCode","_i$warehouse","hydrateForEdit","inv","_inv$customer","_inv$warehouse3","_inv$account","detectedPaymentMode","_inv$payments","_inv$payments2","payments","length","_paymentType$paymentT","_paymentType$paymentT2","payment","_i$tax","_itemDoc$tax","_i$tax2","_itemDoc$tax2","itemDoc","ai","_ai$warehouse","_inv$warehouse","item","variant","_inv$warehouse2","salesPrice","price","origQty","tax","taxRate","taxPercentage","unit","mrp","expiryDate","subtotal","warn","itemId","advanceUsed","customer","walkIn","_warehouses$","w","accountId","a","_warehouse$cashAccoun","_accounts$","cashAccount","current","confirm","url","fetchProfile","list","Array","isArray","cust","accts","fetchLookups","finally","qty","amt","disc","q","trim","rx","RegExp","replace","filtered","_it$warehouse2","_it$barcodes","test","join","slice","_videoRef$current","reader","reset","stopStreams","srcObject","getTracks","track","stop","previousDue","_w$cashAccount","_accounts$2","ready","wh","ptypes","_warehouses$find","restricted","isRestricted","addItem","liveQty","Swal","icon","title","text","existingIdx","findIndex","existing","_it$tax","_it$tax2","newItem","prev","updateItem","rawVal","numericVal","isNaN","delta","available","charAt","toUpperCase","buildPayload","Error","validItems","stockErrors","doc","_ai$warehouse2","push","previousQty","liveAvailable","html","payload","booking","sendOrder","method","arguments","previewWin","document","write","close","custObj","store","sellerName","logo","tagline","gst","today","createdAt","now","totalQuantity","rawTotal","taxAmt","taxAmount","netBeforeTax","paid","prevDue","totalDue","body","payRows","paymentNote","n","toLocaleString","minimumFractionDigits","toLocaleDateString","toLocaleTimeString","hour","minute","buildInvoiceHTML","storeInfo","sellerDisplayName","resetForm","_customers$","_warehouses$2","_accounts$3","onOpenModal","mode","paymentTypeId","_wh$cashAccount","cashId","bankAccounts","accountType","legacy","getAllowedAccounts","_u$name","u","FirstName","LastName","userName","Mobile","handleDeleteInvoice","delete","deletePosTransaction","paymentSummary","buttonStyles","LoadingScreen","v","FaBars","FaList","FaUsers","FaBox","FaFileInvoice","FaWindowMaximize","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","src","alt","clear","location","reload","MdOutlineDashboard","_inv$items","_inv$items$","_inv$items2","handleEditInvoice","warehouseName","readOnly","FaBarcode","val","hit","_i$barcodes2","includes","onKeyDown","startScanner","codeReader","BrowserMultiFormatReader","lastText","lastTime","decodeFromConstraints","video","facingMode","exact","result","getText","_i$barcodes","CameraIcon","_it$barcodes2","ref","autoPlay","muted","playsInline","_videoRef$current2","newCustomer","h","removeItem","_","colSpan","isConfirmed","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","token","put","_err$response2","_err$response2$data","FaHandPaper","FaLayerGroup","FaMoneyBill","FaCreditCard","_ref3","PaymentModal","_ref4","isSidebarOpen","setSidebarOpen","Navbar","Sidebar"],"sourceRoot":""}