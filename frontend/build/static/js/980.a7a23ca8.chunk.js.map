{"version":3,"file":"static/js/980.a7a23ca8.chunk.js","mappings":"6IAEe,SAASA,EAAMC,GAK1B,IAL2B,KAC3BC,EAAI,KACJC,EAAK,SAAQ,UACbC,KACGC,GACNJ,EACC,OACEK,EAAAA,EAAAA,KAAA,UAASF,UAAW,GAAGA,OAAiBC,EAAKE,SAAGL,GAEpD,C,4ICTe,SAASM,EAAYP,GAA0C,IAAzC,MAAEQ,EAAK,QAAEC,EAAO,YAAEC,GAAc,GAAMV,EACzE,MAAOW,EAAOC,IAAkBC,EAAAA,EAAAA,UAASL,EAAMM,YACxCC,EAASC,IAAcH,EAAAA,EAAAA,WAAS,GAEjCI,EAAeA,CAACC,EAAGC,KACvB,MAAM,KAAEC,EAAI,MAAEC,GAAUH,EAAEI,OACpBC,EAAeC,OAAOH,GAEtBI,EAAUd,EAAMe,KAAKC,IACzB,GAAIA,EAAKC,SAAWT,EAAI,CACtB,MAAMU,EAAc,IACfF,EACH,CAACP,GAAOG,GAGV,OADAM,EAAYC,WAAWD,EAAYE,YAAYF,EAAYG,WACpDH,CACT,CACA,OAAOF,CAAI,IAGbf,EAAea,GACfT,GAAW,EAAK,EAqBZiB,EAAcA,KACdlB,IAAYmB,OAAOC,QAAQ,8DAG/B1B,GAAS,EAGX,OA2FEJ,EAAAA,EAAAA,KAAA,OAAKF,UAAW,gDAA+CO,EAAc,gBAAkB,IAAKJ,UACtG8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,sGAAqGG,SAAA,EAClH8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,yCAAwCG,SAAA,EACrDD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8CAA6CG,SAAC,4BAC5D8B,EAAAA,EAAAA,MAAA,UACEC,QAASJ,EACT9B,UAAU,oCAAmCG,SAAA,EAE7CD,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASG,SAAC,WAC1BD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUmC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAclC,UAC5ED,EAAAA,EAAAA,KAAA,QAAMoC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,kCAM3EvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BG,SACtCK,EAAMe,KAAKC,IACVS,EAAAA,EAAAA,MAAA,OAAuBjC,UAAU,iCAAgCG,SAAA,EAC/D8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,mCAAkCG,SAAA,EAC/C8B,EAAAA,EAAAA,MAAA,OAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAA2BG,SAAEqB,EAAKkB,YAC/CT,EAAAA,EAAAA,MAAA,KAAGjC,UAAU,wBAAuBG,SAAA,CAAC,OAAKqB,EAAKC,cAEjDQ,EAAAA,EAAAA,MAAA,QAAMjC,UAAW,YACfwB,EAAKK,YAAcL,EAAKI,YACpB,iBACA,gBACHzB,SAAA,CAAC,SACKqB,EAAKK,WAAaL,EAAKI,mBAIlCK,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,8BAA6BG,SAAA,EAC1C8B,EAAAA,EAAAA,MAAA,OAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mCAAkCG,SAAC,iBACpDD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCG,SAC5CqB,EAAKK,iBAGVI,EAAAA,EAAAA,MAAA,OAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mCAAkCG,SAAC,kBACpDD,EAAAA,EAAAA,KAAA,SACEH,KAAK,SACLmB,MAAOM,EAAKI,YACZ5B,UAAU,uCACV2C,SAAW5B,GAAMD,EAAaC,EAAGS,EAAKC,QACtCR,KAAK,cACL2B,IAAI,cA9BFpB,EAAKC,aAuCnBvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uCAAsCG,UACnD8B,EAAAA,EAAAA,MAAA,SAAOjC,UAAU,sCAAqCG,SAAA,EACpDD,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYG,UAC3B8B,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,aAG/FD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,UAG/FD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,iBAG/FD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,kBAG/FD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,qBAKnGD,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oCAAmCG,SACjDK,EAAMe,KAAKC,IACVS,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDG,SAC9DqB,EAAKC,UAERvB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gEAA+DG,SAC1EqB,EAAKkB,YAERxC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDG,SAC9DqB,EAAKK,cAER3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCG,UACjDD,EAAAA,EAAAA,KAAA,SACEH,KAAK,SACLmB,MAAOM,EAAKI,YACZ5B,UAAU,gCACV2C,SAAW5B,GAAMD,EAAaC,EAAGS,EAAKC,QACtCR,KAAK,cACL2B,IAAI,SAGR1C,EAAAA,EAAAA,KAAA,MAAIF,UAAW,wCACbwB,EAAKK,YAAcL,EAAKI,YACpB,iBACA,gBACHzB,SACAqB,EAAKK,WAAaL,EAAKI,gBAzBnBJ,EAAKC,kBAkCtBQ,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,kIAAiIG,SAAA,EAC9ID,EAAAA,EAAAA,KAAA,UACEgC,QAASJ,EACT9B,UAAU,2IAA0IG,SACrJ,WAGDD,EAAAA,EAAAA,KAAA,UACEgC,QA9OYW,UACP,IACGC,QAAQC,IAAIvC,GAChB,MAAMwC,QAAiBC,EAAAA,EAAMC,IAAI,gCAAgC,CAC7DC,QAAQ9C,EAAM8C,QACdxC,UAAUH,GACZ,CACE4C,QAAS,CACLC,cAAe,UAAUC,aAAaC,QAAQ,cAEtDT,QAAQC,IAAIC,GACbQ,MAAM,gBACNlD,GACH,CAAE,MAAOmD,GACLX,QAAQW,MAAM,6BAA8BA,EAChD,GAgOAC,UAAW9C,EACXZ,UAAW,4GACTY,EAAU,gCAAkC,kCAC3CT,SACJ,wBAOP,CCvQA,MAyTA,EAzTqBwD,KACjB,MAAOC,EAAeC,IAAkBnD,EAAAA,EAAAA,WAAS,IAC1CoD,EAAWC,IAAerD,EAAAA,EAAAA,WAAS,IACpCF,EAAMwD,IAAUtD,EAAAA,EAAAA,UAAS,KACxBuD,EAAOC,IAAWxD,EAAAA,EAAAA,UAAS,KACjCyD,EAAAA,EAAAA,YAAU,KACJpC,OAAOqC,WAAa,KACrBP,GAAe,EACjB,GACA,CAAC9B,OAAOqC,cAEMC,EAAAA,EAAAA,OAElBF,EAAAA,EAAAA,YAAU,KACQtB,WAChB,IACE,MAAMyB,EAAQhB,aAAaC,QAAQ,SAC7BP,QAAiBC,EAAAA,EAAMsB,IAAI,2BAA4B,CAC3DnB,QAAS,CACPC,cAAe,UAAUiB,OAG7BxB,QAAQC,IAAIC,EAASwB,KAAKA,MAC1BN,EAAUlB,EAASwB,KAAKA,KAC1B,CAAE,MAAOC,GACP3B,QAAQW,MAAM,qBAAsBgB,EAAIC,QAC1C,GAGFC,EAAW,GACV,IAEF,MAAMA,EAAY9B,UACf,IACE,MAAMyB,EAAQhB,aAAaC,QAAQ,SAC7BP,QAAiBC,EAAAA,EAAMsB,IAAI,2BAA4B,CAC3DnB,QAAS,CACPC,cAAe,UAAUiB,OAG7BxB,QAAQC,IAAIC,EAASwB,KAAKA,MAC1BN,EAAUlB,EAASwB,KAAKA,KAC1B,CAAE,MAAOC,GACP3B,QAAQW,MAAM,qBAAsBgB,EAAIC,QAC1C,GA4BEE,EAAe/B,UACnB,IACI,MAAMyB,EAAQhB,aAAaC,QAAQ,SAC7BP,QAAiBC,EAAAA,EAAMC,IAAI,iBAAiB,CAC9CC,QAAQnC,GACT,CACDoC,QAAS,CACPC,cAAe,UAAUiB,OAOzB,OAJJxB,QAAQC,IAAIC,GAERQ,MAAM,8BACNmB,GAGN,CAAE,MAAOF,GACP3B,QAAQW,MAAM,yBAA0BgB,EAAIC,QAC9C,GAGEG,EAAkBhC,UAEtB,GADad,OAAOC,QAAQ,6BAM5B,IACE,MAAMgB,QAAiBC,EAAAA,EAAM6B,OAAO,sCAAuC,CACzE9D,GAAGA,GACH,CACAoC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAGvDT,QAAQC,IAAIC,GACRQ,MAAM,uBAEP,CAAE,MAAOC,GACPX,QAAQW,MAAOA,EAAMiB,QACvB,CAAC,QAGCC,GACF,GAQF,OACE1C,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,yBAAwBG,SAAA,EACrCD,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,CAACnB,cAAeA,EAAeC,eAAgBA,KACtD5B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,QAAOG,SAAA,EAEpBD,EAAAA,EAAAA,KAAC8E,EAAAA,EAAO,CAACpB,cAAeA,KAGvB3B,EAAAA,EAAAA,MAAA,OAAKjC,UAAW,oCAAoCG,SAAA,EACnD8B,EAAAA,EAAAA,MAAA,UAAQjC,UAAU,+EAA8EG,SAAA,EAC9FD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+DAA8DG,UAC3ED,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CG,SAAC,uBAI5D8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,4GAA2GG,SAAA,EACnI8B,EAAAA,EAAAA,MAACgD,EAAAA,GAAO,CAACC,GAAG,aAAalF,UAAU,mEAAkEG,SAAA,EAC5ED,EAAAA,EAAAA,KAACiF,EAAAA,IAAe,CAACnF,UAAU,2CAA2C,YAExEE,EAAAA,EAAAA,KAAC+E,EAAAA,GAAO,CAACC,GAAG,gBAAgBlF,UAAU,mEAAkEG,SAAC,mBAGzGD,EAAAA,EAAAA,KAAC+E,EAAAA,GAAO,CAACC,GAAG,eAAelF,UAAU,iDAAgDG,SAAC,4BAOpG2D,IAAc5D,EAAAA,EAAAA,KAACE,EAAY,CAAEC,MAAOG,EAAOF,QAASA,KAAKyD,GAAc,GAAOY,GAAW,EAAGpE,YAAaqD,KAI3G1D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oEAAmEG,UA2DrF8B,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,8DAA6DG,SAAA,EAEjF8B,EAAAA,EAAAA,MAAA,SAAOjC,UAAU,uCAAsCG,SAAA,EACrDD,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYG,UAC3B8B,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,cAC/FD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,iBAC/FD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iFAAgFG,SAAC,kBAGnGD,EAAAA,EAAAA,KAAA,SAAOF,UAAU,oDAAmDG,SACjE8D,EAAO1C,KAAKlB,IAAK,IAAA+E,EAAA,OAChBnD,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gEAA+DG,SAAEE,EAAM8C,WACrFlB,EAAAA,EAAAA,MAAA,MAAIjC,UAAU,oDAAmDG,SAAA,EAAiB,QAAfiF,EAAA/E,EAAMM,iBAAS,IAAAyE,OAAA,EAAfA,EAAiBC,SAAU,EAAE,aAChGpD,EAAAA,EAAAA,MAAA,MAAIjC,UAAU,4DAA2DG,SAAA,EACvED,EAAAA,EAAAA,KAAA,UACEF,UAAU,wCACVkC,QAASA,KACP8B,EAAS3D,GACT0D,GAAc,EAAK,EACnB5D,SACH,UAGDD,EAAAA,EAAAA,KAAA,UACEF,UAAU,sCACVkC,QAASA,IAAM0C,EAAevE,EAAM8C,SAAShD,SAC9C,SAGDD,EAAAA,EAAAA,KAAA,UACEF,UAAU,kCACVkC,QAASA,IAAM2C,EAAkBxE,EAAM8C,SAAShD,SACjD,gBAtBIE,EAAM8C,QA0BV,SAORc,EAAO1C,KAAKlB,IAAK,IAAAiF,EAAA,OAChBrD,EAAAA,EAAAA,MAAA,OAAyBjC,UAAU,2DAA0DG,SAAA,EAC3FD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCG,SAAC,eACxDD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDG,SAAEE,EAAM8C,WAE7ElB,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,6BAA4BG,SAAA,CAAC,iBACb,QAAfmF,EAAAjF,EAAMM,iBAAS,IAAA2E,OAAA,EAAfA,EAAiBD,SAAU,MAG3CpD,EAAAA,EAAAA,MAAA,OAAKjC,UAAU,+BAA8BG,SAAA,EAC3CD,EAAAA,EAAAA,KAAA,UACEF,UAAU,gDACVkC,QAASA,KACP8B,EAAS3D,GACT0D,GAAc,EAAK,EACnB5D,SACH,UAGDD,EAAAA,EAAAA,KAAA,UACEF,UAAU,8CACVkC,QAASA,IAAM0C,EAAevE,EAAM8C,SAAShD,SAC9C,SAGDD,EAAAA,EAAAA,KAAA,UACEF,UAAU,0CACVkC,QAASA,IAAM2C,EAAkBxE,EAAM8C,SAAShD,SACjD,gBA3BKE,EAAM8C,QA+BV,iBAeA,C","sources":["components/contact/Button.jsx","components/Auditor/ItemsCompare.jsx","components/Auditor/OpenAuditList.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from \"axios\"\r\nexport default function ItemsCompare({ audit, onClose, sidebarOpen = true }) {\r\n  const [items, setUpdateItems] = useState(audit.finalUnit);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  const handleChange = (e, id) => {\r\n    const { name, value } = e.target;\r\n    const numericValue = Number(value);\r\n\r\n    const updated = items.map((item) => {\r\n      if (item.itemId === id) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [name]: numericValue,\r\n        };\r\n        updatedItem.difference=updatedItem.expectedQty-updatedItem.scannedQty\r\n        return updatedItem;\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setUpdateItems(updated);\r\n    setIsDirty(true);\r\n  };\r\n\r\n  const handleSave =async () => {\r\n             try {\r\n                console.log(items)\r\n            const response = await axios.put('/api/audit/update-quantity-db',{\r\n                auditId:audit.auditId,\r\n                finalUnit:items\r\n            },{\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                  }});\r\n            console.log(response);\r\n           alert(\"Changes Save\")\r\n           onClose();\r\n        } catch (error) {\r\n            console.error(\"Error fetching warehouses:\", error);\r\n        }   \r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (isDirty && !window.confirm('You have unsaved changes. Are you sure you want to close?')) {\r\n      return;\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    // <div className={`fixed inset-0 w-full h-full overflow-y-auto ${sidebarOpen && \"pl-10\"}`}>\r\n    //   <div className=\"relative w-3/4 p-5 mx-auto bg-gray-300 border rounded-md shadow-lg top-20\">\r\n    //     <div className=\"flex items-center justify-between mb-4\">\r\n    //       <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Audit Items Comparison</h3>\r\n    //       <button\r\n    //         onClick={handleClose}\r\n    //         className=\"text-gray-400 hover:text-gray-500\"\r\n    //       >\r\n    //         <span className=\"sr-only\">Close</span>\r\n    //         <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    //           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n    //         </svg>\r\n    //       </button>\r\n    //     </div>\r\n\r\n    //     <div className=\"mb-4 overflow-x-auto\">\r\n    //       <table className=\"min-w-full divide-y divide-gray-200\">\r\n    //         <thead className=\"bg-gray-50\">\r\n    //           <tr>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Item ID\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Name\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Scanned Qty\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Expected Qty\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Difference\r\n    //             </th>\r\n    //           </tr>\r\n    //         </thead>\r\n    //         <tbody className=\"bg-white divide-y divide-gray-200\">\r\n    //           {items.map((item) => (\r\n    //             <tr key={item.itemId}>\r\n    //               <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n    //                 {item.itemId}\r\n    //               </td>\r\n    //               <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">\r\n    //                 {item.itemName}\r\n    //               </td>\r\n    //               <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n    //                 {item.scannedQty}\r\n    //               </td>\r\n    //               <td className=\"px-6 py-4 text-sm whitespace-nowrap\">\r\n    //                 <input \r\n    //                   type=\"number\" \r\n    //                   value={item.expectedQty}  \r\n    //                   className='w-20 pl-2 border-2 rounded-md' \r\n    //                   onChange={(e) => handleChange(e, item.itemId)} \r\n    //                   name=\"expectedQty\"\r\n    //                   min=\"0\"\r\n    //                 />\r\n    //               </td>\r\n    //               <td className={`px-6 py-4 whitespace-nowrap text-sm ${\r\n    //                 item.scannedQty >= item.expectedQty \r\n    //                   ? 'text-green-600' \r\n    //                   : 'text-red-600'\r\n    //               }`}>\r\n    //                 {item.scannedQty - item.expectedQty}\r\n    //               </td>\r\n    //             </tr>\r\n    //           ))}\r\n    //         </tbody>\r\n    //       </table>\r\n    //     </div>\r\n\r\n    //     <div className=\"flex justify-end pt-4 space-x-4 border-t border-gray-200\">\r\n    //       <button\r\n    //         onClick={handleClose}\r\n    //         className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n    //       >\r\n    //         Close\r\n    //       </button>\r\n    //       <button\r\n    //         onClick={handleSave}\r\n    //         disabled={!isDirty}\r\n    //         className={`px-4 py-2 text-sm font-medium text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n    //           isDirty ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-400 cursor-not-allowed'\r\n    //         }`}\r\n    //       >\r\n    //         Save Changes\r\n    //       </button>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <div className={`fixed inset-0 w-full h-full overflow-y-auto ${sidebarOpen ? \"pl-0 lg:pl-10\" : \"\"}`}>\r\n  <div className=\"relative w-full p-4 mx-auto bg-gray-300 border rounded-md shadow-lg lg:w-3/4 lg:p-5 top-4 lg:top-20\">\r\n    <div className=\"flex items-center justify-between mb-4\">\r\n      <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Audit Items Comparison</h3>\r\n      <button\r\n        onClick={handleClose}\r\n        className=\"text-gray-400 hover:text-gray-500\"\r\n      >\r\n        <span className=\"sr-only\">Close</span>\r\n        <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    {/* Mobile View (Cards) */}\r\n    <div className=\"mb-4 space-y-3 lg:hidden\">\r\n      {items.map((item) => (\r\n        <div key={item.itemId} className=\"p-3 bg-white rounded-lg shadow\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">{item.itemName}</p>\r\n              <p className=\"text-xs text-gray-500\">ID: {item.itemId}</p>\r\n            </div>\r\n            <span className={`text-sm ${\r\n              item.scannedQty >= item.expectedQty \r\n                ? 'text-green-600' \r\n                : 'text-red-600'\r\n            }`}>\r\n              Diff: {item.scannedQty - item.expectedQty}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-2 gap-3 mt-3\">\r\n            <div>\r\n              <label className=\"block mb-1 text-xs text-gray-500\">Scanned Qty</label>\r\n              <div className=\"p-2 text-sm rounded bg-gray-50\">\r\n                {item.scannedQty}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block mb-1 text-xs text-gray-500\">Expected Qty</label>\r\n              <input \r\n                type=\"number\" \r\n                value={item.expectedQty}  \r\n                className=\"w-full p-2 text-sm border rounded-md\" \r\n                onChange={(e) => handleChange(e, item.itemId)} \r\n                name=\"expectedQty\"\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n    {/* Desktop View (Table) */}\r\n    <div className=\"hidden mb-4 overflow-x-auto lg:block\">\r\n      <table className=\"min-w-full divide-y divide-gray-200\">\r\n        <thead className=\"bg-gray-50\">\r\n          <tr>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Item ID\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Name\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Scanned Qty\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Expected Qty\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Difference\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n          {items.map((item) => (\r\n            <tr key={item.itemId}>\r\n              <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n                {item.itemId}\r\n              </td>\r\n              <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">\r\n                {item.itemName}\r\n              </td>\r\n              <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n                {item.scannedQty}\r\n              </td>\r\n              <td className=\"px-6 py-4 text-sm whitespace-nowrap\">\r\n                <input \r\n                  type=\"number\" \r\n                  value={item.expectedQty}  \r\n                  className='w-20 pl-2 border-2 rounded-md' \r\n                  onChange={(e) => handleChange(e, item.itemId)} \r\n                  name=\"expectedQty\"\r\n                  min=\"0\"\r\n                />\r\n              </td>\r\n              <td className={`px-6 py-4 whitespace-nowrap text-sm ${\r\n                item.scannedQty >= item.expectedQty \r\n                  ? 'text-green-600' \r\n                  : 'text-red-600'\r\n              }`}>\r\n                {item.scannedQty - item.expectedQty}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    {/* Action Buttons */}\r\n    <div className=\"flex flex-col-reverse justify-end pt-4 space-y-3 space-y-reverse border-t border-gray-200 sm:flex-row sm:space-y-0 sm:space-x-4\">\r\n      <button\r\n        onClick={handleClose}\r\n        className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n      >\r\n        Close\r\n      </button>\r\n      <button\r\n        onClick={handleSave}\r\n        disabled={!isDirty}\r\n        className={`px-4 py-2 text-sm font-medium text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n          isDirty ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-400 cursor-not-allowed'\r\n        }`}\r\n      >\r\n        Save Changes\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n  );\r\n}","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { useState,useEffect } from 'react'\r\nimport axios, { all } from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from '../Sidebar.jsx'\r\nimport Button from '../contact/Button.jsx'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FaTachometerAlt } from 'react-icons/fa'\r\nimport { FiEdit, FiTrash2 } from 'react-icons/fi'\r\nimport ItemsCompare from './ItemsCompare.jsx'\r\n\r\nconst  OpenAuditList=()=> {\r\n    const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n    const [comparison,setComparison]=useState(false)\r\n    const[items,setItems]=useState([])\r\n    const [audits,setAudits]=useState([])\r\n     useEffect(()=>{\r\n        if(window.innerWidth < 768){\r\n          setSidebarOpen(false)\r\n        }\r\n      },[window.innerWidth])\r\n\r\n      const  navigate=useNavigate();\r\n      \r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(\"/api/audit/compare-items\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        });\r\n        console.log(response.data.data);\r\n        setAudits(response.data.data);\r\n      } catch (err) {\r\n        console.error(\"Fetch audit error:\", err.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n \r\n   const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(\"/api/audit/compare-items\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        });\r\n        console.log(response.data.data);\r\n        setAudits(response.data.data);\r\n      } catch (err) {\r\n        console.error(\"Fetch audit error:\", err.message);\r\n      }\r\n    };\r\n    \r\n  const handleDelete = async (id) => {\r\n    const conf= window.confirm(\"Do u want to delete customer\")\r\n    if(!conf){\r\n      return ;\r\n    }\r\n  \r\n   \r\n    try {\r\n     const response = await axios.delete(`/api/audit/delete/${id}`,{\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n    \r\n     alert(\"Deleted Successfully\")\r\n    \r\n    } catch (error) {\r\n      console.error( error.message);\r\n    }\r\n    finally{\r\n\r\n      fetchData()\r\n    }\r\n  };\r\n\r\n  const handleAuditEnd=async(id)=>{\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.put(\"/api/audit/end\",{\r\n            auditId:id\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        });\r\n        console.log(response)\r\n            \r\n            alert(\"Audit End sucessfully\")\r\n            fetchData();\r\n            return;\r\n        \r\n      } catch (err) {\r\n        console.error(\"error in  audit  end :\", err.message);\r\n      }\r\n  }\r\n\r\n  const handleDeleteAudit=async(id)=>{\r\n     const conf= window.confirm(\"Do u want to delete audit\")\r\n    if(!conf){\r\n      return ;\r\n    }\r\n  \r\n   \r\n    try {\r\n      const response = await axios.delete(`https://localhost:5000/audit/delete`, {\r\n        id:id\r\n      },{\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n console.log(response)\r\n     alert(\"Deleted Successfully\")\r\n    \r\n    } catch (error) {\r\n      console.error( error.message);\r\n    }\r\n    finally{\r\n\r\n      fetchData()\r\n    }\r\n  }\r\n\r\n\r\n\r\n    \r\n     \r\n     \r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex \">\r\n\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n          \r\n           {/* Content */}\r\n         <div className={`w-full flex flex-col p-2 md:p-2  `}>\r\n          <header className=\"flex flex-col items-center justify-between p-4 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Open Audit List</h1>\r\n              {/* <span className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Banner</span> */}\r\n            </div>\r\n\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n   <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                            <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                          </NavLink>     \r\n                          <NavLink to=\"/banners/view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Start Audit\r\n                          </NavLink>    \r\n                          <NavLink to=\"/banners/add\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Open Audit List\r\n                          </NavLink>\r\n              \r\n            </nav>\r\n          </header>\r\n           {\r\n            comparison && <ItemsCompare  audit={items} onClose={()=>{setComparison(false);fetchData()}} sidebarOpen={isSidebarOpen}/>\r\n            // <AuditComparison auditItems={items} onClose={()=>setComparison(false)}/>\r\n          } \r\n\r\n          <div className=\"p-4 mt-1 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n            \r\n          {/* <div className=\"overflow-x-auto border border-gray-200 rounded-lg shadow-sm\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\" bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n                  Audit ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n                  Total Items\r\n                </th>\r\n                <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n           <tbody className=\"bg-white divide-y divide-gray-200\">\r\n  {audits.map((audit) => (\r\n    <tr key={audit.auditId}>\r\n      <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">\r\n        {audit.auditId}\r\n      </td>\r\n      <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n        {audit.finalUnit?.length || 0} items\r\n      </td>\r\n      <td className=\"px-6 py-4 text-sm font-medium whitespace-nowrap\">\r\n        <button \r\n          className=\"mr-4 text-indigo-600 hover:text-indigo-900\"\r\n          onClick={() => {\r\n            setItems(audit)\r\n            setComparison(true)\r\n          }}\r\n        >\r\n          View Comparison\r\n        </button>\r\n         <button \r\n    className=\"mr-4 text-green-600 hover:text-green-900\"\r\n    onClick={() => handleAuditEnd(audit.auditId)}  // <-- Add handler\r\n  >\r\n    End Audit\r\n  </button>\r\n\r\n        <button \r\n          className=\"text-red-600 hover:text-red-900\"\r\n        //   onClick={() => handleDeleteAudit(audit.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n          </table>\r\n          \r\n        \r\n         \r\n        </div> */}\r\n        \r\n       <div className=\"overflow-x-auto border border-gray-200 rounded-lg shadow-sm\">\r\n  {/* Desktop Table */}\r\n  <table className=\"min-w-full divide-y divide-gray-200 \">\r\n    <thead className=\"bg-gray-50\">\r\n      <tr>\r\n        <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Audit ID</th>\r\n        <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Total Items</th>\r\n        <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody className=\"hidden bg-white divide-y divide-gray-200 md:table\">\r\n      {audits.map((audit) => (\r\n        <tr key={audit.auditId}>\r\n          <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">{audit.auditId}</td>\r\n          <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">{audit.finalUnit?.length || 0} items</td>\r\n          <td className=\"px-6 py-4 space-x-4 text-sm font-medium whitespace-nowrap\">\r\n            <button \r\n              className=\"text-indigo-600 hover:text-indigo-900\"\r\n              onClick={() => {\r\n                setItems(audit)\r\n                setComparison(true)\r\n              }}\r\n            >\r\n              View\r\n            </button>\r\n            <button \r\n              className=\"text-green-600 hover:text-green-900\"\r\n              onClick={() => handleAuditEnd(audit.auditId)}\r\n            >\r\n              End\r\n            </button>\r\n            <button \r\n              className=\"text-red-600 hover:text-red-900\"\r\n              onClick={() => handleDeleteAudit(audit.auditId)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n\r\n  {/* Mobile Cards */}\r\n\r\n    {audits.map((audit) => (\r\n      <div key={audit.auditId} className=\"p-4 bg-white border border-gray-200 rounded-lg shadow-sm\">\r\n        <div className=\"mb-2 text-sm font-medium text-gray-700\">Audit ID:</div>\r\n        <div className=\"mb-1 text-base font-semibold text-gray-900 break-all\">{audit.auditId}</div>\r\n\r\n        <div className=\"mb-3 text-sm text-gray-600\">\r\n          Total Items: {audit.finalUnit?.length || 0}\r\n        </div>\r\n\r\n        <div className=\"flex justify-start space-x-4\">\r\n          <button \r\n            className=\"text-sm text-indigo-600 hover:text-indigo-900\"\r\n            onClick={() => {\r\n              setItems(audit)\r\n              setComparison(true)\r\n            }}\r\n          >\r\n            View\r\n          </button>\r\n          <button \r\n            className=\"text-sm text-green-600 hover:text-green-900\"\r\n            onClick={() => handleAuditEnd(audit.auditId)}\r\n          >\r\n            End\r\n          </button>\r\n          <button \r\n            className=\"text-sm text-red-600 hover:text-red-900\"\r\n            onClick={() => handleDeleteAudit(audit.auditId)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ))}\r\n    \r\n</div>\r\n\r\n \r\n\r\n                       \r\n         \r\n                \r\n                 \r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default OpenAuditList\r\n"],"names":["Button","_ref","text","type","className","props","_jsx","children","ItemsCompare","audit","onClose","sidebarOpen","items","setUpdateItems","useState","finalUnit","isDirty","setIsDirty","handleChange","e","id","name","value","target","numericValue","Number","updated","map","item","itemId","updatedItem","difference","expectedQty","scannedQty","handleClose","window","confirm","_jsxs","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","itemName","onChange","min","async","console","log","response","axios","put","auditId","headers","Authorization","localStorage","getItem","alert","error","disabled","OpenAuditList","isSidebarOpen","setSidebarOpen","comparison","setComparison","setItems","audits","setAudits","useEffect","innerWidth","useNavigate","token","get","data","err","message","fetchData","handleAuditEnd","handleDeleteAudit","delete","Navbar","Sidebar","NavLink","to","FaTachometerAlt","_audit$finalUnit","length","_audit$finalUnit2"],"sourceRoot":""}