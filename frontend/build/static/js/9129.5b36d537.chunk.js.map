{"version":3,"file":"static/js/9129.5b36d537.chunk.js","mappings":"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","sources":["Loading.jsx","components/Reports/ItemCompare.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React ,{useState,useEffect,useRef, use}from 'react'\r\nimport Sidebar from '../Sidebar';\r\nimport Navbar from '../Navbar';\r\nimport { Navigate, NavLink, useNavigate } from 'react-router-dom';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport { CameraIcon } from \"@heroicons/react/solid\";\r\nimport Select from 'react-select'\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport autoTable from 'jspdf-autotable';\r\n\r\nexport default function ItemCompare() {\r\n  const [showExportDropdown, setShowExportDropdown] = useState(false)\r\n   const[isSidebarOpen,setSidebarOpen]=useState(true)\r\n   const[loading,setLoading]=useState(true)\r\n   const[allItems,setAllItems]=useState([])\r\n   const[options,setOptions]=useState({\r\n    warehouses:[],\r\n   })\r\n   useEffect(()=>{\r\n    if(window.innerWidth<768){\r\n      setSidebarOpen(false)\r\n    }\r\n   },[])\r\n   const Navigate=useNavigate();\r\n   const[SelectedWarehouse1,setSelectedWarehouse1]=useState(\"\")\r\n   const[SelectedWarehouse2,setSelectedWarehouse2]=useState(\"\")\r\n   const[resultItems,setResultItems]=useState([])\r\n   const[view,setView]=useState(false)\r\n   const fetchWarehouses=async()=>{\r\n    try {\r\n      setLoading(true)\r\n      const response = await axios.get('api/warehouses', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     \r\n  \r\n     const warehouses =response.data.data.map((warehouse)=>({\r\n      label:warehouse.warehouseName,\r\n      value:warehouse._id\r\n     }))\r\n       setOptions((prev)=>({\r\n        ...prev,\r\n        warehouses:warehouses\r\n       }))\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n   \r\n\r\n   \r\n   const fetchItems=async()=>{\r\n    try {\r\n      setLoading(true)\r\n      const response = await axios.get('api/items', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n     \r\n   setAllItems(response.data.data)\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   }\r\n   \r\n   useEffect(()=>{\r\n    fetchWarehouses();\r\n    fetchItems();\r\n   },[])\r\n\r\n   \r\n   const filteredItems1 = allItems.filter((transfer) => {\r\n    const {\r\n      warehouse,\r\n    } = transfer;\r\n    \r\n    // Warehouse match\r\n    const warehouseMatch =  \r\n      (warehouse && warehouse._id === SelectedWarehouse1);\r\n    \r\n   \r\n      \r\n    return warehouseMatch ;\r\n  });\r\n\r\n\r\n  const filteredItems2 = allItems.filter((transfer) => {\r\n    const {\r\n      warehouse,\r\n    } = transfer;\r\n    \r\n    // Warehouse match\r\n    const warehouseMatch =  \r\n      (warehouse && warehouse._id === SelectedWarehouse2);\r\n    \r\n   \r\n      \r\n    return warehouseMatch ;\r\n  });\r\n\r\n  \r\n  const getNonCommonItems = (filteredItems1, filteredItems2) => {\r\n    // Get IDs from both arrays\r\n    const ids1 = new Set(filteredItems1.map(item => item._id.toString()));\r\n    const ids2 = new Set(filteredItems2.map(item => item._id.toString()));\r\n  \r\n    // Items in array1 but not in array2\r\n    const uniqueToArray1 = filteredItems1.filter(item => \r\n      !ids2.has(item._id.toString())\r\n    );\r\n  \r\n  \r\n  \r\n    // Combine both sets of unique items\r\n    return uniqueToArray1;\r\n  };\r\n  \r\n  \r\n  const handleCompare=(e)=>{\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true)\r\n      setView(false)\r\n      if(!setSelectedWarehouse1 || !SelectedWarehouse2){\r\n        alert(\"one of the warehouse is not selected\")\r\n        return;\r\n      }\r\n      setResultItems(getNonCommonItems(filteredItems1,filteredItems2))\r\n      if(getNonCommonItems(filteredItems1,filteredItems2) ==[]) {\r\n            alert(\"No item is unique\")\r\n            return;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in comparing\",error.message)\r\n    }\r\n    finally{\r\n      \r\n      if(setSelectedWarehouse1 && SelectedWarehouse2){\r\n         setView(true)\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(()=>console.log(filteredItems1),[filteredItems1])\r\n  useEffect(()=>console.log(filteredItems2),[filteredItems2])\r\n \r\n \r\n  const exportToExcel = () => {\r\n    // Create workbook\r\n    const wb = XLSX.utils.book_new();\r\n    \r\n    // Create worksheet\r\n    const ws = XLSX.utils.aoa_to_sheet([]);\r\n    \r\n    // Add headers for Warehouse 1\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"Warehouse 1 Items\"]], { origin: -1 });\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"#\", \"Item Name\", \"Quantity\"]], { origin: -1 });\r\n    \r\n    // Add Warehouse 1 data\r\n    filteredItems1.forEach((item, index) => {\r\n      XLSX.utils.sheet_add_aoa(ws, [[index + 1, item.itemName, item.openingStock]], { origin: -1 });\r\n    });\r\n    \r\n    // Add empty row\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"\"]], { origin: -1 });\r\n    \r\n    // Add headers for Warehouse 2\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"Warehouse 2 Items\"]], { origin: -1 });\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"#\", \"Item Name\", \"Quantity\"]], { origin: -1 });\r\n    \r\n    // Add Warehouse 2 data\r\n    filteredItems2.forEach((item, index) => {\r\n      XLSX.utils.sheet_add_aoa(ws, [[index + 1, item.itemName, item.openingStock]], { origin: -1 });\r\n    });\r\n    \r\n    // Add empty row\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"\"]], { origin: -1 });\r\n    \r\n    // Add headers for Unique Items\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"Unique Items\"]], { origin: -1 });\r\n    XLSX.utils.sheet_add_aoa(ws, [[\"#\", \"Item Name\", \"Warehouse\", \"Quantity\"]], { origin: -1 });\r\n    \r\n    // Add Unique Items data\r\n    resultItems.forEach((item, index) => {\r\n      XLSX.utils.sheet_add_aoa(ws, [[index + 1, item.itemName, item.warehouse?.warehouseName, item.openingStock]], { origin: -1 });\r\n    });\r\n    \r\n    // Add worksheet to workbook\r\n    XLSX.utils.book_append_sheet(wb, ws, \"InventoryData\");\r\n    \r\n    // Export the file\r\n    XLSX.writeFile(wb, \"Inventory_Report.xlsx\");\r\n  };\r\n  \r\n\r\n  // PDF Export\r\nconst exportToPDF = () => {\r\n  const doc = new jsPDF();\r\n  let yPos = 10;\r\n\r\n  // Add title\r\n  doc.setFontSize(18);\r\n  doc.text('Inventory Report', 105, yPos, { align: 'center' });\r\n  yPos += 15;\r\n\r\n  // Warehouse 1 Table\r\n  doc.setFontSize(14);\r\n  doc.text('Warehouse 1 Items', 14, yPos);\r\n  yPos += 8;\r\n  \r\n  autoTable(doc,{\r\n    startY: yPos,\r\n    head: [['#', 'Item Name', 'Quantity']],\r\n    body: filteredItems1.map((item, index) => [index + 1, item.itemName, item.openingStock]),\r\n    margin: { top: 10 },\r\n    styles: { fontSize: 10 }\r\n  });\r\n  yPos = doc.lastAutoTable.finalY + 10;\r\n\r\n  // Warehouse 2 Table\r\n  doc.setFontSize(14);\r\n  doc.text('Warehouse 2 Items', 14, yPos);\r\n  yPos += 8;\r\n  \r\n  autoTable(doc,{\r\n    startY: yPos,\r\n    head: [['#', 'Item Name', 'Quantity']],\r\n    body: filteredItems2.map((item, index) => [index + 1, item.itemName, item.openingStock]),\r\n    margin: { top: 10 },\r\n    styles: { fontSize: 10 }\r\n  });\r\n  yPos = doc.lastAutoTable.finalY + 10;\r\n\r\n  // Unique Items Table\r\n  doc.setFontSize(14);\r\n  doc.text('Unique Items', 14, yPos);\r\n  yPos += 8;\r\n  \r\n  autoTable(doc,{\r\n    startY: yPos,\r\n    head: [['#', 'Item Name', 'Warehouse', 'Quantity']],\r\n    body: resultItems.map((item, index) => [\r\n      index + 1, \r\n      item.itemName, \r\n      item.warehouse?.warehouseName || '', \r\n      item.openingStock\r\n    ]),\r\n    margin: { top: 10 },\r\n    styles: { fontSize: 10 }\r\n  });\r\n\r\n  // Save the PDF\r\n  doc.save('Inventory_Report.pdf');\r\n};\r\n\r\n\r\n  \r\n    return (\r\n      <div className=\"flex flex-col h-screen\">\r\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n        <div className=\"flex flex-grow\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n    \r\n          {/* Main Content */}\r\n          <div className=\"relative flex flex-col flex-grow w-full px-4 py-6 bg-gray-100\">\r\n            {/* Header */}\r\n            <header className=\"flex flex-col items-center justify-between sm:flex-row\">\r\n              <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n                <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Item Compare</h1>\r\n              </div>\r\n              <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n                <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                  <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                </NavLink>\r\n                \r\n                <NavLink to=\"/reports/sale-item\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                  &gt; sale item Report\r\n                </NavLink>\r\n              </nav>\r\n            </header>\r\n            \r\n            <div className='flex flex-col w-full mx-auto mt-4 bg-white border-t-4 rounded-lg shadow-md border-cyan-600'>\r\n              <div className='w-full h-auto px-2 border-b-2 border-gray-200'>\r\n                <h4 className='text-gray-700'>Please Enter Valid Information</h4>\r\n              </div>\r\n              <div className='py-4 '>\r\n\r\n\r\n                {/* //first row */}\r\n                <div className='flex flex-col w-full gap-4 px-4 mb-4 md:flex-row md:gap-5'>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">Warehouse1</label>\r\n                    <Select className='w-full' options={options.warehouses} onChange={(option)=>{setView(false);setSelectedWarehouse1(option.value);setResultItems([])}} value={options.warehouses.find(option => option.value===SelectedWarehouse1)}/>\r\n                  </div>\r\n                  <div className='flex flex-col w-full'>\r\n                    <label htmlFor=\"\">Warehouse 2</label>\r\n                    <Select className='w-full' options={options.warehouses} onChange={(option)=>{setView(false);setSelectedWarehouse2(option.value);setResultItems([])}} value={options.warehouses.find(option => option.value===SelectedWarehouse2)}/>\r\n                  </div>\r\n                </div>\r\n                <div className='flex flex-col justify-around w-full gap-4 px-2 md:justify-center md:flex-row'>\r\n   <button \r\n    className='px-6 py-2 text-white transition-colors duration-300 bg-blue-600 rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50'\r\n    onClick={handleCompare} disabled={!SelectedWarehouse1 && !SelectedWarehouse2}\r\n    type=\"button\"\r\n  >\r\n    Compare Warehouses\r\n  </button>\r\n  \r\n  <button \r\n    className='px-6 py-2 text-white transition-colors duration-300 bg-gray-600 rounded-lg shadow-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50'\r\n    onClick={() => Navigate(\"/dashboard\")} \r\n    type=\"button\"\r\n  >\r\n    Back to Dashboard\r\n  </button>\r\n</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='flex flex-col w-full mt-5 border-t-4 border-gray-400'>\r\n              \r\n\r\n            \r\n             <div className='flex w-full px-2 py-2 bg-white'>\r\n  <div className='w-full'>\r\n    <h4 className='text-gray-700'>Records Table</h4>\r\n  </div>\r\n  <div className=\"relative\">\r\n    <button \r\n      onClick={() => setShowExportDropdown(!showExportDropdown)}\r\n      className=\"flex items-center px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600\"\r\n    >\r\n      <FaBars className=\"mr-2\" />\r\n      Export\r\n      <span className=\"ml-2 text-sm\">▼</span>\r\n    </button>\r\n    \r\n    {/* Dropdown menu - now controlled by state */}\r\n    {showExportDropdown && (\r\n      <div \r\n        className=\"absolute right-0 z-10 w-40 mt-2 bg-white rounded-md shadow-lg\"\r\n        onMouseLeave={() => setShowExportDropdown(false)}\r\n      >\r\n        <div className=\"py-1\">\r\n          <button \r\n            onClick={() => {\r\n              exportToExcel();\r\n              setShowExportDropdown(false);\r\n            }}\r\n            className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            Excel\r\n          </button>\r\n          <button \r\n            onClick={() => {\r\n              exportToPDF();\r\n              setShowExportDropdown(false);\r\n            }}\r\n            className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n            </svg>\r\n            PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n</div>\r\n{/* second row */}\r\n               <div className='flex flex-col justify-between w-full gap-2 px-2 py-2 overflow-x-auto md:flex-row'>\r\n                \r\n                <div className='w-full h-auto bg-white border-2'>\r\n                  <h5 className='text-center'>Item in Warehouse1</h5>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">#</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                       {view &&\r\n                        filteredItems1.length>0 && filteredItems1.map((item,index)=>(\r\n                          <tr key={index} className='bg-gray-100 border-2 border-black'>\r\n                            <td className=\"px-4 py-2\">{index+1}</td>\r\n                            <td className=\"px-4 py-2\">{item.itemName}</td>\r\n                            <td className=\"px-4 py-2\">{item.openingStock}</td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                      { view &&\r\n                        filteredItems1.length===0  && view && (\r\n                          <tr className='bg-gray-100 border-2 border-black' >\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='10'><h5>No Data Found</h5></td>\r\n                        </tr>\r\n                        )\r\n                      }\r\n                     </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n                \r\n                <div className='w-full h-auto bg-white border-2'>\r\n                  <h5 className='text-center'>Item in Warehouse2</h5>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">#</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                       {view &&\r\n                        filteredItems2.length>0 && filteredItems2.map((item,index)=>(\r\n                          <tr key={index} className='bg-gray-100 border-2 border-black'>\r\n                            <td className=\"px-4 py-2\">{index+1}</td>\r\n                            <td className=\"px-4 py-2\">{item.itemName}</td>\r\n                            <td className=\"px-4 py-2\">{item.openingStock}</td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                      { view &&\r\n                        filteredItems2.length===0 && view && (\r\n                          <tr className='bg-gray-100 border-2 border-black' >\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='10'><h5>No Data Found</h5></td>\r\n                        </tr>\r\n                        )\r\n                      }\r\n                     </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n\r\n                <div className='w-full overflow-x-scroll bg-white border-2'>\r\n                  <h5 className='text-center'>Item Unique</h5>\r\n                  <table className=\"min-w-full gap-2 border-separate\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">#</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Item Name</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Warehouse</th>\r\n                        <th className=\"px-4 py-2 text-sm text-white bg-blue-500\">Quantity</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* Add your data rows here */}\r\n                     \r\n                       {\r\n                        resultItems.length>0 && resultItems.map((item,index)=>(\r\n                          <tr key={index} className='bg-gray-100 border-2 border-black'>\r\n                            <td className=\"px-4 py-2\">{index+1}</td>\r\n                            <td className=\"px-4 py-2\">{item.itemName}</td>\r\n                            <td className=\"px-4 py-2\">{item.warehouse?.warehouseName}</td>\r\n                            <td className=\"px-4 py-2\">{item.openingStock}</td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                      {view &&\r\n                        resultItems.length===0 &&(\r\n                          <tr  className='bg-gray-100 border-2 border-black'>\r\n                          <td className=\"px-4 py-2 text-center\" colSpan='4' >No item is unique</td>\r\n                         \r\n                        </tr>\r\n                        )\r\n                      }\r\n                     \r\n                     </tbody>\r\n                  </table>\r\n\r\n                </div>\r\n                \r\n\r\n              </div> \r\n              \r\n              \r\n            </div>\r\n            \r\n    \r\n        \r\n           \r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","ItemCompare","showExportDropdown","setShowExportDropdown","loading","setLoading","allItems","setAllItems","options","setOptions","warehouses","useEffect","window","innerWidth","Navigate","useNavigate","SelectedWarehouse1","setSelectedWarehouse1","SelectedWarehouse2","setSelectedWarehouse2","resultItems","setResultItems","view","setView","async","axios","get","headers","Authorization","localStorage","getItem","data","map","warehouse","label","warehouseName","value","_id","prev","err","console","log","message","fetchWarehouses","response","fetchItems","filteredItems1","filter","transfer","filteredItems2","getNonCommonItems","Set","item","toString","ids2","has","NavLink","to","FaTachometerAlt","htmlFor","Select","onChange","option","find","onClick","e","preventDefault","alert","error","disabled","type","FaBars","onMouseLeave","exportToExcel","wb","XLSX","book_new","ws","aoa_to_sheet","sheet_add_aoa","origin","forEach","index","itemName","openingStock","_item$warehouse","book_append_sheet","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","exportToPDF","doc","jsPDF","yPos","setFontSize","text","align","autoTable","startY","head","body","margin","top","styles","fontSize","lastAutoTable","finalY","_item$warehouse2","save","length","colSpan","_item$warehouse3"],"sourceRoot":""}