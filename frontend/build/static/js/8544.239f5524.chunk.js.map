{"version":3,"file":"static/js/8544.239f5524.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/VariantAdd.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\nfunction VariantAdd() {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n  const variantId = searchParams.get(\"variantId\"); // If exists, we are in edit mode\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    variantName: \"\",\r\n    description: \"\",\r\n    status: \"Active\",\r\n  });\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  // If editing, fetch the variant details from the backend\r\n  useEffect(() => {\r\n    if (variantId) {\r\n      const fetchVariant = async () => {\r\n        setLoading(true);\r\n        try {\r\n          const token = localStorage.getItem(\"token\");\r\n          const res = await axios.get(\r\n            `api/variants/${variantId}`,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          const data = res.data.data;\r\n          setFormData({\r\n            variantName: data.variantName || \"\",\r\n            description: data.description || \"\",\r\n            status: data.status || \"Active\",\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching variant:\", error.message);\r\n          alert(\"Error fetching variant\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchVariant();\r\n    }\r\n  }, [variantId]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n\r\n      if (variantId) {\r\n        // Update variant\r\n        await axios.put(\r\n          `api/variants/${variantId}`,\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"Variant updated successfully!\");\r\n      } else {\r\n        // Create new variant\r\n        await axios.post(\r\n          \"api/variants\",\r\n          formData,\r\n          { headers }\r\n        );\r\n        alert(\"Variant created successfully!\");\r\n      }\r\n      // Navigate back to the variants list page\r\n      navigate(\"/variants-list\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting variant:\", error.message);\r\n      alert(\"Error submitting variant\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    navigate(\"/variants-list\");\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div\r\n          className={`flex-grow p-6  transition-all duration-300 `}\r\n        >\r\n          {/* Header with Breadcrumbs */}\r\n          <header className=\"flex flex-col items-center justify-between mb-6 md:flex-row\">\r\n            <h2 className=\"text-lg font-bold md:text-xl\">\r\n              {variantId ? \"Edit Variant\" : \"Add Variant\"}\r\n            </h2>\r\n            <nav className=\"flex items-center text-sm text-gray-500\">\r\n              <a\r\n                href=\"/dashboard\"\r\n                className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2 text-gray-400 mt-1.5\" />\r\n              <a\r\n                href=\"/variants-list\"\r\n                className=\"text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                Variants List\r\n              </a>\r\n            </nav>\r\n          </header>\r\n          <div className=\"p-6 bg-white rounded shadow-md \">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2 font-semibold\">Variant Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"variantName\"\r\n                  value={formData.variantName}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-cyan-500\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2 font-semibold\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-cyan-500\"\r\n                  rows=\"4\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2 font-semibold\">Status</label>\r\n                <select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-cyan-500\"\r\n                >\r\n                  <option value=\"Active\">Active</option>\r\n                  <option value=\"Inactive\">Inactive</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white transition-colors rounded bg-cyan-500 hover:bg-cyan-600\"\r\n                  disabled={loading}\r\n                >\r\n                  {variantId ? \"Update Variant\" : \"Create Variant\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"px-4 py-2 text-white transition-colors bg-orange-500 rounded hover:bg-orange-600\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariantAdd;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","loading","setLoading","searchParams","useSearchParams","variantId","get","navigate","useNavigate","formData","setFormData","variantName","description","status","useEffect","window","innerWidth","async","token","localStorage","getItem","data","axios","headers","Authorization","error","console","message","alert","fetchVariant","handleChange","e","prev","target","name","value","href","FaTachometerAlt","BiChevronRight","onSubmit","preventDefault","put","post","type","onChange","required","rows","disabled","onClick","handleClose"],"sourceRoot":""}