{"version":3,"file":"static/js/3755.e57787ef.chunk.js","mappings":"wLAIA,MA+uBA,EA/uBiBA,KAAO,IAADC,EACrB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,IAAgBC,EAAAA,EAAAA,MACjBC,EAAKF,EAAaG,IAAI,MAEtBC,EAAY,CAChBC,MAAO,CAAC,iBAAkB,QAAS,MAAO,YAAa,eACvDC,IAAK,CAAC,aAAc,QAAS,UAAW,YACxCC,OAAQ,CAAC,UAAW,SAAU,sBAGzBC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KACpCO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,KAC9BS,EAAOC,IAAYV,EAAAA,EAAAA,UAAS,KAC5BW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,KAC5Ba,EAASC,IAAcd,EAAAA,EAAAA,UAAS,KAChCe,EAAYC,IAAiBhB,EAAAA,EAAAA,UAAS,KACtCiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,KACtCmB,EAAYC,IAAiBpB,EAAAA,EAAAA,UAAS,KACtCqB,EAAcC,IAAmBtB,EAAAA,EAAAA,UAAS,KAC1CuB,EAAeC,IAAoBxB,EAAAA,EAAAA,UAAS,KAC5CyB,EAAUC,IAAe1B,EAAAA,EAAAA,UAAS,KAClC2B,EAAOC,IAAY5B,EAAAA,EAAAA,UAAS,KAC5B6B,EAAMC,IAAW9B,EAAAA,EAAAA,UAAS,KAC1B+B,EAASC,IAAchC,EAAAA,EAAAA,UAAS,KAChCiC,EAAgBC,IAAqBlC,EAAAA,EAAAA,UAAS,OAC9CmC,EAAkBC,IAAuBpC,EAAAA,EAAAA,UAAS,KAClDqC,EAAWC,IAAgBtC,EAAAA,EAAAA,UAAS,KACpCuC,EAAUC,IAAexC,EAAAA,EAAAA,UAAS,KAClCyC,EAAWC,IAAgB1C,EAAAA,EAAAA,UAAS,KACpC2C,EAAOC,KAAY5C,EAAAA,EAAAA,UAAS,OAC5B6C,GAASC,KAAc9C,EAAAA,EAAAA,WAAS,IAChC+C,GAAqBC,KAA0BhD,EAAAA,EAAAA,WAAS,IACxDiD,GAAeC,KAAoBlD,EAAAA,EAAAA,UAAS,KAC5CmD,GAAiBC,KAAsBpD,EAAAA,EAAAA,UAAS,KAChDqD,GAAgBC,KAAqBtD,EAAAA,EAAAA,UAAS,KAC9CuD,GAAcC,KAAmBxD,EAAAA,EAAAA,UAAS,KAC1CyD,GAAiBC,KAAsB1D,EAAAA,EAAAA,UAAS,MAGvD,SAAS2D,GAAqBC,GAC5B,MAAMC,EAAS,QACf,IAAKD,EACH,MAAO,GAAGC,OAEZ,MAAMC,EAAQF,EAASE,MAAM,iBAC7B,IAAKA,EACH,MAAM,IAAIC,MAAM,6BAElB,MAAMC,EAASC,SAASH,EAAM,GAAI,IAElC,OAAOD,EAASK,OADEF,EAAS,GACOG,SAAS,EAAG,IAChD,EAGAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,SAC9BF,EAILG,MAAM,gBAAiB,CACrBC,QAAS,CAAEC,cAAe,UAAUL,OAEnCM,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACL,MAAMC,GAAkBD,EAAKA,MAAQ,IAAIE,QAAQC,IAASA,EAAIC,gBAC9DnF,EAAYgF,EAAe,IAE5BI,OAAOxC,IACNyC,QAAQzC,MAAM,2BAA4BA,GAC1CC,GAAS,kCAAkC,IAb7CA,GAAS,gDAcP,GACH,KAGHwB,EAAAA,EAAAA,YAAU,KACR,IAAK5E,EAAI,CACP,MAAM6F,EAAcC,UAClB,MAAMjB,EAAQC,aAAaC,QAAQ,SACnC,GAAKF,EAIL,IACEvB,IAAW,GACX,MAAMyC,QAAiBf,MAAM,yBAA0B,CACrDC,QAAS,CAAEC,cAAe,UAAUL,OAEtC,IAAKkB,EAASC,GAAI,CAChB,MAAMC,QAAkBF,EAASV,OACjC,MAAM,IAAId,MAAM0B,EAAUC,SAAW,2BAA2BH,EAASI,aAC3E,CACA,MAAMb,QAAaS,EAASV,OAC5BO,QAAQQ,IAAI,kBAAmBd,GAC/B,MAAMe,EAAYf,EAAKgB,QAAU,GAC3BC,EAAYF,EAAUG,OAAS,EAAIH,EAAUA,EAAUG,OAAS,GAAK,KACrEpC,EAAWmC,EAAYA,EAAUE,UAAY,KACnD3D,EAAaqB,GAAqBC,IAClChB,GAAS,KACX,CAAE,MAAOD,GACPyC,QAAQzC,MAAM,yBAA0BA,GACxCC,GAAS,mDACX,CAAC,QACCE,IAAW,EACb,MAxBEF,GAAS,gDAwBX,EAEFyC,GACF,IACC,CAAC7F,KAGJ4E,EAAAA,EAAAA,YAAU,KACR,GAAI5E,EAAI,CACN,MAAM0G,EAAaZ,UACjB,MAAMjB,EAAQC,aAAaC,QAAQ,SACnC,GAAKF,EAIL,IAAK,IAAD8B,EACFrD,IAAW,GACX,MAAMyC,QAAiBf,MAAM,sBAAsBhF,IAAM,CACvDiF,QAAS,CAAEC,cAAe,UAAUL,OAEtC,IAAKkB,EAASC,GAAI,CAChB,MAAMC,QAAkBF,EAASV,OACjC,MAAM,IAAId,MAAM0B,EAAUC,SAAW,0BAA0BH,EAASI,aAC1E,CACA,MAAMb,QAAaS,EAASV,OAC5BO,QAAQQ,IAAI,iBAAkBd,GAC9B,MAAMsB,EAAQtB,EAAKgB,OACnB,IAAKM,EACH,MAAM,IAAIrC,MAAM,oCAElBzB,EAAa8D,EAAMH,WAAa,IAChC3F,EAAa8F,EAAMC,WAAa,IAChC7F,EAAU4F,EAAME,QAAU,IAC1B5F,EAAS0F,EAAMG,OAAS,IACxB3F,EAASwF,EAAMzF,OAAS,IACxBK,EAAcoF,EAAMI,YAAc,IAClCtF,EAAckF,EAAMnF,YAAc,IAClCG,EAAcgF,EAAMjF,YAAc,IAClCK,EAAiB4E,EAAMK,eAAiB,IACxCnF,EAAgB8E,EAAMM,cAAgB,IACtC5F,EAAWsF,EAAMvF,SAAW,IAC5Be,EAASwE,EAAMO,OAAS,IACxB7E,EAAQsE,EAAMvE,MAAQ,IACtBH,EAAY0E,EAAM3E,UAAY,IAC9BO,EAAWoE,EAAMrE,SAAW,IAC5BS,EAAY4D,EAAM7D,UAAY,IAC9BG,EAAa0D,EAAM3D,WAAa,IAChCvC,GAAkC,QAAlBiG,EAAAC,EAAMnG,oBAAY,IAAAkG,OAAA,EAAlBA,EAAoBS,MAAOR,EAAMnG,cAAgB,IAC7DmG,EAAMS,YACR3D,GAAiBkD,EAAMS,UAAU5D,eAAiB,IAClDG,GAAmBgD,EAAMS,UAAUtG,QAAU,IAC7C+C,GAAkB8C,EAAMS,UAAUpG,OAAS,IAC3C+C,GAAgB4C,EAAMS,UAAUC,KAAO,KAEzClE,GAAS,KACX,CAAE,MAAOD,GACPyC,QAAQzC,MAAM,wBAAyBA,GACvCC,GAASD,EAAM+C,SAAW,6BAC5B,CAAC,QACC5C,IAAW,EACb,MAhDEF,GAAS,gDAgDX,EAEFsD,GACF,IACC,CAAC1G,IAGJ,MAAM,OAAEuH,GAAM,uBAAEC,GAAsB,qBAAEC,GAAoB,cAAEC,KAAkBC,EAAAA,EAAAA,GAAc,CAC5FC,gBAAiB,CAAEC,oBAAoB,GACvCC,oBAAqB,OAIvBlD,EAAAA,EAAAA,YAAU,KACJ2C,KAAWvH,IACbgD,EAAYuE,GAAOQ,SAASC,YAC5B9E,EAAaqE,GAAOU,UAAUD,YAChC,GACC,CAACT,GAAQvH,KAGZ4E,EAAAA,EAAAA,YAAU,KACR,MAAMsD,EAAoBpD,aAAaC,QAAQ,eAC/C,GAAImD,EACF,IACEtF,EAAoBuF,KAAKC,MAAMF,GACjC,CAAE,MAAO/E,GACPyC,QAAQzC,MAAM,6BAA8BA,GAC5CP,EAAoB,GACtB,MAEAA,EAAoB,GACtB,GACC,IAEH,MAAMyF,GAAmBA,CAACC,EAAQC,IAEf,WADCzD,aAAaC,QAAQ,SAAW,SAASyD,eAEpD7F,EAAiB8F,MACrBC,GACCA,EAAKJ,OAAOE,gBAAkBF,EAAOE,eACrCE,EAAKC,QAAQC,KAAKC,GAAMA,EAAEL,gBAAeM,SAASP,EAAOC,iBAK/D,GAAIxI,IAAOqI,GAAiB,SAAU,QACpC,OAAOU,EAAAA,EAAAA,KAAA,OAAAC,SAAK,8CAEd,IAAKhJ,IAAOqI,GAAiB,SAAU,OACrC,OAAOU,EAAAA,EAAAA,KAAA,OAAAC,SAAK,6CA2Id,OAAI3F,IACK0F,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKD,SAAC,0BAG1B7F,GACK4F,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mBAAkBD,SAAE7F,KAI1C+F,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8BAA6BD,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,MAAIE,UAAU,0BAAyBD,SAAEhJ,EAAK,aAAe,eAC7DkJ,EAAAA,EAAAA,MAAA,QAAMC,SAlIWrD,UACnBsD,EAAEC,iBACF,MAAMC,EAAW,CACf7C,UAAW5D,EACXgE,UAAWhG,EACXiG,OAAQ/F,EACRgG,MAAO9F,EACPE,MAAOA,EACP6F,WAAYzF,EACZE,WAAYA,EACZE,WAAYA,EACZsF,cAAelF,EACfmF,aAAcrF,EACdR,QAASA,EACT8F,MAAOhF,EACPE,KAAMA,EACNJ,SAAUA,EACVM,QAASA,EACTQ,WACAE,YACAxC,aAAcA,QAAgB8I,EAC9BhG,uBACA+D,IAAK/D,GAAsBQ,QAAewF,GAE5C3D,QAAQQ,IAAI,aAAckD,GAC1B,MAAMzE,EAAQC,aAAaC,QAAQ,SACnC,GAAKF,EAIL,IACE,MAAM2E,EAAMxJ,EACR,sBAAsBA,IACtB,yBACEyJ,EAASzJ,EAAK,MAAQ,OACtB+F,QAAiBf,MAAMwE,EAAK,CAChCC,SACAxE,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAUL,KAE3B6E,KAAMvB,KAAKwB,UAAUL,KAEvB,IAAKvD,EAASC,GAAI,CAChB,MAAMC,QAAkBF,EAASV,OACjC,MAAM,IAAId,MAAM0B,EAAUC,SAAW,aAAalG,EAAK,SAAW,iBACpE,CACA,MAAMsG,QAAeP,EAASV,OAC9BO,QAAQQ,IAAI,oBAAqBE,GACjCsD,MAAM,SAAS5J,EAAK,UAAY,yBAA0BS,GAAiBT,EAAsC,GAAjC,kCAEhFY,EAAY,IACZE,EAAa,IACbE,EAAU,IACVE,EAAS,IACTE,EAAS,IACTI,EAAc,IACdE,EAAc,IACdE,EAAc,IACdI,EAAiB,IACjBF,EAAgB,IAChBR,EAAW,IACXc,EAAS,IACTE,EAAQ,IACRJ,EAAY,IACZM,EAAW,IACXQ,EAAY,IACZE,EAAa,IACbxC,EAAgB,IAChB8C,IAAuB,GACvBE,GAAiB,IACjBE,GAAmB,IACnBE,GAAkB,IAClBE,GAAgB,IAChBE,GAAmB,MACnBpB,EAAa9C,EAAK6C,EAAYsB,GAAqBtB,IACnDjD,EAAS,cACX,CAAE,MAAOuD,GACPyC,QAAQzC,MAAM,SAAUA,GACxByG,MAAM,UAAUzG,EAAM+C,UACxB,MArDE0D,MAAM,gDAqDR,EAkD+BZ,SAAA,EAC3BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qBAAoBD,SAAA,EACjCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,YAAYZ,UAAU,yBAAwBD,SAAC,iBAG9DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,YACH8J,KAAK,OACLC,MAAOlH,GAAa,GACpBmH,UAAQ,EACRf,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,YAAYZ,UAAU,yBAAwBD,SAAC,iBAG9DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,YACH8J,KAAK,OACLC,MAAOlJ,EACPqJ,SAAWd,GAAMtI,EAAasI,EAAEe,OAAOJ,OACvCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,SAASZ,UAAU,yBAAwBD,SAAC,YAG3DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,SACH8J,KAAK,OACLC,MAAOhJ,EACPmJ,SAAWd,GAAMpI,EAAUoI,EAAEe,OAAOJ,OACpCd,UAAU,2DAGdC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,YAG1DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,QACH8J,KAAK,QACLC,MAAO9I,EACPiJ,SAAWd,GAAMlI,EAASkI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,YAG1DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,QACH8J,KAAK,OACLC,MAAO5I,EACP+I,SAAWd,GAAMhI,EAASgI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,aAAaZ,UAAU,yBAAwBD,SAAC,iBAG/DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,aACH8J,KAAK,OACLC,MAAOxI,EACP2I,SAAWd,GAAM5H,EAAc4H,EAAEe,OAAOJ,OACxCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,aAAaZ,UAAU,yBAAwBD,SAAC,iBAG/DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,aACH8J,KAAK,OACLC,MAAOtI,EACPyI,SAAWd,GAAM1H,EAAc0H,EAAEe,OAAOJ,OACxCd,UAAU,qDACVgB,UAAQ,WAKdf,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,aAAaZ,UAAU,yBAAwBD,SAAC,iBAG/DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,aACH8J,KAAK,OACLC,MAAOpI,EACPuI,SAAWd,GAAMxH,EAAcwH,EAAEe,OAAOJ,OACxCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,gBAAgBZ,UAAU,yBAAwBD,SAAC,oBAGlED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,gBACH8J,KAAK,OACLC,MAAOhI,EACPmI,SAAWd,GAAMpH,EAAiBoH,EAAEe,OAAOJ,OAC3Cd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,eAAeZ,UAAU,yBAAwBD,SAAC,kBAGjED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,eACH8J,KAAK,OACLC,MAAOlI,EACPqI,SAAWd,GAAMtH,EAAgBsH,EAAEe,OAAOJ,OAC1Cd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,UAAUZ,UAAU,yBAAwBD,SAAC,cAG5DE,EAAAA,EAAAA,MAAA,UACElJ,GAAG,UACH+J,MAAO1I,EACP6I,SAlSad,IAC3B9H,EAAW8H,EAAEe,OAAOJ,OACpB3H,EAAS,GAAG,EAiSE6G,UAAU,qDACVgB,UAAQ,EAAAjB,SAAA,EAERD,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,GAAEf,SAAC,mBAChBoB,OAAOC,KAAKnK,GAAW0I,KAAK0B,IAC3BvB,EAAAA,EAAAA,KAAA,UAAsBgB,MAAOO,EAAQtB,SAClCsB,GADUA,WAMlBjJ,IACC6H,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,YAG1DE,EAAAA,EAAAA,MAAA,UACElJ,GAAG,QACH+J,MAAO5H,EACP+H,SAAWd,GAAMhH,EAASgH,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,EAAAjB,SAAA,EAERD,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,GAAEf,SAAC,iBACE,QADmBrJ,EACrCO,EAAUmB,UAAQ,IAAA1B,OAAA,EAAlBA,EAAoBiJ,KAAI,CAAC2B,EAAaC,KACrCzB,EAAAA,EAAAA,KAAA,UAAoBgB,MAAOQ,EAAYvB,SACpCuB,GADUC,YAOrBtB,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,OAAOZ,UAAU,yBAAwBD,SAAC,WAGzDD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,OACH8J,KAAK,OACLC,MAAO1H,EACP6H,SAAWd,GAAM9G,EAAQ8G,EAAEe,OAAOJ,OAClCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,WAAWZ,UAAU,yBAAwBD,SAAC,eAG7DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,WACH8J,KAAK,OACLC,MAAO9H,EACPiI,SAAWd,GAAMlH,EAAYkH,EAAEe,OAAOJ,OACtCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,UAAUZ,UAAU,yBAAwBD,SAAC,cAG5DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,UACH8J,KAAK,OACLC,MAAOxH,EACP2H,SAAWd,GAAM5G,EAAW4G,EAAEe,OAAOJ,OACrCU,qBAAqB,qDACrBR,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBD,EAAAA,EAAAA,KAAA,SAAOE,UAAU,yBAAwBD,SAAC,mBAC1CE,EAAAA,EAAAA,MAAA,UACEa,MAAOtJ,EACPyJ,SAAWd,GAAM1I,EAAgB0I,EAAEe,OAAOJ,OAC1Cd,UAAU,qDAAoDD,SAAA,EAE9DD,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,GAAEf,SAAC,+BAChB1I,EAASsI,KAAKnD,IACbyD,EAAAA,EAAAA,MAAA,UAAsBa,MAAOtE,EAAI2B,IAAI4B,SAAA,CAClCvD,EAAIiF,cAAc,WAAIjF,EAAIkF,cADhBlF,EAAI2B,WAKrB2B,EAAAA,EAAAA,KAAA,KAAGE,UAAU,6BAA4BD,SAAC,oEAI5CE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,cAAkB,IAAEjG,GAAY,cAE1CmG,EAAAA,EAAAA,MAAA,KAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,eAAmB,IAAE/F,GAAa,iBAG9C8F,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLc,QAlYUC,KACnBrD,GAEOC,GAEDC,GACTkC,MAAM,mDAENA,MAAM,0BAJNA,MAAM,gEAFNA,MAAM,gDAOR,EA0XcX,UAAU,0EAAyED,SACpF,8BAOPE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBD,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,iBAAiBZ,UAAU,yBAAwBD,SAAC,qBAGnEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,0BAAyBD,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,iBACH8J,KAAK,OACLI,SAxRsBd,IAClC1G,EAAkB0G,EAAEe,OAAOW,MAAM,GAAG,EAwRxB7B,UAAU,2BAEXxG,IACCsG,EAAAA,EAAAA,KAAA,OACEgC,IAAKC,IAAIC,gBAAgBxI,GACzByI,IAAI,UACJjC,UAAU,4EAQpBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBD,EAAAA,EAAAA,KAAA,MAAIE,UAAU,yBAAwBD,SAAC,wBACvCD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMD,UACnBE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,2BAA0BD,SAAA,EACzCD,EAAAA,EAAAA,KAAA,SACEe,KAAK,WACLqB,QAAS5H,GACT2G,SAAWd,GAAM5F,GAAuB4F,EAAEe,OAAOgB,SACjDlC,UAAU,yCAEZF,EAAAA,EAAAA,KAAA,QAAME,UAAU,OAAMD,SAAC,+BAG1BzF,KACC2F,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,gBAAgBZ,UAAU,yBAAwBD,SAAC,qBAGlED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,gBACH8J,KAAK,OACLC,MAAOtG,GACPyG,SAAWd,GAAM1F,GAAiB0F,EAAEe,OAAOJ,OAC3Cd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,kBAAkBZ,UAAU,yBAAwBD,SAAC,sBAGpED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,kBACH8J,KAAK,OACLC,MAAOpG,GACPuG,SAAWd,GAAMxF,GAAmBwF,EAAEe,OAAOJ,OAC7Cd,UAAU,2DAGdC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,iBAAiBZ,UAAU,yBAAwBD,SAAC,qBAGnED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,iBACH8J,KAAK,QACLC,MAAOlG,GACPqG,SAAWd,GAAMtF,GAAkBsF,EAAEe,OAAOJ,OAC5Cd,UAAU,2DAGdC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,eAAeZ,UAAU,yBAAwBD,SAAC,kBAGjED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,eACH8J,KAAK,OACLC,MAAOhG,GACPmG,SAAWd,GAAMpF,GAAgBoF,EAAEe,OAAOJ,OAC1Cd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,kBAAkBZ,UAAU,yBAAwBD,SAAC,uBAGpED,EAAAA,EAAAA,KAAA,SACE/I,GAAG,kBACH8J,KAAK,OACLI,SA3WqBd,IACnClF,GAAmBkF,EAAEe,OAAOW,MAAM,GAAG,EA2WvB7B,UAAU,2BAEXhF,KACC8E,EAAAA,EAAAA,KAAA,OACEgC,IAAKC,IAAIC,gBAAgBhH,IACzBiH,IAAI,eACJjC,UAAU,iFAQtBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,+CAA8CD,SAAA,EAC3DD,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLb,UAAU,4EAA2ED,SAEpFhJ,EAAK,SAAW,UAEnB+I,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLc,QAnaUQ,KAClBxK,EAAY,IACZE,EAAa,IACbE,EAAU,IACVE,EAAS,IACTE,EAAS,IACTI,EAAc,IACdE,EAAc,IACdE,EAAc,IACdI,EAAiB,IACjBF,EAAgB,IAChBR,EAAW,IACXc,EAAS,IACTE,EAAQ,IACRJ,EAAY,IACZM,EAAW,IACXQ,EAAY,IACZE,EAAa,IACbxC,EAAgB,IAChB8C,IAAuB,GACvBE,GAAiB,IACjBE,GAAmB,IACnBE,GAAkB,IAClBE,GAAgB,IAChBE,GAAmB,MACnBtE,EAAS,cAAc,EA2YfqJ,UAAU,8EAA6ED,SACxF,kBAKD,E,qCCzuBV,MA2DA,EA3DiBqC,KACf,MAAOC,EAAWC,IAAgB/K,EAAAA,EAAAA,UAAS,UACpCgL,EAAeC,IAAkBjL,EAAAA,EAAAA,WAAS,GASjD,OAPDoE,EAAAA,EAAAA,YAAU,KACJ8G,OAAOC,WAAa,KACrBF,GAAe,EACjB,GACA,KAIAvC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yBAAwBD,SAAA,EAErCD,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACJ,cAAeA,EAAeC,eAAgBA,KACtDvC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iBAAgBD,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQD,UAErBD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAO,CAACL,cAAeA,OAI1BtC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kDAAiDD,SAAA,EAC9DD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mBAAkBD,SAAC,WAClCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oCAAmCD,SAAA,EAChDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,UACE6B,QAASA,IAAMW,EAAa,SAC5BtC,UAAW,4BACK,UAAdqC,EACI,2CACA,iBACHtC,SACJ,WAGDD,EAAAA,EAAAA,KAAA,UACE6B,QAASA,IAAMW,EAAa,UAC5BtC,UAAW,4BACK,WAAdqC,EACI,2CACA,iBACHtC,SACJ,eAKHE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,CACJ,UAAdsC,IAAyBvC,EAAAA,EAAAA,KAACrJ,EAAQ,IACpB,WAAd4L,IAA0BvC,EAAAA,EAAAA,KAAC+C,EAAAA,QAAS,kBAKzC,C,kBC3DVC,EAAQ,EAMR,WAAoC,IAAbC,EAAMC,UAAAzF,OAAA,QAAA+C,IAAA0C,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7B,MAAM,gBAAErE,EAAkB,CACtBC,oBAAoB,EACpBqE,WAAY,EACZC,QAASC,KACZ,+BAAEC,GAAiC,EAAI,oBAAEvE,EAA+B,wBAAEwE,GAA0B,EAAK,cAAEC,GAAgB,EAAK,oBAAEC,GAA2C,qBAAdC,UAC1JA,UAAUC,iBACVnD,GAAS,8BAAEoD,GAAgC,EAAK,QAAEC,EAAO,UAAEC,GAAeb,EAC1Ec,GAAwB,EAAIC,EAAQC,QAAQ,GAC5CC,GAAqB,EAAIF,EAAQC,SAAQ,GACzCE,GAAU,EAAIH,EAAQC,QAAQ,IAC7BvF,EAAsB0F,IAA2B,EAAIJ,EAAQvM,UAAU6L,IACvE9E,EAAQ6F,IAAa,EAAIL,EAAQvM,aACjC6M,EAAWC,IAAgB,EAAIP,EAAQvM,aACvCkH,EAAe6F,IAAoB,EAAIR,EAAQvM,aAC/CgN,EAAiBC,IAAsB,EAAIV,EAAQvM,YACpDkN,GAA4B,EAAIX,EAAQY,cAAa,KACnDb,EAAsBc,SACtBlC,OAAOmC,aAAaf,EAAsBc,QAC9C,GACD,IACGE,GAAsB,EAAIf,EAAQY,cAAcxK,IAClDuK,IACIT,EAAmBW,UACnBR,GAAU,KAAe,IACzBD,GAAwB,GACxBI,EAAiBpK,IAET,OAAZyJ,QAAgC,IAAZA,GAA8BA,EAAQzJ,EAAM,GACjE,CAACyJ,EAASc,IACPK,GAAwB,EAAIhB,EAAQY,cAAcK,IACpDN,IACIT,EAAmBW,UACnBR,EAAUY,EAASzG,QACnB+F,EAAaU,EAASX,WACtBF,GAAwB,GACxBI,GAAiB,KAAe,KAEtB,OAAdV,QAAoC,IAAdA,GAAgCA,EAAUmB,EAAS,GAC1E,CAACnB,EAAWa,IACTO,GAAc,EAAIlB,EAAQY,cAAa,KACzC,IAAKnB,IACAA,EAAoB0B,qBACpB1B,EAAoBD,cACrB,MAAM,IAAIhI,MAAM,gDAEhBuD,IACAgF,EAAsBc,QAAUlC,OAAOyC,YAAW,KAC9CL,GAAqB,GACtBhG,IAEHyE,EACAW,EAAQU,QAAUpB,EAAoBD,cAAcwB,EAAuBD,EAAqBlG,GAGhG4E,EAAoB0B,mBAAmBH,EAAuBD,EAAqBlG,EACvF,GACD,CACC4E,EACAD,EACAzE,EACAgG,EACAC,EACAnG,IAoCJ,OAlCA,EAAImF,EAAQnI,YAAW,KACnB,IAAIwJ,EAgBJ,OAfIzB,GACAH,GACA,gBAAiBC,WACjBA,UAAU4B,YACLC,MAAM,CAAEC,KAAM,gBACdpJ,MAAMmB,IACP8H,EAAa9H,EACb8H,EAAWI,SAAW,KAClBf,EAAmBW,EAAWjM,MAAM,CACvC,IAEAwD,OAAOyD,IACRxD,QAAQzC,MAAM,iCAAkCiG,EAAE,IAGnD,KACCgF,IACAA,EAAWI,SAAW,KAC1B,CACH,GACF,KACH,EAAIzB,EAAQnI,YAAW,KACd0H,GACD2B,IAEG,KACHP,IACInB,GAAiBW,EAAQU,UACD,OAAxBpB,QAAwD,IAAxBA,GAA0CA,EAAoBiC,WAAWvB,EAAQU,SACrH,IAEL,CAACJ,IACG,CACHS,cACA1G,SACA8F,YACA5F,uBACAD,uBAAwBkH,QAAQlC,GAChC9E,gBAER,EAhHA,MAAMqF,EAAU4B,EAAQ,M,0EC8BxB,MA2OA,EA3OkB7C,KAChB,MAAOnL,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KAEpCO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,KAC9BS,EAAOC,IAAYV,EAAAA,EAAAA,UAAS,IA4CnC,OACEuI,EAAAA,EAAAA,KAAA,OAAKE,UAAU,2BAA0BD,UAEvCE,EAAAA,EAAAA,MAAA,QAAMC,SA7CWrD,UACnBsD,EAAEC,iBAEF,MAAMC,EAAW,CACfsF,SAAUjO,EACVkO,WAAYhO,EACZiO,WAAY/N,EACZgO,SAAU9N,EACV+N,wBAAyB/N,EACzBgO,SAAUhO,EACViO,mBAAoBjO,EACpBkO,SAAUlO,GAEZ,IACE,MAAM8E,QAAiBf,MACrB,6BACA,CACEyE,OAAQ,OACRxE,QAAS,CACP,eAAgB,oBAElByE,KAAMvB,KAAKwB,UAAUL,KAGzB,IAAKvD,EAASC,GACZ,MAAM,IAAIzB,MAAM,6BAElB,MAAM+B,QAAeP,EAASV,OAC9BO,QAAQQ,IAAI,6BAA8BE,GAC1C1F,EAAY,KACZE,EAAa,KACbE,EAAU,IACVE,EAAS,GACX,CAAE,MAAOkO,GACPxJ,QAAQQ,IAAI,cAAegJ,EAC7B,GAUgCnG,UAAU,GAAED,SAAA,EACxCD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcD,UAE3BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sBAAqBD,SAAA,EAClCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,WAAWZ,UAAU,yBAAwBD,SAAC,eAG7DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,WACH8J,KAAK,OACLC,MAAOpJ,EACPuJ,SAAWd,GAAMxI,EAAYwI,EAAEe,OAAOJ,OACtCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,YAAYZ,UAAU,yBAAwBD,SAAC,iBAG9DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,YACH8J,KAAK,OACLC,MAAOlJ,EACPqJ,SAAWd,GAAMtI,EAAasI,EAAEe,OAAOJ,OACvCd,UAAU,qDACVgB,UAAQ,QAgBZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,SAASZ,UAAU,yBAAwBD,SAAC,iBAG3DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,SACH8J,KAAK,OACLC,MAAOhJ,EACPmJ,SAAWd,GAAMpI,EAAUoI,EAAEe,OAAOJ,OACpCd,UAAU,2DAGdC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,cAG1DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,QACH8J,KAAK,QACLC,MAAO9I,EACPiJ,SAAWd,GAAMlI,EAASkI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,+BAG1DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,QACH8J,KAAK,QACLC,MAAO9I,EACPiJ,SAAWd,GAAMlI,EAASkI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,WAKdf,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,eAG1DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,QACH8J,KAAK,QACLC,MAAO9I,EACPiJ,SAAWd,GAAMlI,EAASkI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,QAGZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAQZ,UAAU,yBAAwBD,SAAC,4BAG1DD,EAAAA,EAAAA,KAAA,SACE/I,GAAG,QACH8J,KAAK,QACLC,MAAO9I,EACPiJ,SAAWd,GAAMlI,EAASkI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,QAIZf,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SACEc,QAAQ,mBACRZ,UAAU,yBAAwBD,SACnC,eAGDD,EAAAA,EAAAA,KAAA,UACE/I,GAAG,mBACH+J,MAAO9I,EACPiJ,SAAWd,GAAMlI,EAASkI,EAAEe,OAAOJ,OACnCd,UAAU,qDACVgB,UAAQ,EAAAjB,UAERD,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,mBAAkBf,SAAC,mCAsC3CE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2DAA0DD,SAAA,EACvED,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLb,UAAU,4EAA2ED,SACtF,UAGDD,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLb,UAAU,8EAA6ED,SACxF,iBAKD,C","sources":["components/store/StoreTab.jsx","components/store/AddStore.jsx","../node_modules/react-geolocated/dist-modules/index.js","components/store/SystemTab.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useGeolocated } from \"react-geolocated\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst StoreTab = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const id = searchParams.get(\"id\"); // If present, we're in edit mode\r\n\r\n  const countries = {\r\n    India: [\"Andhra Pradesh\", \"Delhi\", \"Goa\", \"Karnataka\", \"Maharashtra\"],\r\n    USA: [\"California\", \"Texas\", \"Florida\", \"New York\"],\r\n    Canada: [\"Ontario\", \"Quebec\", \"British Columbia\"],\r\n  };\r\n\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [storeAccount, setStoreAccount] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [Country, setCountry] = useState(\"\");\r\n  const [GST_NUMBER, setGST_NUMBER] = useState(\"\");\r\n  const [Tax_Number, setTax_Number] = useState(\"\");\r\n  const [Pan_Number, setPan_Number] = useState(\"\");\r\n  const [Bank_Details, setBank_Details] = useState(\"\");\r\n  const [store_website, setstore_website] = useState(\"\");\r\n  const [PostCode, setPostCode] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [City, setCity] = useState(\"\");\r\n  const [Address, setAddress] = useState(\"\");\r\n  const [profilePicture, setProfilePicture] = useState(null);\r\n  const [localPermissions, setLocalPermissions] = useState([]);\r\n  const [storeCode, setStoreCode] = useState(\"\");\r\n  const [Latitude, setLatitude] = useState(\"\");\r\n  const [Longitude, setLongitude] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [autoCreateWarehouse, setAutoCreateWarehouse] = useState(false);\r\n  const [warehouseName, setWarehouseName] = useState(\"\");\r\n  const [warehouseMobile, setWarehouseMobile] = useState(\"\");\r\n  const [warehouseEmail, setWarehouseEmail] = useState(\"\");\r\n  const [warehouseTid, setWarehouseTid] = useState(\"\");\r\n  const [warehouseQrFile, setWarehouseQrFile] = useState(null);\r\n\r\n  // Function to generate new StoreCode\r\n  function generateNewStoreCode(lastCode) {\r\n    const prefix = \"STORE\";\r\n    if (!lastCode) {\r\n      return `${prefix}001`;\r\n    }\r\n    const match = lastCode.match(/^STORE(\\d+)$/i);\r\n    if (!match) {\r\n      throw new Error(\"Invalid store code format\");\r\n    }\r\n    const number = parseInt(match[1], 10);\r\n    const newNumber = number + 1;\r\n    return prefix + String(newNumber).padStart(3, \"0\");\r\n  }\r\n\r\n  // Fetch parent accounts\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setError(\"No authentication token found. Please log in.\");\r\n      return;\r\n    }\r\n    fetch(\"/api/accounts\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const parentAccounts = (data.data || []).filter((acc) => !acc.parentAccount);\r\n        setAccounts(parentAccounts);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching accounts:\", error);\r\n        setError(\"Failed to load parent accounts.\");\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stores to generate StoreCode (for add mode)\r\n  useEffect(() => {\r\n    if (!id) {\r\n      const fetchStores = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          setError(\"No authentication token found. Please log in.\");\r\n          return;\r\n        }\r\n        try {\r\n          setLoading(true);\r\n          const response = await fetch(\"/admin/store/add/store\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || `Failed to fetch stores: ${response.statusText}`);\r\n          }\r\n          const data = await response.json();\r\n          console.log(\"Fetched stores:\", data);\r\n          const storeList = data.result || [];\r\n          const lastStore = storeList.length > 0 ? storeList[storeList.length - 1] : null;\r\n          const lastCode = lastStore ? lastStore.StoreCode : null;\r\n          setStoreCode(generateNewStoreCode(lastCode));\r\n          setError(null);\r\n        } catch (error) {\r\n          console.error(\"Error fetching stores:\", error);\r\n          setError(\"Failed to load stores for generating store code.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchStores();\r\n    }\r\n  }, [id]);\r\n\r\n  // Fetch store data for edit mode\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchStore = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          setError(\"No authentication token found. Please log in.\");\r\n          return;\r\n        }\r\n        try {\r\n          setLoading(true);\r\n          const response = await fetch(`/admin/store/store/${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || `Failed to fetch store: ${response.statusText}`);\r\n          }\r\n          const data = await response.json();\r\n          console.log(\"Fetched store:\", data);\r\n          const store = data.result;\r\n          if (!store) {\r\n            throw new Error(\"Store data not found in response\");\r\n          }\r\n          setStoreCode(store.StoreCode || \"\");\r\n          setFirstName(store.StoreName || \"\");\r\n          setMobile(store.Mobile || \"\");\r\n          setEmail(store.Email || \"\");\r\n          setPhone(store.Phone || \"\");\r\n          setGST_NUMBER(store.Gst_Number || \"\");\r\n          setTax_Number(store.Tax_Number || \"\");\r\n          setPan_Number(store.Pan_Number || \"\");\r\n          setstore_website(store.Store_website || \"\");\r\n          setBank_Details(store.Bank_details || \"\");\r\n          setCountry(store.Country || \"\");\r\n          setState(store.State || \"\");\r\n          setCity(store.City || \"\");\r\n          setPostCode(store.PostCode || \"\");\r\n          setAddress(store.Address || \"\");\r\n          setLatitude(store.Latitude || \"\");\r\n          setLongitude(store.Longitude || \"\");\r\n          setStoreAccount(store.storeAccount?._id || store.storeAccount || \"\");\r\n          if (store.warehouse) {\r\n            setWarehouseName(store.warehouse.warehouseName || \"\");\r\n            setWarehouseMobile(store.warehouse.mobile || \"\");\r\n            setWarehouseEmail(store.warehouse.email || \"\");\r\n            setWarehouseTid(store.warehouse.tid || \"\");\r\n          }\r\n          setError(null);\r\n        } catch (error) {\r\n          console.error(\"Error fetching store:\", error);\r\n          setError(error.message || \"Failed to load store data.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchStore();\r\n    }\r\n  }, [id]);\r\n\r\n  // Use react-geolocated to auto-fetch coordinates\r\n  const { coords, isGeolocationAvailable, isGeolocationEnabled, positionError } = useGeolocated({\r\n    positionOptions: { enableHighAccuracy: false },\r\n    userDecisionTimeout: 5000,\r\n  });\r\n\r\n  // Update Latitude and Longitude when coords change\r\n  useEffect(() => {\r\n    if (coords && !id) {\r\n      setLatitude(coords.latitude.toString());\r\n      setLongitude(coords.longitude.toString());\r\n    }\r\n  }, [coords, id]);\r\n\r\n  // Load permissions from localStorage\r\n  useEffect(() => {\r\n    const storedPermissions = localStorage.getItem(\"permissions\");\r\n    if (storedPermissions) {\r\n      try {\r\n        setLocalPermissions(JSON.parse(storedPermissions));\r\n      } catch (error) {\r\n        console.error(\"Error parsing permissions:\", error);\r\n        setLocalPermissions([]);\r\n      }\r\n    } else {\r\n      setLocalPermissions([]);\r\n    }\r\n  }, []);\r\n\r\n  const hasPermissionFor = (module, action) => {\r\n    const userRole = (localStorage.getItem(\"role\") || \"guest\").toLowerCase();\r\n    if (userRole === \"admin\") return true;\r\n    return localPermissions.some(\r\n      (perm) =>\r\n        perm.module.toLowerCase() === module.toLowerCase() &&\r\n        perm.actions.map((a) => a.toLowerCase()).includes(action.toLowerCase())\r\n    );\r\n  };\r\n\r\n  // Check permissions for add or edit\r\n  if (id && !hasPermissionFor(\"stores\", \"edit\")) {\r\n    return <div>Insufficient permissions to edit a store.</div>;\r\n  }\r\n  if (!id && !hasPermissionFor(\"stores\", \"add\")) {\r\n    return <div>Insufficient permissions to add a store.</div>;\r\n  }\r\n\r\n  const handleCountryChange = (e) => {\r\n    setCountry(e.target.value);\r\n    setState(\"\");\r\n  };\r\n\r\n  const handleGetLocation = () => {\r\n    if (!isGeolocationAvailable) {\r\n      alert(\"Geolocation is not available in your browser.\");\r\n    } else if (!isGeolocationEnabled) {\r\n      alert(\"Geolocation is not enabled. Please enable location services.\");\r\n    } else if (positionError) {\r\n      alert(\"Error fetching location. Please enter manually.\");\r\n    } else {\r\n      alert(\"Location auto-fetched.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      StoreCode: storeCode,\r\n      StoreName: firstName,\r\n      Mobile: mobile,\r\n      Email: email,\r\n      Phone: Phone,\r\n      Gst_Number: GST_NUMBER,\r\n      Tax_Number: Tax_Number,\r\n      Pan_Number: Pan_Number,\r\n      Store_website: store_website,\r\n      Bank_details: Bank_Details,\r\n      Country: Country,\r\n      State: state,\r\n      City: City,\r\n      PostCode: PostCode,\r\n      Address: Address,\r\n      Latitude,\r\n      Longitude,\r\n      storeAccount: storeAccount || undefined, // Send undefined if empty to trigger auto-creation\r\n      autoCreateWarehouse,\r\n      tid: autoCreateWarehouse ? warehouseTid : undefined,\r\n    };\r\n    console.log(\"Form Data:\", formData);\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"No authentication token found. Please log in.\");\r\n      return;\r\n    }\r\n    try {\r\n      const url = id\r\n        ? `/admin/store/store/${id}`\r\n        : \"/admin/Store/add/Store\";\r\n      const method = id ? \"PUT\" : \"POST\";\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || `Failed to ${id ? \"update\" : \"create\"} store`);\r\n      }\r\n      const result = await response.json();\r\n      console.log(\"Backend Response:\", result);\r\n      alert(`Store ${id ? \"updated\" : \"saved\"} successfully! ${!storeAccount && !id ? \"Parent account auto-created.\" : \"\"}`);\r\n      // Reset form\r\n      setUsername(\"\");\r\n      setFirstName(\"\");\r\n      setMobile(\"\");\r\n      setEmail(\"\");\r\n      setPhone(\"\");\r\n      setGST_NUMBER(\"\");\r\n      setTax_Number(\"\");\r\n      setPan_Number(\"\");\r\n      setstore_website(\"\");\r\n      setBank_Details(\"\");\r\n      setCountry(\"\");\r\n      setState(\"\");\r\n      setCity(\"\");\r\n      setPostCode(\"\");\r\n      setAddress(\"\");\r\n      setLatitude(\"\");\r\n      setLongitude(\"\");\r\n      setStoreAccount(\"\");\r\n      setAutoCreateWarehouse(false);\r\n      setWarehouseName(\"\");\r\n      setWarehouseMobile(\"\");\r\n      setWarehouseEmail(\"\");\r\n      setWarehouseTid(\"\");\r\n      setWarehouseQrFile(null);\r\n      setStoreCode(id ? storeCode : generateNewStoreCode(storeCode));\r\n      navigate(\"/store/view\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setUsername(\"\");\r\n    setFirstName(\"\");\r\n    setMobile(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setGST_NUMBER(\"\");\r\n    setTax_Number(\"\");\r\n    setPan_Number(\"\");\r\n    setstore_website(\"\");\r\n    setBank_Details(\"\");\r\n    setCountry(\"\");\r\n    setState(\"\");\r\n    setCity(\"\");\r\n    setPostCode(\"\");\r\n    setAddress(\"\");\r\n    setLatitude(\"\");\r\n    setLongitude(\"\");\r\n    setStoreAccount(\"\");\r\n    setAutoCreateWarehouse(false);\r\n    setWarehouseName(\"\");\r\n    setWarehouseMobile(\"\");\r\n    setWarehouseEmail(\"\");\r\n    setWarehouseTid(\"\");\r\n    setWarehouseQrFile(null);\r\n    navigate(\"/store/view\");\r\n  };\r\n\r\n  const handleProfilePictureChange = (e) => {\r\n    setProfilePicture(e.target.files[0]);\r\n  };\r\n\r\n  const handleWarehouseQrFileChange = (e) => {\r\n    setWarehouseQrFile(e.target.files[0]);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"p-4\">Loading store data...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"p-4 text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mx-auto overflow-y-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">{id ? \"Edit Store\" : \"Add Store\"}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"flex gap-20\">\r\n          <div className=\"flex w-full gap-32\">\r\n            <div className=\"w-full space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"storeCode\" className=\"block mb-2 font-medium\">\r\n                  Store Code*\r\n                </label>\r\n                <input\r\n                  id=\"storeCode\"\r\n                  type=\"text\"\r\n                  value={storeCode || \"\"}\r\n                  readOnly\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"firstName\" className=\"block mb-2 font-medium\">\r\n                  Store Name*\r\n                </label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"mobile\" className=\"block mb-2 font-medium\">\r\n                  Mobile\r\n                </label>\r\n                <input\r\n                  id=\"mobile\"\r\n                  type=\"text\"\r\n                  value={mobile}\r\n                  onChange={(e) => setMobile(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block mb-2 font-medium\">\r\n                  Email*\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"Phone\" className=\"block mb-2 font-medium\">\r\n                  Phone*\r\n                </label>\r\n                <input\r\n                  id=\"Phone\"\r\n                  type=\"text\"\r\n                  value={Phone}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"GST_NUMBER\" className=\"block mb-2 font-medium\">\r\n                  GST Number*\r\n                </label>\r\n                <input\r\n                  id=\"GST_NUMBER\"\r\n                  type=\"text\"\r\n                  value={GST_NUMBER}\r\n                  onChange={(e) => setGST_NUMBER(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"Tax_Number\" className=\"block mb-2 font-medium\">\r\n                  Tax Number*\r\n                </label>\r\n                <input\r\n                  id=\"Tax_Number\"\r\n                  type=\"text\"\r\n                  value={Tax_Number}\r\n                  onChange={(e) => setTax_Number(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"w-full space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"Pan_Number\" className=\"block mb-2 font-medium\">\r\n                  Pan Number*\r\n                </label>\r\n                <input\r\n                  id=\"Pan_Number\"\r\n                  type=\"text\"\r\n                  value={Pan_Number}\r\n                  onChange={(e) => setPan_Number(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"Store_website\" className=\"block mb-2 font-medium\">\r\n                  Store Website*\r\n                </label>\r\n                <input\r\n                  id=\"Store_website\"\r\n                  type=\"text\"\r\n                  value={store_website}\r\n                  onChange={(e) => setstore_website(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"Bank_Details\" className=\"block mb-2 font-medium\">\r\n                  Bank Details\r\n                </label>\r\n                <input\r\n                  id=\"Bank_Details\"\r\n                  type=\"text\"\r\n                  value={Bank_Details}\r\n                  onChange={(e) => setBank_Details(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"country\" className=\"block mb-2 font-medium\">\r\n                  Country*\r\n                </label>\r\n                <select\r\n                  id=\"country\"\r\n                  value={Country}\r\n                  onChange={handleCountryChange}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {Object.keys(countries).map((country) => (\r\n                    <option key={country} value={country}>\r\n                      {country}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {Country && (\r\n                <div>\r\n                  <label htmlFor=\"state\" className=\"block mb-2 font-medium\">\r\n                    State*\r\n                  </label>\r\n                  <select\r\n                    id=\"state\"\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select State</option>\r\n                    {countries[Country]?.map((stateOption, index) => (\r\n                      <option key={index} value={stateOption}>\r\n                        {stateOption}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <div>\r\n                <label htmlFor=\"City\" className=\"block mb-2 font-medium\">\r\n                  City*\r\n                </label>\r\n                <input\r\n                  id=\"City\"\r\n                  type=\"text\"\r\n                  value={City}\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"PostCode\" className=\"block mb-2 font-medium\">\r\n                  PostCode*\r\n                </label>\r\n                <input\r\n                  id=\"PostCode\"\r\n                  type=\"text\"\r\n                  value={PostCode}\r\n                  onChange={(e) => setPostCode(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"Address\" className=\"block mb-2 font-medium\">\r\n                  Address*\r\n                </label>\r\n                <input\r\n                  id=\"Address\"\r\n                  type=\"text\"\r\n                  value={Address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  classNameerythrocyte=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2 font-medium\">Store Account</label>\r\n                <select\r\n                  value={storeAccount}\r\n                  onChange={(e) => setStoreAccount(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                >\r\n                  <option value=\"\">Auto-create Parent Account</option>\r\n                  {accounts.map((acc) => (\r\n                    <option key={acc._id} value={acc._id}>\r\n                      {acc.accountNumber} – {acc.accountName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <p className=\"text-sm text-gray-500 mt-1\">\r\n                  Leave blank to auto-create a parent account for this store.\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p>\r\n                  <strong>Latitude:</strong> {Latitude || \"Not set\"}\r\n                </p>\r\n                <p>\r\n                  <strong>Longitude:</strong> {Longitude || \"Not set\"}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleGetLocation}\r\n                  className=\"px-4 py-2 font-bold text-white bg-blue-500 rounded-md hover:bg-blue-600\"\r\n                >\r\n                  Refresh Location\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <label htmlFor=\"profilePicture\" className=\"block mb-2 font-medium\">\r\n              Profile Picture\r\n            </label>\r\n            <div className=\"flex items-center gap-4\">\r\n              <input\r\n                id=\"profilePicture\"\r\n                type=\"file\"\r\n                onChange={handleProfilePictureChange}\r\n                className=\"block w-full sm:w-auto\"\r\n              />\r\n              {profilePicture && (\r\n                <img\r\n                  src={URL.createObjectURL(profilePicture)}\r\n                  alt=\"Profile\"\r\n                  className=\"max-w-[150px] max-h-[150px] rounded-md border border-gray-300\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Warehouse Section */}\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-xl font-bold mb-4\">Warehouse Settings</h3>\r\n          <div className=\"mb-4\">\r\n            <label className=\"inline-flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={autoCreateWarehouse}\r\n                onChange={(e) => setAutoCreateWarehouse(e.target.checked)}\r\n                className=\"form-checkbox h-5 w-5 text-blue-600\"\r\n              />\r\n              <span className=\"ml-2\">Auto-create Warehouse</span>\r\n            </label>\r\n          </div>\r\n          {autoCreateWarehouse && (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"warehouseName\" className=\"block mb-2 font-medium\">\r\n                  Warehouse Name*\r\n                </label>\r\n                <input\r\n                  id=\"warehouseName\"\r\n                  type=\"text\"\r\n                  value={warehouseName}\r\n                  onChange={(e) => setWarehouseName(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"warehouseMobile\" className=\"block mb-2 font-medium\">\r\n                  Warehouse Mobile\r\n                </label>\r\n                <input\r\n                  id=\"warehouseMobile\"\r\n                  type=\"text\"\r\n                  value={warehouseMobile}\r\n                  onChange={(e) => setWarehouseMobile(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"warehouseEmail\" className=\"block mb-2 font-medium\">\r\n                  Warehouse Email\r\n                </label>\r\n                <input\r\n                  id=\"warehouseEmail\"\r\n                  type=\"email\"\r\n                  value={warehouseEmail}\r\n                  onChange={(e) => setWarehouseEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"warehouseTid\" className=\"block mb-2 font-medium\">\r\n                  Terminal ID*\r\n                </label>\r\n                <input\r\n                  id=\"warehouseTid\"\r\n                  type=\"text\"\r\n                  value={warehouseTid}\r\n                  onChange={(e) => setWarehouseTid(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"warehouseQrFile\" className=\"block mb-2 font-medium\">\r\n                  Warehouse QR Code\r\n                </label>\r\n                <input\r\n                  id=\"warehouseQrFile\"\r\n                  type=\"file\"\r\n                  onChange={handleWarehouseQrFileChange}\r\n                  className=\"block w-full sm:w-auto\"\r\n                />\r\n                {warehouseQrFile && (\r\n                  <img\r\n                    src={URL.createObjectURL(warehouseQrFile)}\r\n                    alt=\"Warehouse QR\"\r\n                    className=\"max-w-[150px] max-h-[150px] rounded-md border border-gray-300 mt-2\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-center gap-4 mt-10\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-6 py-2 font-bold text-white bg-green-500 rounded-md hover:bg-green-600\"\r\n          >\r\n            {id ? \"Update\" : \"Save\"}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleClose}\r\n            className=\"px-6 py-2 font-bold text-white bg-orange-500 rounded-md hover:bg-orange-600\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreTab;","import React, { useState ,useEffect} from \"react\";\r\nimport StoreTab from \"./StoreTab.jsx\";\r\nimport SystemTab from \"./SystemTab.jsx\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\n\r\nconst AddStore = () => {\r\n  const [activeTab, setActiveTab] = useState(\"store\");\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  \r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  \r\n  \r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Pass sidebar state to Navbar and Sidebar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <div className=\"w-auto\">\r\n          \r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n        \r\n\r\n        <div className=\"w-full min-h-screen overflow-x-auto bg-gray-100\">\r\n          <div className=\"text-[32px] px-4\">Store</div>\r\n          <div className=\"p-4 bg-white rounded-lg shadow-md\">\r\n            <div className=\"flex border-b\">\r\n              <button\r\n                onClick={() => setActiveTab(\"store\")}\r\n                className={`py-2 px-4 font-semibold ${\r\n                  activeTab === \"store\"\r\n                    ? \"border-b-2 border-blue-500 text-blue-500\"\r\n                    : \"text-gray-500\"\r\n                }`}\r\n              >\r\n                Store\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab(\"system\")}\r\n                className={`py-2 px-4 font-semibold ${\r\n                  activeTab === \"system\"\r\n                    ? \"border-b-2 border-blue-500 text-blue-500\"\r\n                    : \"text-gray-500\"\r\n                }`}\r\n              >\r\n                System\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"mt-6\">\r\n              {activeTab === \"store\" && <StoreTab />}\r\n              {activeTab === \"system\" && <SystemTab />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStore;\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useGeolocated = useGeolocated;\nconst react_1 = require(\"react\");\n/**\n * Hook abstracting away the interaction with the Geolocation API.\n * @param config - the configuration to use\n */\nfunction useGeolocated(config = {}) {\n    const { positionOptions = {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: Infinity,\n    }, isOptimisticGeolocationEnabled = true, userDecisionTimeout = undefined, suppressLocationOnMount = false, watchPosition = false, geolocationProvider = typeof navigator !== \"undefined\"\n        ? navigator.geolocation\n        : undefined, watchLocationPermissionChange = false, onError, onSuccess, } = config;\n    const userDecisionTimeoutId = (0, react_1.useRef)(0);\n    const isCurrentlyMounted = (0, react_1.useRef)(true);\n    const watchId = (0, react_1.useRef)(0);\n    const [isGeolocationEnabled, setIsGeolocationEnabled] = (0, react_1.useState)(isOptimisticGeolocationEnabled);\n    const [coords, setCoords] = (0, react_1.useState)();\n    const [timestamp, setTimestamp] = (0, react_1.useState)();\n    const [positionError, setPositionError] = (0, react_1.useState)();\n    const [permissionState, setPermissionState] = (0, react_1.useState)();\n    const cancelUserDecisionTimeout = (0, react_1.useCallback)(() => {\n        if (userDecisionTimeoutId.current) {\n            window.clearTimeout(userDecisionTimeoutId.current);\n        }\n    }, []);\n    const handlePositionError = (0, react_1.useCallback)((error) => {\n        cancelUserDecisionTimeout();\n        if (isCurrentlyMounted.current) {\n            setCoords(() => undefined);\n            setIsGeolocationEnabled(false);\n            setPositionError(error);\n        }\n        onError === null || onError === void 0 ? void 0 : onError(error);\n    }, [onError, cancelUserDecisionTimeout]);\n    const handlePositionSuccess = (0, react_1.useCallback)((position) => {\n        cancelUserDecisionTimeout();\n        if (isCurrentlyMounted.current) {\n            setCoords(position.coords);\n            setTimestamp(position.timestamp);\n            setIsGeolocationEnabled(true);\n            setPositionError(() => undefined);\n        }\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(position);\n    }, [onSuccess, cancelUserDecisionTimeout]);\n    const getPosition = (0, react_1.useCallback)(() => {\n        if (!geolocationProvider ||\n            !geolocationProvider.getCurrentPosition ||\n            !geolocationProvider.watchPosition) {\n            throw new Error(\"The provided geolocation provider is invalid\");\n        }\n        if (userDecisionTimeout) {\n            userDecisionTimeoutId.current = window.setTimeout(() => {\n                handlePositionError();\n            }, userDecisionTimeout);\n        }\n        if (watchPosition) {\n            watchId.current = geolocationProvider.watchPosition(handlePositionSuccess, handlePositionError, positionOptions);\n        }\n        else {\n            geolocationProvider.getCurrentPosition(handlePositionSuccess, handlePositionError, positionOptions);\n        }\n    }, [\n        geolocationProvider,\n        watchPosition,\n        userDecisionTimeout,\n        handlePositionError,\n        handlePositionSuccess,\n        positionOptions,\n    ]);\n    (0, react_1.useEffect)(() => {\n        let permission;\n        if (watchLocationPermissionChange &&\n            geolocationProvider &&\n            \"permissions\" in navigator) {\n            navigator.permissions\n                .query({ name: \"geolocation\" })\n                .then((result) => {\n                permission = result;\n                permission.onchange = () => {\n                    setPermissionState(permission.state);\n                };\n            })\n                .catch((e) => {\n                console.error(\"Error updating the permissions\", e);\n            });\n        }\n        return () => {\n            if (permission) {\n                permission.onchange = null;\n            }\n        };\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    (0, react_1.useEffect)(() => {\n        if (!suppressLocationOnMount) {\n            getPosition();\n        }\n        return () => {\n            cancelUserDecisionTimeout();\n            if (watchPosition && watchId.current) {\n                geolocationProvider === null || geolocationProvider === void 0 ? void 0 : geolocationProvider.clearWatch(watchId.current);\n            }\n        };\n    }, [permissionState]); // eslint-disable-line react-hooks/exhaustive-deps\n    return {\n        getPosition,\n        coords,\n        timestamp,\n        isGeolocationEnabled,\n        isGeolocationAvailable: Boolean(geolocationProvider),\n        positionError,\n    };\n}\n","// // SystemTab.js\r\n// import React from \"react\";\r\n\r\n// const SystemTab = () => {\r\n//   return (\r\n//     <div className=\"p-4\">\r\n//       <h2 className=\"mb-4 text-xl font-semibold text-gray-700\">\r\n//         System Information\r\n//       </h2>\r\n//       <p className=\"text-gray-600\">Here is some system-related information.</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SystemTab;\r\n// // StoreTab.js\r\n// import React from \"react\";\r\n\r\n// const StoreTab = () => {\r\n//   return (\r\n//     <div className=\"p-4\">\r\n//       <h2 className=\"mb-4 text-xl font-semibold text-gray-700\">\r\n//         Store Information\r\n//       </h2>\r\n//       <p className=\"text-gray-600\">Here is some store-related information.</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StoreTab;\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SystemTab = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission logic here\r\n    const formData = {\r\n      Timezone: username,\r\n      Dateformat: firstName,\r\n      TimeFormat: mobile,\r\n      Currency: email,\r\n      CurrencySymbolPlacement: email,\r\n      Decimals: email,\r\n      DecimalforQuantity: email,\r\n      Language: email,\r\n    };\r\n    try {\r\n      const response = await fetch(\r\n        \"admin/Store/add/systemzone\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to create timezone\");\r\n      }\r\n      const result = await response.json();\r\n      console.log(\"Store created successfully\", result);\r\n      setUsername(\" \");\r\n      setFirstName(\" \");\r\n      setMobile(\"\");\r\n      setEmail(\"\");\r\n    } catch (Err) {\r\n      console.log(\"Error found\", Err);\r\n    }\r\n  };\r\n\r\n  // const handleProfilePictureChange = (e) => {\r\n  //   setProfilePicture(e.target.files[0]);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"mx-auto overflow-y-auto \">\r\n      {/* <h1 className=\"mb-6 text-2xl font-bold text-start\">Create User</h1> */}\r\n      <form onSubmit={handleSubmit} className=\"\">\r\n        <div className=\"flex gap-20 \">\r\n          {/* Left Column */}\r\n          <div className=\"flex w-full gap-32 \">\r\n            <div className=\"w-full space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"username\" className=\"block mb-2 font-medium\">\r\n                  TimeZone*\r\n                </label>\r\n                <input\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"firstName\" className=\"block mb-2 font-medium\">\r\n                  Date Format\r\n                </label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              {/* <div>\r\n                <label htmlFor=\"lastName\" className=\"block mb-2 font-medium\">\r\n                  Last Name*\r\n                </label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div> */}\r\n              <div>\r\n                <label htmlFor=\"mobile\" className=\"block mb-2 font-medium\">\r\n                  Time Format\r\n                </label>\r\n                <input\r\n                  id=\"mobile\"\r\n                  type=\"text\"\r\n                  value={mobile}\r\n                  onChange={(e) => setMobile(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block mb-2 font-medium\">\r\n                  Currency\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block mb-2 font-medium\">\r\n                  Currency Symbol Placement\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"w-full space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block mb-2 font-medium\">\r\n                  Decimals*\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block mb-2 font-medium\">\r\n                  Decimals for Quantity*\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label\r\n                  htmlFor=\"defaultWarehouse\"\r\n                  className=\"block mb-2 font-medium\"\r\n                >\r\n                  Language*\r\n                </label>\r\n                <select\r\n                  id=\"defaultWarehouse\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                  required\r\n                >\r\n                  <option value=\"System Warehouse\">System Warehouse</option>\r\n                  {/* Add more warehouse options here */}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Column */}\r\n          {/* \r\n          <div className=\"space-y-4\">\r\n            <div className=\"\">\r\n              <label\r\n                htmlFor=\"profilePicture\"\r\n                className=\"block mb-2 font-medium\"\r\n              >\r\n                Profile Picture\r\n              </label>\r\n              <div className=\"flex items-center gap-4\">\r\n                <input\r\n                  id=\"profilePicture\"\r\n                  type=\"file\"\r\n                  onChange={handleProfilePictureChange}\r\n                  className=\"block w-full sm:w-auto\"\r\n                />\r\n                {profilePicture && (\r\n                  <img\r\n                    src={URL.createObjectURL(profilePicture)}\r\n                    alt=\"Profile\"\r\n                    className=\"max-w-[150px] max-h-[150px] rounded-md border border-gray-300\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n          {/* Profile Picture */}\r\n\r\n          {/* Buttons */}\r\n        </div>\r\n        <div className=\"flex justify-center col-span-1 gap-4 mt-10 sm:col-span-2\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-6 py-2 font-bold text-white bg-green-500 rounded-md hover:bg-green-600\"\r\n          >\r\n            Save\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-6 py-2 font-bold text-white bg-orange-500 rounded-md hover:bg-orange-600\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemTab;\r\n"],"names":["StoreTab","_countries$Country","navigate","useNavigate","searchParams","useSearchParams","id","get","countries","India","USA","Canada","accounts","setAccounts","useState","storeAccount","setStoreAccount","username","setUsername","firstName","setFirstName","mobile","setMobile","email","setEmail","Phone","setPhone","Country","setCountry","GST_NUMBER","setGST_NUMBER","Tax_Number","setTax_Number","Pan_Number","setPan_Number","Bank_Details","setBank_Details","store_website","setstore_website","PostCode","setPostCode","state","setState","City","setCity","Address","setAddress","profilePicture","setProfilePicture","localPermissions","setLocalPermissions","storeCode","setStoreCode","Latitude","setLatitude","Longitude","setLongitude","error","setError","loading","setLoading","autoCreateWarehouse","setAutoCreateWarehouse","warehouseName","setWarehouseName","warehouseMobile","setWarehouseMobile","warehouseEmail","setWarehouseEmail","warehouseTid","setWarehouseTid","warehouseQrFile","setWarehouseQrFile","generateNewStoreCode","lastCode","prefix","match","Error","number","parseInt","String","padStart","useEffect","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","data","parentAccounts","filter","acc","parentAccount","catch","console","fetchStores","async","response","ok","errorData","message","statusText","log","storeList","result","lastStore","length","StoreCode","fetchStore","_store$storeAccount","store","StoreName","Mobile","Email","Gst_Number","Store_website","Bank_details","State","_id","warehouse","tid","coords","isGeolocationAvailable","isGeolocationEnabled","positionError","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","latitude","toString","longitude","storedPermissions","JSON","parse","hasPermissionFor","module","action","toLowerCase","some","perm","actions","map","a","includes","_jsx","children","className","_jsxs","onSubmit","e","preventDefault","formData","undefined","url","method","body","stringify","alert","htmlFor","type","value","readOnly","required","onChange","target","Object","keys","country","stateOption","index","classNameerythrocyte","accountNumber","accountName","onClick","handleGetLocation","files","src","URL","createObjectURL","alt","checked","handleClose","AddStore","activeTab","setActiveTab","isSidebarOpen","setSidebarOpen","window","innerWidth","Navbar","Sidebar","SystemTab","exports","config","arguments","maximumAge","timeout","Infinity","isOptimisticGeolocationEnabled","suppressLocationOnMount","watchPosition","geolocationProvider","navigator","geolocation","watchLocationPermissionChange","onError","onSuccess","userDecisionTimeoutId","react_1","useRef","isCurrentlyMounted","watchId","setIsGeolocationEnabled","setCoords","timestamp","setTimestamp","setPositionError","permissionState","setPermissionState","cancelUserDecisionTimeout","useCallback","current","clearTimeout","handlePositionError","handlePositionSuccess","position","getPosition","getCurrentPosition","setTimeout","permission","permissions","query","name","onchange","clearWatch","Boolean","require","Timezone","Dateformat","TimeFormat","Currency","CurrencySymbolPlacement","Decimals","DecimalforQuantity","Language","Err"],"sourceRoot":""}