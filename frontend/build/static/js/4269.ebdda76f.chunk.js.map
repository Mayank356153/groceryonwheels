{"version":3,"file":"static/js/4269.ebdda76f.chunk.js","mappings":"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","sources":["Loading.jsx","components/purchase/BulkPurchaseUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar   from \"../Navbar.jsx\";\nimport Sidebar  from \"../Sidebar.jsx\";\nimport Loading  from \"../../Loading\";\n\nexport default function BulkPurchaseUpload() {\n  const [warehouses, setWarehouses] = useState([]);\n  const [suppliers,  setSuppliers]  = useState([]);\n  const [form, setForm] = useState({ warehouse: \"\", supplier: \"\" });\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const auth = { headers:{ Authorization:`Bearer ${localStorage.getItem(\"token\")}` } };\n\n  useEffect(() => {\n    (async () => {\n      const [w,s] = await Promise.all([\n        axios.get(\"/api/warehouses\", auth),\n        axios.get(\"/api/suppliers\" , auth)\n      ]);\n      setWarehouses((w.data.data||[]).filter(x=>x.status===\"Active\"));\n      setSuppliers ( s.data.data||[]);\n    })();\n  },[]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.warehouse || !form.supplier) return alert(\"Pick warehouse & supplier\");\n    if (!file) return alert(\"Choose a CSV file\");\n    const fd = new FormData();\n    fd.append(\"file\"     , file);\n    fd.append(\"warehouse\", form.warehouse);\n    fd.append(\"supplier\" , form.supplier);\n    try {\n      setLoading(true);\n      await axios.post(\"/api/purchases/bulk\", fd, auth);\n      alert(\"Bulk purchase saved!\");\n      navigate(\"/purchase-list\");\n    } catch (err) {\n      alert(err.response?.data?.message || err.message);\n    } finally { setLoading(false); }\n  };\n\n  if (loading) return <Loading/>;\n\n  return (\n    <div className=\"flex h-screen flex-col bg-gray-50\">\n      <Navbar/>\n      <div className=\"flex flex-grow\">\n        <Sidebar/>\n        <main className=\"flex-1 p-6\">\n          <h1 className=\"text-2xl font-semibold mb-4\">Bulk Purchase Upload</h1>\n          <form onSubmit={handleSubmit} className=\"max-w-md space-y-4 bg-white p-6 rounded shadow\">\n            <div>\n              <label>Warehouse</label>\n              <select value={form.warehouse}\n                      onChange={e=>setForm({...form,warehouse:e.target.value})}\n                      className=\"w-full border p-2 rounded\">\n                <option value=\"\">Select</option>\n                {warehouses.map(w=><option key={w._id} value={w._id}>{w.warehouseName}</option>)}\n              </select>\n            </div>\n            <div>\n              <label>Supplier</label>\n              <select value={form.supplier}\n                      onChange={e=>setForm({...form,supplier:e.target.value})}\n                      className=\"w-full border p-2 rounded\">\n                <option value=\"\">Select</option>\n                {suppliers.map(s=><option key={s._id} value={s._id}>{s.supplierName}</option>)}\n              </select>\n            </div>\n            <div>\n              <label>CSV File</label>\n              <input type=\"file\"\n                     accept=\".csv\"\n                     onChange={e=>setFile(e.target.files[0])}\n                     className=\"w-full border p-2 rounded\"/>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Columns: <code>itemCode,quantity,price</code> (price optional)\n              </p>\n            </div>\n            <button type=\"submit\"\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded w-full\">\n              Upload\n            </button>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","BulkPurchaseUpload","warehouses","setWarehouses","suppliers","setSuppliers","form","setForm","warehouse","supplier","file","setFile","loading","setLoading","navigate","useNavigate","auth","headers","Authorization","localStorage","getItem","useEffect","w","s","Promise","all","axios","get","data","filter","x","status","Loading","onSubmit","async","e","preventDefault","alert","fd","FormData","append","post","err","_err$response","_err$response$data","response","message","value","onChange","target","map","_id","warehouseName","supplierName","type","accept","files"],"sourceRoot":""}