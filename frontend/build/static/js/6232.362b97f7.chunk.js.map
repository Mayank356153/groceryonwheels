{"version":3,"file":"static/js/6232.362b97f7.chunk.js","mappings":"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","sources":["Loading.jsx","components/Message/SendMessage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","// components/SendMessage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { FaTachometerAlt, FaPlus } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../Loading';\r\n\r\nconst SendMessage = () => {\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) {\r\n      setSidebarOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  const location = useLocation();\r\n  const templateContent = location.state?.templateContent || \"\";\r\n\r\n  const [formData, setFormData] = useState({\r\n    message: templateContent,\r\n    phoneNumbers: [],\r\n    sentAt: new Date().toISOString(),\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name } = e.target;\r\n    if (name === \"mobile\") {\r\n      if (mobile.length === 10) {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          phoneNumbers: [...prev.phoneNumbers, mobile],\r\n        }));\r\n        alert(\"Number added successfully\");\r\n        setMobile(\"\");\r\n      } else {\r\n        alert(\"Invalid Number (must be 10 digits)\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMessageChange = (e) => {\r\n    const { value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      message: value,\r\n    }));\r\n  };\r\n\r\n  const postData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        \"api/message/send\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      alert(\"Message Sent Successfully\");\r\n    } catch (err) {\r\n      console.error(\"Error:\", err.response?.data || err.message);\r\n      alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.phoneNumbers.length <= 0) {\r\n      alert(\"Add at least one Mobile Number\");\r\n      return;\r\n    }\r\n\r\n    await postData();\r\n\r\n    setMobile(\"\");\r\n    setFormData({\r\n      message: \"\",\r\n      phoneNumbers: [],\r\n      sentAt: new Date().toISOString(),\r\n    });\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        <div className=\"flex flex-col flex-grow w-full min-h-screen \">\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-6 bg-gray-100 rounded-lg md:flex-row\">\r\n            <h1 className=\"text-2xl font-semibold\">Send Message</h1>\r\n            <div className=\"flex items-center space-x-2 text-blue-600\">\r\n              <Link\r\n                to=\"/dashboard\"\r\n                className=\"flex items-center text-sm text-gray-500 no-underline hover:text-cyan-600\"\r\n              >\r\n                <FaTachometerAlt className=\"mr-2\" /> Home\r\n              </Link>\r\n              <span className=\"text-gray-400\">{\">\"}</span>\r\n              <Link\r\n                to=\"/message-templates-list\"\r\n                className=\"text-sm text-gray-500 no-underline hover:text-cyan-600\"\r\n              >\r\n                Message Templates\r\n              </Link>\r\n            </div>\r\n          </header>\r\n\r\n          <div className=\"w-full p-6 mx-auto bg-white rounded-lg shadow-lg \">\r\n            <h2 className=\"mb-4 text-xl font-semibold\">Send Message</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                  htmlFor=\"mobile\"\r\n                >\r\n                  Mobile *\r\n                </label>\r\n                <label className=\"flex items-center w-full\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"mobile\"\r\n                    value={mobile}\r\n                    minLength=\"10\"\r\n                    maxLength=\"10\"\r\n                    onChange={(e) => setMobile(e.target.value)}\r\n                    className=\"block w-full px-2 py-[10px] mt-1 border border-gray-300 rounded-none shadow-sm rounded-l-md focus:outline-none focus:ring-2 focus:ring-cyan-700\"\r\n                    placeholder=\"Enter 10-digit Number\"\r\n                  />\r\n                  <button\r\n                    className=\"flex items-center justify-center h-full px-2 mt-1 border-2 border-gray-300 rounded-none shadow-sm rounded-r-md\"\r\n                    name=\"mobile\"\r\n                    type=\"button\"\r\n                    onClick={handleChange}\r\n                  >\r\n                    <FaPlus />\r\n                  </button>\r\n                </label>\r\n                {formData.phoneNumbers.length > 0 && (\r\n                  <ul className=\"mt-2 text-sm\">\r\n                    {formData.phoneNumbers.map((num, idx) => (\r\n                      <li key={idx} className=\"text-gray-700\">\r\n                        {num}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                  htmlFor=\"message\"\r\n                >\r\n                  Message *\r\n                </label>\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  value={formData.message}\r\n                  onChange={handleMessageChange}\r\n                  className=\"block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring focus:ring-cyan-500\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Type your message here...\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-between\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 font-semibold text-white transition bg-green-500 hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n                >\r\n                  Send\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-4 py-2 font-semibold text-white transition bg-orange-500 hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-400\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","SendMessage","_location$state","mobile","setMobile","loading","setLoading","useEffect","window","innerWidth","templateContent","useLocation","state","formData","setFormData","message","phoneNumbers","sentAt","Date","toISOString","Link","to","FaTachometerAlt","onSubmit","async","e","preventDefault","length","alert","axios","post","headers","Authorization","localStorage","getItem","err","_err$response","_err$response2","_err$response2$data","console","error","response","data","postData","htmlFor","type","id","value","minLength","maxLength","onChange","target","placeholder","name","onClick","prev","FaPlus","map","num","idx","rows","required"],"sourceRoot":""}