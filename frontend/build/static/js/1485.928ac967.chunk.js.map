{"version":3,"file":"static/js/1485.928ac967.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/BrandsList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState,useEffect } from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport  {Link} from 'react-router-dom'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst BrandsList = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [dropdownIndex, setDropdownIndex] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const[loading,setLoading]=useState([])\r\n  const[brands,setBrands]=useState([])\r\n  const Navigate=useNavigate()\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n \r\n  const fetchBrands = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const response = await axios.get('api/brands', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        }\r\n      });\r\n  \r\n    console.log(response.data)\r\n     setBrands(response.data.data) \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    fetchBrands()\r\n  },[])\r\n\r\n   \r\nconst filteredData = \r\nbrands.filter(item => \r\n  item.brandName.toLowerCase().includes(searchTerm.toLowerCase()) \r\n);\r\n\r\n \r\nconst indexOfLastItem = currentPage * entriesPerPage;\r\nconst indexOfFirstItem = indexOfLastItem - entriesPerPage;\r\nconst totalPages = Math.ceil(filteredData.length / entriesPerPage);\r\nconst currentUsers = filteredData.slice((currentPage-1)*entriesPerPage, currentPage* entriesPerPage);\r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const prevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n     const handleCopy = () => {\r\n        const data = currentUsers.map(item => `${item.brandName},${item.description},${item.status}`).join('\\n');\r\n        navigator.clipboard.writeText(data);\r\n        alert(\"Data copied to clipboard!\");\r\n      };\r\n    \r\n      const handleExcelDownload = () => {\r\n        const ws = XLSX.utils.json_to_sheet(currentUsers);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Brands\");\r\n        XLSX.writeFile(wb, \"Brands.xlsx\");\r\n      };\r\n\r\n      \r\n        const handlePdfDownload = () => {\r\n          const doc = new jsPDF();\r\n          doc.text(\"Brands List\", 20, 20);\r\n          const tableData = filteredData.map(item => [\r\n           item.brandName,\r\n           item.description,\r\n           item.status\r\n          ]);\r\n      \r\n          autoTable(doc, {\r\n            head: [['Brand Name','Description','Status']],\r\n            body: tableData,\r\n          });\r\n      \r\n          doc.save(\"Brands_list.pdf\");\r\n        };\r\n      \r\n        const handlePrint = () => {\r\n          window.print();\r\n        };\r\n\r\n        const handleCsvDownload = () => {\r\n          const csvContent = \"data:text/csv;charset=utf-8,\" + currentUsers.map(user => Object.values(user).join(\",\")).join(\"\\n\");\r\n          const encodedUri = encodeURI(csvContent);\r\n          const link = document.createElement(\"a\");\r\n          link.setAttribute(\"href\", encodedUri);\r\n          link.setAttribute(\"download\", \"customers.csv\");\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        };\r\n    const toggleDropdown = (index) => {\r\n      setDropdownIndex(dropdownIndex === index ? null : index);\r\n    };\r\n    const updateData = async (id, update) => {\r\n      setLoading(true);\r\n      \r\n      try {\r\n        const response = await axios.put(\r\n          `api/brands/${id}`,\r\n           update , // ✅ Send status as an object\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`, // ✅ Prevent null token issues\r\n            },\r\n          }\r\n        );\r\n    \r\n        \r\n        alert(\"Update Successfully\");\r\n    \r\n        fetchBrands();\r\n    \r\n      } catch (err) {\r\n        console.error(\"Error:\", err.response?.data || err.message);\r\n        alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    \r\n    const handleDelete = async (id) => {\r\n      const conf= window.confirm(\"Do u want to delete this\")\r\n      if(!conf){\r\n        return ;\r\n      }\r\n      setLoading(true)\r\n     \r\n      try {\r\n        const response = await axios.delete(`api/brands/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n      \r\n       alert(\"Deleted Successfully\")\r\n      \r\n      } catch (error) {\r\n        console.error( error.message);\r\n      }\r\n      finally{\r\n        fetchBrands();\r\n        setLoading(false)\r\n      }\r\n    };  \r\nconst [update, setUpdate] = useState(null);\r\nconst handleStatus = (id) => {\r\n  const selectedBrand = brands.find((item) => item._id === id);\r\n\r\n  if (!selectedBrand) {\r\n    console.error(\"BRand not found for ID:\", id);\r\n    return;\r\n  }\r\n\r\n  // ✅ Create updated object immediately\r\n  const newStatus = selectedBrand.status === \"Active\" ? \"Inactive\" : \"Active\";\r\n  const updatedBrand = { ...selectedBrand, status: newStatus };\r\n\r\n\r\n  // ✅ Call API with the updated data immediately\r\n  updateData(id, updatedBrand);\r\n\r\n  // ✅ Update local state immediately (for UI consistency)\r\n  setUpdate(updatedBrand);\r\n};\r\nif(loading) return(<LoadingScreen/>)\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-col flex-grow md:flex-row\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        <div\r\n          className={`flex-grow p-6  transition-all duration-300 bg-gray-100 min-h-screen`}\r\n        >\r\n          <header className=\"flex flex-col items-center justify-between mb-6 md:flex-row\">\r\n           \r\n            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n                   <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Brands List</h1>\r\n                   <span className=\"text-xs text-gray-600 sm:text-sm\">View/Search Items Brand</span>\r\n                 </div>\r\n            <nav className=\"flex flex-wrap mt-2 text-sm text-gray-600\">\r\n              <a href=\"/dashboard\" className=\"flex items-center text-gray-400 no-underline hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2 text-gray-400 mt-1.5\" />\r\n              <a href=\"#\" className=\"text-gray-400 no-underline hover:text-cyan-600\">Brands List</a>\r\n            </nav>\r\n          </header>\r\n\r\n          <div className=\"p-4 bg-white rounded shadow-md\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h2 className=\"text-lg font-semibold\">Brands List</h2>\r\n              <Link to='/brand-form'>\r\n              <button className=\"px-4 py-2 text-white rounded bg-cyan-500\">+ Create Brand</button>\r\n              </Link>\r\n            </div>\r\n\r\n                        {/* Table Controls */}\r\n           <div className=\"flex flex-col items-start justify-between gap-4 p-2 mb-4 md:flex-row md:items-center\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <label>Show</label>\r\n                <select\r\n                  className=\"w-full px-2 py-1 text-sm border rounded md:w-auto\"\r\n                  value={entriesPerPage}\r\n                  onChange={(e) => setEntriesPerPage(parseInt(e.target.value))}\r\n                >\r\n                  <option value={10}>10</option>\r\n                  <option value={25}>25</option>\r\n                  <option value={50}>50</option>\r\n                  <option value={100}>100</option>\r\n                </select>\r\n                <label>Entries</label>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-0.5 text-sm\">\r\n                <button className=\"text-white bg-cyan-300 w-14 hover:bg-cyan-500\"onClick={handleCopy}>Copy</button>\r\n                <button className=\"text-white bg-cyan-300 w-14 hover:bg-cyan-500\"onClick={handleExcelDownload}>Excel</button>\r\n                <button className=\"text-white bg-cyan-300 w-14 hover:bg-cyan-500\"onClick={handlePdfDownload}>PDF</button>\r\n                <button className=\"text-white bg-cyan-300 w-14 hover:bg-cyan-500\"onClick={handlePrint}>Print</button>\r\n                <button className=\"text-white bg-cyan-300 w-14 hover:bg-cyan-500\"onClick={handleCsvDownload}>CSV</button>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"w-full px-2 py-1 border rounded md:w-auto\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          <div className=\"w-full overflow-x-auto\">\r\n            <table className=\"w-full text-center border border-collapse border-gray-300\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"p-2 border\"><input type=\"checkbox\" /></th>\r\n                  <th className=\"p-2 border\">Brand Name</th>\r\n                  <th className=\"p-2 border\">Description</th>\r\n                  <th className=\"p-2 border\">Status</th>\r\n                  <th className=\"p-2 border\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentUsers.map((brand, index) => (\r\n                  <tr key={index} className=\"border-b\">\r\n                    <td className=\"p-1 text-center border\"><input type=\"checkbox\" /></td>\r\n                    <td className=\"p-1 border\">{brand.brandName}</td>\r\n                    <td className=\"p-1 border\">{brand.description}</td>\r\n                    <td className=\"p-1 border\"onClick={()=>handleStatus(brand._id)}>\r\n                      {brand.status.toLowerCase()==='active'?<span className=\"px-1 py-1 text-sm text-white bg-green-600 rounded-md\">Active</span>:<span className=\"px-1 py-1 text-sm text-white bg-red-600 rounded-md\">Inactive</span>} \r\n                    </td>\r\n                    <td className=\"relative p-2 border\">\r\n                      <button onClick={() => toggleDropdown(brand._id)} className=\"px-4 py-1 text-white rounded bg-cyan-600\">Action ▼</button>\r\n                      {dropdownIndex ===brand._id  && (\r\n                        <div className=\"absolute z-10 p-1 bg-white border rounded shadow-md right-10\">\r\n                          <button className=\"flex items-center w-full px-2 py-1 hover:bg-gray-100\"onClick={()=>Navigate(`/brand-form?id=${brand._id}`)}>\r\n                            <FaEdit className=\"mr-2 text-blue-600\" /> Edit\r\n                          </button>\r\n                          <button className=\"flex items-center w-full px-2 py-1 hover:bg-gray-100\"onClick={()=>handleDelete(brand._id)}>\r\n                            <FaTrash className=\"mr-2 text-red-600\" /> Delete\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n            <div className=\"flex flex-col items-center justify-between mt-4 md:flex-row\">\r\n              <p className=\"text-sm\">Showing {(currentPage - 1) * entriesPerPage + 1} to {Math.min(currentPage * entriesPerPage, brands.length)} of {brands.length} entries</p>\r\n              <div className=\"flex gap-1\">\r\n                <button\r\n                  className={`px-2 py-1 rounded ${currentPage === 1 ? \"bg-gray-300 cursor-not-allowed\" : \"bg-blue-500 text-white\"}`}\r\n                  disabled={currentPage === 1}\r\n                  onClick={() => setCurrentPage(currentPage - 1)}\r\n                >\r\n                  Previous\r\n                </button>\r\n                {/* <span className=\"px-3 py-1 text-white bg-blue-500 rounded\">{currentPage}</span> */}\r\n                <button\r\n                  className={`px-2 py-1 rounded ${currentPage === totalPages ? \"bg-gray-300 cursor-not-allowed\" : \"bg-blue-500 text-white\"}`}\r\n                  disabled={currentPage === totalPages}\r\n                  onClick={() => setCurrentPage(currentPage + 1)}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandsList;"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","BrandsList","dropdownIndex","setDropdownIndex","currentPage","setCurrentPage","entriesPerPage","setEntriesPerPage","searchTerm","setSearchTerm","loading","setLoading","brands","setBrands","Navigate","useNavigate","useEffect","window","innerWidth","fetchBrands","async","response","axios","get","headers","Authorization","localStorage","getItem","console","log","data","err","message","filteredData","filter","item","brandName","toLowerCase","includes","totalPages","Math","ceil","length","currentUsers","slice","update","setUpdate","handleStatus","id","selectedBrand","find","_id","error","newStatus","status","updatedBrand","put","alert","_err$response","_err$response2","_err$response2$data","updateData","href","FaTachometerAlt","BiChevronRight","Link","to","value","onChange","e","parseInt","target","onClick","handleCopy","map","description","join","navigator","clipboard","writeText","handleExcelDownload","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","handlePdfDownload","doc","jsPDF","text","tableData","autoTable","head","body","save","handlePrint","print","handleCsvDownload","csvContent","user","Object","values","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","type","placeholder","brand","index","toggleDropdown","FaEdit","confirm","delete","handleDelete","FaTrash","min","disabled"],"sourceRoot":""}