{"version":3,"file":"static/js/3209.c1b6dae2.chunk.js","mappings":"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","sources":["components/Auditor/ViewItems.jsx","components/Auditor/AllAudits.jsx","components/contact/Button.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from \"axios\"\r\nexport default function ViewItems({ audit, onClose, sidebarOpen = true }) {\r\n\r\n  \r\n\r\n\r\n\r\n \r\n  return (\r\n    // <div className={`fixed inset-0 w-full h-full overflow-y-auto ${sidebarOpen && \"pl-10\"}`}>\r\n    //   <div className=\"relative w-3/4 p-5 mx-auto bg-gray-300 border rounded-md shadow-lg top-20\">\r\n    //     <div className=\"flex items-center justify-between mb-4\">\r\n    //       <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Audit Items View</h3>\r\n    //       <button\r\n    //         onClick={onClose}\r\n    //         className=\"text-gray-400 hover:text-gray-500\"\r\n    //       >\r\n    //         <span className=\"sr-only\">Close</span>\r\n    //         <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    //           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n    //         </svg>\r\n    //       </button>\r\n    //     </div>\r\n\r\n    //     <div className=\"mb-4 overflow-x-auto\">\r\n    //       <table className=\"min-w-full divide-y divide-gray-200\">\r\n    //         <thead className=\"bg-gray-50\">\r\n    //           <tr>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Item ID\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Name\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Scanned Qty\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Expected Qty\r\n    //             </th>\r\n    //             <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n    //               Difference\r\n    //             </th>\r\n    //           </tr>\r\n    //         </thead>\r\n    //         <tbody className=\"bg-white divide-y divide-gray-200\">\r\n    //           {audit.finalUnit.map((item) => (\r\n    //             <tr key={item.itemId}>\r\n    //               <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n    //                 {item.itemId}\r\n    //               </td>\r\n    //               <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">\r\n    //                 {item.itemName}\r\n    //               </td>\r\n    //               <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n    //                 {item.scannedQty}\r\n    //               </td>\r\n    //               <td className=\"px-6 py-4 text-sm whitespace-nowrap\">\r\n    //                  {item.expectedQty}  \r\n    //               </td>\r\n    //               <td className={`px-6 py-4 whitespace-nowrap text-sm ${\r\n    //                 item.scannedQty >= item.expectedQty \r\n    //                   ? 'text-green-600' \r\n    //                   : 'text-red-600'\r\n    //               }`}>\r\n    //                 {item.scannedQty - item.expectedQty}\r\n    //               </td>\r\n    //             </tr>\r\n    //           ))}\r\n    //         </tbody>\r\n    //       </table>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <div className={`fixed inset-0 w-full h-full overflow-y-auto ${sidebarOpen && \"lg:pl-10\"}`}>\r\n  <div className=\"relative w-full p-4 mx-auto bg-gray-300 border rounded-md shadow-lg lg:w-3/4 lg:p-5 top-4 lg:top-20\">\r\n    <div className=\"flex items-center justify-between mb-4\">\r\n      <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Audit Items View</h3>\r\n      <button\r\n        onClick={onClose}\r\n        className=\"text-gray-400 hover:text-gray-500\"\r\n      >\r\n        <span className=\"sr-only\">Close</span>\r\n        <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    {/* Mobile View (Cards) - Shows on small screens */}\r\n    <div className=\"mb-4 space-y-3 lg:hidden\">\r\n      {audit.finalUnit.map((item) => (\r\n        <div key={item.itemId} className=\"p-4 bg-white rounded-lg shadow\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">{item.itemName}</p>\r\n              <p className=\"text-sm text-gray-500\">ID: {item.itemId}</p>\r\n            </div>\r\n            <span className={`text-sm ${\r\n              item.scannedQty >= item.expectedQty \r\n                ? 'text-green-600' \r\n                : 'text-red-600'\r\n            }`}>\r\n              Diff: {item.scannedQty - item.expectedQty}\r\n            </span>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-2 mt-2\">\r\n            <div>\r\n              <p className=\"text-xs text-gray-500\">Scanned</p>\r\n              <p className=\"text-sm\">{item.scannedQty}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-xs text-gray-500\">Expected</p>\r\n              <p className=\"text-sm\">{item.expectedQty}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n    {/* Desktop View (Table) - Shows on larger screens */}\r\n    <div className=\"hidden mb-4 overflow-x-auto lg:block\">\r\n      <table className=\"min-w-full divide-y divide-gray-200\">\r\n        <thead className=\"bg-gray-50\">\r\n          <tr>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Item ID\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Name\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Scanned Qty\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Expected Qty\r\n            </th>\r\n            <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n              Difference\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n          {audit.finalUnit.map((item) => (\r\n            <tr key={item.itemId}>\r\n              <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n                {item.itemId}\r\n              </td>\r\n              <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">\r\n                {item.itemName}\r\n              </td>\r\n              <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n                {item.scannedQty}\r\n              </td>\r\n              <td className=\"px-6 py-4 text-sm whitespace-nowrap\">\r\n                {item.expectedQty}  \r\n              </td>\r\n              <td className={`px-6 py-4 whitespace-nowrap text-sm ${\r\n                item.scannedQty >= item.expectedQty \r\n                  ? 'text-green-600' \r\n                  : 'text-red-600'\r\n              }`}>\r\n                {item.scannedQty - item.expectedQty}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n  );\r\n}","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { useState,useEffect } from 'react'\r\nimport axios, { all } from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from '../Sidebar.jsx'\r\nimport Button from '../contact/Button.jsx'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FaTachometerAlt } from 'react-icons/fa'\r\nimport { FiEdit, FiTrash2 } from 'react-icons/fi'\r\nimport ViewItems from './ViewItems.jsx'\r\nimport { IdcardFilled } from '@ant-design/icons'\r\n\r\nconst  AllAudits=()=> {\r\n    const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n    const [comparison,setComparison]=useState(false)\r\n    const[items,setItems]=useState([])\r\n    const [audits,setAudits]=useState([])\r\n     useEffect(()=>{\r\n        if(window.innerWidth < 768){\r\n          setSidebarOpen(false)\r\n        }\r\n      },[window.innerWidth])\r\n\r\n      const  navigate=useNavigate();\r\n      \r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(\"/api/audit/all\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        });\r\n        console.log(response.data.data);\r\n        setAudits(response.data.data);\r\n      } catch (err) {\r\n        console.error(\"Fetch audit error:\", err.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n \r\n   const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(\"/api/audit/all\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          }\r\n        });\r\n        console.log(response.data.data);\r\n        setAudits(response.data.data);\r\n      } catch (err) {\r\n        console.error(\"Fetch audit error:\", err.message);\r\n      }\r\n    };\r\n    \r\n  const handleDelete = async (id) => {\r\n    const conf= window.confirm(\"Do u want to delete audit\")\r\n    if(!conf){\r\n      return ;\r\n    }\r\n  \r\n   \r\n    try {\r\n      const response = await axios.delete(`/api/audit/delete/${id}`,{\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n    console.log(response)\r\n     alert(\"Deleted Successfully\")\r\n    \r\n    } catch (error) {\r\n      console.error( error.message);\r\n    }\r\n    finally{\r\n\r\n      fetchData()\r\n    }\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n    \r\n     \r\n     \r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex w-full\">\r\n \r\n          <div>\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n          </div>\r\n          \r\n           {/* Content */}\r\n         <div className={`w-full flex flex-col p-2 md:p-2  `}>\r\n          <header className=\"flex flex-col items-center justify-between p-4 rounded-md shadow sm:flex-row\">\r\n            <div className=\"flex items-center gap-1 text-center sm:flex-row sm:text-left\">\r\n              <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Audit List</h1>\r\n              {/* <span className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Banner</span> */}\r\n            </div>\r\n\r\n            <nav className=\"flex flex-wrap items-center justify-center mt-2 text-xs text-gray-500 sm:justify-start sm:text-sm sm:mt-0\">\r\n   <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                            <FaTachometerAlt className=\"mr-2 text-gray-500 hover:text-cyan-600\" /> Home\r\n                          </NavLink>     \r\n                          <NavLink to=\"/banners/view\" className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Start Audit\r\n                          </NavLink>    \r\n                          <NavLink to=\"/banners/add\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                           &gt; Audit List\r\n                          </NavLink>\r\n              \r\n            </nav>\r\n          </header>\r\n           {\r\n            comparison && <ViewItems  audit={items} onClose={()=>{setComparison(false)}} sidebarOpen={isSidebarOpen}/>\r\n            // <AuditComparison auditItems={items} onClose={()=>setComparison(false)}/>\r\n          } \r\n\r\n          <div className=\"p-4 mt-1 bg-white border-t-4 rounded-lg shadow-md border-cyan-500\">\r\n            \r\n        \r\n              <div className=\"overflow-x-auto border border-gray-200 rounded-lg shadow-sm\">\r\n  {/* Desktop Table */}\r\n  <table className=\"min-w-full divide-y divide-gray-200 \">\r\n    <thead className=\"bg-gray-50\">\r\n      <tr>\r\n        <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n          Audit ID\r\n        </th>\r\n        <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n          Total Items\r\n        </th>\r\n        <th className=\"px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase\">\r\n          Actions\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody className=\"hidden bg-white divide-y divide-gray-200 md:table\">\r\n      {audits.map((audit) => (\r\n        <tr key={audit._id}>\r\n          <td className=\"px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap\">\r\n            {audit._id}\r\n          </td>\r\n          <td className=\"px-6 py-4 text-sm text-gray-500 whitespace-nowrap\">\r\n            {audit.finalUnit?.length || 0} items\r\n          </td>\r\n          <td className=\"px-6 py-4 text-sm font-medium whitespace-nowrap\">\r\n            <button\r\n              className=\"mr-4 text-indigo-600 hover:text-indigo-900\"\r\n              onClick={() => {\r\n                setItems(audit);\r\n                setComparison(true);\r\n              }}\r\n            >\r\n              View Comparison\r\n            </button>\r\n            <button\r\n              className=\"text-red-600 hover:text-red-900\"\r\n              onClick={() => handleDelete(audit._id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n\r\n  {/* Mobile Cards */}\r\n  <div className=\"p-4 space-y-4 md:hidden\">\r\n    {audits.map((audit) => (\r\n      <div\r\n        key={audit._id}\r\n        className=\"p-4 bg-white border border-gray-200 rounded-lg shadow-sm\"\r\n      >\r\n        <div className=\"mb-2 text-sm font-medium text-gray-700\">Audit ID:</div>\r\n        <div className=\"mb-1 text-base font-semibold text-gray-900 break-all\">\r\n          {audit._id}\r\n        </div>\r\n\r\n        <div className=\"mb-3 text-sm text-gray-600\">\r\n          Total Items: {audit.finalUnit?.length || 0}\r\n        </div>\r\n\r\n        <div className=\"flex justify-start space-x-4\">\r\n          <button\r\n            className=\"text-sm text-indigo-600 hover:text-indigo-900\"\r\n            onClick={() => {\r\n              setItems(audit);\r\n              setComparison(true);\r\n            }}\r\n          >\r\n            View\r\n          </button>\r\n          <button\r\n            className=\"text-sm text-red-600 hover:text-red-900\"\r\n            onClick={() => handleDelete(audit._id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n</div>\r\n \r\n \r\n\r\n                       \r\n         \r\n                \r\n                 \r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default AllAudits\r\n","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n"],"names":["ViewItems","_ref","audit","onClose","sidebarOpen","_jsx","className","children","_jsxs","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","finalUnit","map","item","itemName","itemId","scannedQty","expectedQty","AllAudits","isSidebarOpen","setSidebarOpen","useState","comparison","setComparison","items","setItems","audits","setAudits","useEffect","window","innerWidth","useNavigate","async","token","localStorage","getItem","response","axios","get","headers","Authorization","console","log","data","err","error","message","fetchData","handleDelete","confirm","delete","id","alert","Navbar","Sidebar","NavLink","to","FaTachometerAlt","_audit$finalUnit","_id","length","_audit$finalUnit2","Button","text","type","props"],"sourceRoot":""}