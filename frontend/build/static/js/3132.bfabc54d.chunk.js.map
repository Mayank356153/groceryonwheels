{"version":3,"file":"static/js/3132.bfabc54d.chunk.js","mappings":"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","sources":["components/Terminal/CreateTerminal.jsx","Loading.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Navbar\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\n\r\nconst CreateTerminal = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const editId = searchParams.get(\"id\");              // for edit mode\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [formData, setFormData] = useState({ tid: \"\", warehouse: \"\" });\r\n  const [qrFile, setQrFile] = useState(null);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // load warehouses for the dropdown\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"api/warehouses\", {   // adjust to your actual warehouses endpoint\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => setWarehouses(res.data.data || []))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  // if editing, fetch the existing terminal\r\n  useEffect(() => {\r\n    if (!editId) return;\r\n    setLoading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"api/terminals\", { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        const term = res.data.data.find((t) => t._id === editId);\r\n        if (term) {\r\n          setFormData({\r\n            tid: term.tid,\r\n            warehouse: term.warehouse || \"\",\r\n          });\r\n          // we donâ€™t prefill qrFile input\r\n        }\r\n      })\r\n      .catch(console.error)\r\n      .finally(() => setLoading(false));\r\n  }, [editId]);\r\n\r\n  const handleChange = (e) =>\r\n    setFormData((f) => ({ ...f, [e.target.name]: e.target.value }));\r\n\r\n  const handleFileChange = (e) => {\r\n    setQrFile(e.target.files[0] || null);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    // use FormData for file upload\r\n    const payload = new FormData();\r\n    payload.append(\"tid\", formData.tid);\r\n    if (formData.warehouse) payload.append(\"warehouse\", formData.warehouse);\r\n    if (qrFile) payload.append(\"qrCode\", qrFile);\r\n\r\n    try {\r\n      if (editId) {\r\n        await axios.put(`api/terminals/${editId}`, payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        alert(\"Terminal updated successfully\");\r\n      } else {\r\n        await axios.post(`api/terminals`, payload, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        alert(\"Terminal created successfully\");\r\n      }\r\n      navigate(\"/terminal-list\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"flex-grow p-6 overflow-auto bg-gray-100\"\r\n        >\r\n          {/* Header / Breadcrumb */}\r\n          <header className=\"flex justify-between items-center mb-6\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold\">\r\n                {editId ? \"Edit Terminal\" : \"Create Terminal\"}\r\n              </h1>\r\n              <p className=\"text-gray-600\">\r\n                {editId\r\n                  ? \"Modify terminal details\"\r\n                  : \"Fill in terminal details\"}\r\n              </p>\r\n            </div>\r\n            <nav className=\"flex items-center text-gray-500 text-sm\">\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center\">\r\n                <FaTachometerAlt className=\"mr-1\" /> Home\r\n              </NavLink>\r\n              <BiChevronRight className=\"mx-2\" />\r\n              <NavLink to=\"/terminal-list\">Terminal List</NavLink>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Form Fields */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"space-y-4\">\r\n              {/* TID */}\r\n              <div>\r\n                <label className=\"block font-semibold\">\r\n                  Terminal ID <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  name=\"tid\"\r\n                  value={formData.tid}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"w-full p-2 border rounded\"\r\n                  placeholder=\"e.g. TID-12345\"\r\n                />\r\n              </div>\r\n              {/* Warehouse selector */}\r\n              <div>\r\n                <label className=\"block font-semibold\">\r\n                  Assign to Warehouse\r\n                </label>\r\n                <select\r\n                  name=\"warehouse\"\r\n                  value={formData.warehouse}\r\n                  onChange={handleChange}\r\n                  className=\"w-full p-2 border rounded\"\r\n                >\r\n                  <option value=\"\">(unassigned)</option>\r\n                  {warehouses.map((w) => (\r\n                    <option key={w._id} value={w._id}>\r\n                      {w.warehouseName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              {/* QR Code Upload */}\r\n              <div>\r\n                <label className=\"block font-semibold\">QR Code</label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleFileChange}\r\n                  className=\"w-full p-2 border rounded\"\r\n                />\r\n                {qrFile && (\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Selected file: {qrFile.name}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div className=\"mt-8 flex justify-center gap-4\">\r\n            <button className=\"px-8 py-2 bg-green-600 text-white rounded\">\r\n              {editId ? \"Update\" : \"Save\"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => navigate(\"/admin/terminal/list\")}\r\n              className=\"px-8 py-2 bg-orange-500 text-white rounded\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTerminal;\r\n","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  "],"names":["CreateTerminal","navigate","useNavigate","searchParams","useSearchParams","editId","get","isSidebarOpen","setSidebarOpen","useState","formData","setFormData","tid","warehouse","qrFile","setQrFile","warehouses","setWarehouses","loading","setLoading","useEffect","window","innerWidth","token","localStorage","getItem","axios","headers","Authorization","then","res","data","catch","console","error","term","find","t","_id","finally","handleChange","e","f","target","name","value","_jsx","LoadingScreen","_jsxs","className","children","Navbar","Sidebar","onSubmit","async","preventDefault","payload","FormData","append","put","alert","post","err","_err$response","_err$response$data","response","message","NavLink","to","FaTachometerAlt","BiChevronRight","onChange","required","placeholder","map","w","warehouseName","type","accept","files","onClick"],"sourceRoot":""}