{"version":3,"file":"static/js/6794.5ebfe899.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/VariantsList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { FaTachometerAlt, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction VariantsList() {\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [variants, setVariants] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionMenu, setActionMenu] = useState(null);\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  // Fetch variants from API\r\n  const fetchVariants = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get(\"api/variants\", {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      setVariants(res.data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching variants:\", error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVariants();\r\n  }, []);\r\n\r\n  // Delete a variant\r\n  const deleteVariant = async (id) => {\r\n    if (!window.confirm(\"Do you want to delete this variant?\")) return;\r\n    try {\r\n      await axios.delete(`api/variants/${id}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      alert(\"Deleted Successfully\");\r\n      fetchVariants();\r\n    } catch (error) {\r\n      console.error(\"Error deleting variant:\", error);\r\n      alert(\"Error deleting variant\");\r\n    }\r\n  };\r\n\r\n  // Toggle status (active/inactive)\r\n  const toggleStatus = async (id, currentStatus) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n    try {\r\n      await axios.put(\r\n        `api/variants/${id}`,\r\n        { status: newStatus },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      fetchVariants();\r\n    } catch (error) {\r\n      console.error(\"Error toggling status:\", error.message);\r\n      alert(\"Error updating status\");\r\n    }\r\n  };\r\n\r\n  // Pagination calculations\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const totalPages = Math.ceil(variants.length / itemsPerPage);\r\n  const currentVariants = variants.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) setCurrentPage(newPage);\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      {/* Main layout: Sidebar & Content */}\r\n      <div className=\"flex flex-grow bg-gray-200 md:flex-row\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        <div className=\"flex-grow p-4 transition-all duration-300 bg-white\">\r\n          {/* Header */}\r\n          <header className=\"flex flex-col items-center justify-between mb-6 md:flex-row\">\r\n            <h2 className=\"text-lg font-bold md:text-xl\">Variants List</h2>\r\n            <nav className=\"flex items-center text-sm text-gray-500\">\r\n              <a\r\n                href=\"/dashboard\"\r\n                className=\"flex items-center text-gray-700 no-underline hover:text-cyan-600\"\r\n              >\r\n                <FaTachometerAlt className=\"mr-2 text-gray-500\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2 text-gray-400\" />\r\n              <a href=\"#\" className=\"text-gray-700 no-underline hover:text-cyan-600\">\r\n                Variants List\r\n              </a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Actions Toolbar */}\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-lg font-semibold text-gray-700\">Variants List</h2>\r\n            <button\r\n              className=\"px-4 py-2 font-bold text-white rounded bg-cyan-500 hover:bg-cyan-700 focus:outline-none focus:shadow-outline\"\r\n              onClick={() => navigate(\"/variant-add\")}\r\n            >\r\n              + Create Variant\r\n            </button>\r\n          </div>\r\n\r\n          {/* Variants Table */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full text-sm border border-collapse border-gray-300 md:text-base\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"px-2 py-1 border\">#</th>\r\n                  <th className=\"px-2 py-1 border\">Variant Name</th>\r\n                  <th className=\"px-2 py-1 border\">Description</th>\r\n                  <th className=\"px-2 py-1 border\">Status</th>\r\n                  <th className=\"px-2 py-1 border\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentVariants.length <= 0 ? (\r\n                  <tr className=\"text-lg\">\r\n                    <td className=\"p-1 text-center border\" colSpan=\"5\">\r\n                      No data available\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  currentVariants.map((variant, index) => (\r\n                    <tr key={variant._id} className=\"text-sm\">\r\n                      <td className=\"px-2 py-1 border\">\r\n                        {indexOfFirstItem + index + 1}\r\n                      </td>\r\n                      <td className=\"px-2 py-1 border\">{variant.variantName}</td>\r\n                      <td className=\"px-2 py-1 border\">\r\n                        {variant.description || \"NA\"}\r\n                      </td>\r\n                      <td className=\"px-2 py-1 border\">\r\n                        <button\r\n                          className={`px-2 py-1 rounded-lg ${\r\n                            variant.status.toUpperCase() === (\"ACTIVE\" || \"active\")\r\n                              ? \"bg-green-500 text-white\"\r\n                              : \"bg-red-500 text-white\"\r\n                          }`}\r\n                          onClick={() =>\r\n                            toggleStatus(variant._id, variant.status)\r\n                          }\r\n                        >\r\n                          {variant.status.charAt(0).toUpperCase() +\r\n                            variant.status.slice(1)}\r\n                        </button>\r\n                      </td>\r\n                      <td className=\"relative p-2 border\">\r\n                        <button\r\n                          className=\"px-2 py-1 text-white rounded bg-cyan-500\"\r\n                          onClick={() =>\r\n                            setActionMenu(\r\n                              actionMenu === variant._id ? null : variant._id\r\n                            )\r\n                          }\r\n                        >\r\n                          Action ▼\r\n                        </button>\r\n                        {actionMenu === variant._id && (\r\n                          <div className=\"absolute left-0 z-40 mt-1 bg-white border shadow-lg top-full w-28\">\r\n                            <button\r\n                              className=\"flex items-center w-full px-2 py-1 hover:bg-gray-100\"\r\n                              onClick={() =>\r\n                                navigate(`/variant-add?variantId=${variant._id}`)\r\n                              }\r\n                            >\r\n                              <FaEdit className=\"mr-2\" /> Edit\r\n                            </button>\r\n                            <button\r\n                              className=\"flex items-center w-full px-2 py-1 text-red-500 hover:bg-gray-100\"\r\n                              onClick={() => deleteVariant(variant._id)}\r\n                            >\r\n                              <FaTrash className=\"mr-2\" /> Delete\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"flex flex-col items-center justify-between mt-4 md:flex-row\">\r\n              {/* <p className=\"text-sm\">Showing {(currentPage - 1) * entriesPerPage + 1} to {Math.min(currentPage * entriesPerPage, variants.length)} of {variants.length} entries</p> */}\r\n              <div className=\"flex gap-1\">\r\n                <button\r\n                  className={`px-2 py-1 rounded ${currentPage === 1 ? \"bg-gray-300 cursor-not-allowed\" : \"bg-blue-500 text-white\"}`}\r\n                  disabled={currentPage === 1}\r\n                  onClick={() => setCurrentPage(currentPage - 1)}\r\n                >\r\n                  Previous\r\n                </button>\r\n                {/* <span className=\"px-3 py-1 text-white bg-blue-500 rounded\">{currentPage}</span> */}\r\n                <button\r\n                  className={`px-2 py-1 rounded ${currentPage === totalPages ? \"bg-gray-300 cursor-not-allowed\" : \"bg-blue-500 text-white\"}`}\r\n                  disabled={currentPage === totalPages}\r\n                  onClick={() => setCurrentPage(currentPage + 1)}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariantsList;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","navigate","useNavigate","variants","setVariants","loading","setLoading","actionMenu","setActionMenu","currentPage","setCurrentPage","useEffect","window","innerWidth","fetchVariants","async","res","axios","get","headers","Authorization","localStorage","getItem","data","error","console","message","indexOfLastItem","indexOfFirstItem","totalPages","Math","ceil","length","currentVariants","slice","href","FaTachometerAlt","BiChevronRight","onClick","colSpan","map","variant","index","variantName","description","status","toUpperCase","id","currentStatus","token","newStatus","put","alert","toggleStatus","_id","charAt","FaEdit","confirm","delete","deleteVariant","FaTrash","disabled"],"sourceRoot":""}