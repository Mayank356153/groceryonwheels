{"version":3,"file":"static/js/9681.01d0d36c.chunk.js","mappings":"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","sources":["components/Booking/RiderClaimPanel.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaCheck } from 'react-icons/fa';\nimport Navbar from '../Navbar';\nimport Sidebar from '../Sidebar';\n\nconst api = axios.create({ baseURL: '/vps/api' });\napi.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\nexport default function RiderJobsPanel() {\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const [jobs, setJobs]                 = useState([]);\n  const [loading, setLoading]           = useState(false);\n  const [error, setError]               = useState(null);\n\n  // 1) Fetch assigned jobs on mount\n  useEffect(() => {\n    setLoading(true);\n    api.get('/bookings/assigned')\n      .then(res => {\n        setJobs(res.data.data);\n        setError(null);\n      })\n      .catch(() => setError('Failed to load your assigned jobs'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  // 2) Claim a job\n  const handleClaim = async (id) => {\n    try {\n      await api.patch(`/bookings/${id}/claim`, {});\n      // remove from list\n      setJobs(js => js.filter(j => j._id !== id));\n    } catch (err) {\n      alert('Claim failed: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n      <div className=\"flex flex-1\">\n        <Sidebar isSidebarOpen={isSidebarOpen} />\n        <main className=\"flex-1 p-6 bg-gray-100 overflow-auto\">\n          <h1 className=\"text-2xl font-semibold mb-4\">Your Assigned Jobs</h1>\n          {error && (\n            <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>\n          )}\n          {loading ? (\n            <div>Loadingâ€¦</div>\n          ) : jobs.length === 0 ? (\n            <div className=\"text-gray-600\">No jobs assigned to your van.</div>\n          ) : (\n            <div className=\"space-y-4\">\n              {jobs.map(j => (\n                <div key={j._id} className=\"bg-white p-4 rounded shadow\">\n                  <div className=\"text-gray-800 mb-1\">\n                    <strong>Customer:</strong> {j.customer.name} ({j.customer.phone})\n                  </div>\n                  <div className=\"text-gray-700 mb-1\">\n                    <strong>Pickup:</strong> {j.pickupAddress.street}, {j.pickupAddress.area}, {j.pickupAddress.city}\n                  </div>\n                  <div className=\"text-gray-700 mb-1\">\n                    <strong>When:</strong>{' '}\n                    {j.type === 'scheduled'\n                      ? new Date(j.scheduledFor).toLocaleString()\n                      : 'ASAP'}\n                  </div>\n                  <div className=\"text-gray-700 mb-4\">\n                    <strong>Remark:</strong> {j.remark || <em>none</em>}\n                  </div>\n                  <button\n                    onClick={() => handleClaim(j._id)}\n                    className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 flex items-center gap-1\"\n                  >\n                    <FaCheck /> Claim\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["api","axios","create","baseURL","RiderJobsPanel","isSidebarOpen","setSidebarOpen","useState","jobs","setJobs","loading","setLoading","error","setError","useEffect","get","then","res","data","catch","finally","_jsxs","className","children","_jsx","Navbar","Sidebar","length","map","j","customer","name","phone","pickupAddress","street","area","city","type","Date","scheduledFor","toLocaleString","remark","onClick","async","patch","id","js","filter","_id","err","_err$response","_err$response$data","alert","response","message","handleClaim","FaCheck","interceptors","request","use","cfg","t","localStorage","getItem","headers","Authorization"],"sourceRoot":""}