{"version":3,"file":"static/js/7448.eca7d4bb.chunk.js","mappings":"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","sources":["pages/ImageMerger.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImageMerger = () => {\r\n  const [image1, setImage1] = useState(null);\r\n  const [image2, setImage2] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [mode, setMode] = useState('overlay');\r\n  const [top, setTop] = useState(0);\r\n  const [left, setLeft] = useState(0);\r\n  const [opacity, setOpacity] = useState(1.0);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Image1:', image1, 'Image2:', image2); // Debug: Check files\r\n    if (!image1 || !image2) {\r\n      setError('Please select two images');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('images', image1);\r\n    formData.append('images', image2);\r\n    formData.append('mode', mode);\r\n    formData.append('top', top);\r\n    formData.append('left', left);\r\n    formData.append('opacity', opacity);\r\n\r\n    // Debug: Log FormData entries\r\n    for (let [key, value] of formData.entries()) {\r\n      console.log(`FormData: ${key} =`, value);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/merge-images', formData);\r\n      console.log(response)\r\n      setResult(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Axios Error:', err); // Log full error\r\n      setError(err.response?.data?.error || err.message || 'An error occurred');\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"mb-4 text-2xl font-bold\">Merge Images</h1>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block\">First Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => setImage1(e.target.files[0])}\r\n            className=\"p-2 border\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block\">Second Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => setImage2(e.target.files[0])}\r\n            className=\"p-2 border\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block\">Mode:</label>\r\n          <select\r\n            value={mode}\r\n            onChange={(e) => setMode(e.target.value)}\r\n            className=\"p-2 border\"\r\n          >\r\n            <option value=\"overlay\">Overlay</option>\r\n            <option value=\"blend\">Blend</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block\">Top Offset (px):</label>\r\n          <input\r\n            type=\"number\"\r\n            value={top}\r\n            onChange={(e) => setTop(e.target.value)}\r\n            className=\"p-2 border\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block\">Left Offset (px):</label>\r\n          <input\r\n            type=\"number\"\r\n            value={left}\r\n            onChange={(e) => setLeft(e.target.value)}\r\n            className=\"p-2 border\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block\">Opacity (0 to 1):</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.1\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            value={opacity}\r\n            onChange={(e) => setOpacity(e.target.value)}\r\n            className=\"p-2 border\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"p-2 text-white bg-blue-500 rounded\">\r\n          Merge Images\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"mt-4 text-red-500\">{error}</p>}\r\n      {result && (\r\n        <div className=\"mt-4\">\r\n          <p>{result.message}</p>\r\n          <img src={`http://localhost:3001/${result.outputPath}`} alt=\"Merged\" className=\"max-w-full mt-2\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageMerger;"],"names":["ImageMerger","image1","setImage1","useState","image2","setImage2","result","setResult","error","setError","mode","setMode","top","setTop","left","setLeft","opacity","setOpacity","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","console","log","formData","FormData","append","key","value","entries","response","axios","post","data","err","_err$response","_err$response$data","message","type","accept","onChange","target","files","step","min","max","src","outputPath","alt"],"sourceRoot":""}