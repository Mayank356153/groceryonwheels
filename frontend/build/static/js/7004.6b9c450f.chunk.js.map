{"version":3,"file":"static/js/7004.6b9c450f.chunk.js","mappings":"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","sources":["../node_modules/file-saver/src/FileSaver.js","components/Accounts/AccountLedger.jsx"],"sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","// src/components/AccountLedger.jsx\r\nimport React, { useEffect, useState, useMemo } from 'react';\r\nimport { useParams, useLocation, Link } from 'react-router-dom';\r\nimport Navbar  from '../Navbar.jsx';\r\nimport Sidebar from '../Sidebar.jsx';\r\nimport axios   from 'axios';\r\nimport * as XLSX    from 'xlsx';\r\nimport { saveAs }   from 'file-saver';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\nimport { BiChevronRight }   from 'react-icons/bi';\r\n\r\nconst API_BASE = 'api';\r\n\r\nfunction parseQs(search) {\r\n  const p = new URLSearchParams(search);\r\n  return {\r\n    from: p.get('from') || '',\r\n    to:   p.get('to')   || '',\r\n    on:   p.get('on')   || new Date().toISOString().slice(0,10)\r\n  };\r\n}\r\n\r\nexport default function AccountLedger() {\r\n  const { accountId } = useParams();\r\n  const { search }   = useLocation();\r\n  const { from, to, on } = parseQs(search);\r\n\r\n  const [accountName, setAccountName] = useState('');\r\n  const [rows,        setRows]        = useState([]);\r\n  const [loading,     setLoading]     = useState(true);\r\n\r\n  // helper: list of YYYY-MM-DD between start/end\r\n  function dateRange(start, end) {\r\n    const out = [];\r\n    const cur = new Date(start);\r\n    const last = new Date(end);\r\n    while (cur <= last) {\r\n      out.push(cur.toISOString().slice(0,10));\r\n      cur.setDate(cur.getDate()+1);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    setLoading(true);\r\n\r\n    // 1) get the account so we can show its name\r\n    axios.get(`${API_BASE}/accounts/${accountId}`)\r\n      .then(res => {\r\n        if (!mounted) return;\r\n        const acct = res.data.data;\r\n        setAccountName(acct.accountName);\r\n\r\n        // 2) find which warehouse this account backs\r\n        return axios.get(`${API_BASE}/by-cash-account/${accountId}`);\r\n      })\r\n      .then(res2 => {\r\n        if (!mounted) return;\r\n        const warehouseId = res2.data.warehouseId;\r\n        // build list of dates to fetch\r\n        const dates = from && to ? dateRange(from, to) : [ on ];\r\n\r\n        // 3) fetch one summary per date\r\n        return Promise.all(dates.map(d =>\r\n          axios.get(`${API_BASE}/cash-summary`, {\r\n            params: { warehouseId, date: d }\r\n          })\r\n          .then(r => ({ date: d, ...r.data }))\r\n        ));\r\n      })\r\n      .then(results => {\r\n        if (mounted) setRows(results);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error loading ledger:\", err);\r\n        if (mounted) setRows([]);\r\n      })\r\n      .finally(() => {\r\n        if (mounted) setLoading(false);\r\n      });\r\n\r\n    return () => { mounted = false; };\r\n  }, [accountId, from, to, on]);\r\n\r\n  // Compute column keys once\r\n  const columns = useMemo(() => {\r\n    return rows.length ? Object.keys(rows[0]) : [];\r\n  }, [rows]);\r\n\r\n  // Compute totals for each column (sum numeric values only)\r\n  const totals = useMemo(() => {\r\n    const t = {};\r\n    columns.forEach(col => {\r\n      const sum = rows.reduce((acc, r) => {\r\n        const val = r[col];\r\n        if (typeof val === 'number' && !isNaN(val)) {\r\n          return acc + val;\r\n        }\r\n        // if value is string or something else, try Number()\r\n        const num = Number(val);\r\n        return !isNaN(num) ? acc + num : acc;\r\n      }, 0);\r\n      t[col] = sum;\r\n    });\r\n    return t;\r\n  }, [rows, columns]);\r\n\r\n  // CSV export (with UTF-8 BOM)\r\n  const exportCSV = () => {\r\n    if (!rows.length) return;\r\n    const header = Object.keys(rows[0]);\r\n    const lines = [\r\n      header.join(','),\r\n      ...rows.map(r =>\r\n        header.map(k => `\"${(r[k] ?? '').toString().replace(/\"/g,'\"\"')}\"`).join(',')\r\n      )\r\n    ].join('\\n');\r\n\r\n    // Append a totals row at the end of CSV\r\n    const totalLine = header.map((col, idx) => {\r\n      if (idx === 0) return `\"Total\"`;\r\n      const val = totals[col];\r\n      // Only include a number if it's non-zero; otherwise leave it blank\r\n      return val !== 0 ? `\"${val}\"` : `\"\"`;\r\n    }).join(',');\r\n    const csv = '\\uFEFF' + lines + '\\n' + totalLine;\r\n\r\n    saveAs(\r\n      new Blob([csv], { type: 'text/csv;charset=utf-8;' }),\r\n      `ledger-${accountName || accountId}.csv`\r\n    );\r\n  };\r\n\r\n  // Excel export\r\n  const exportExcel = () => {\r\n    if (!rows.length) return;\r\n    // Build a copy of rows plus one final \"total\" row\r\n    const dataWithTotal = [\r\n      ...rows,\r\n      columns.reduce((acc, col, idx) => {\r\n        if (idx === 0) {\r\n          acc[col] = 'Total';\r\n        } else {\r\n          const val = totals[col];\r\n          acc[col] = val !== 0 ? val : '';\r\n        }\r\n        return acc;\r\n      }, {})\r\n    ];\r\n\r\n    const ws = XLSX.utils.json_to_sheet(dataWithTotal);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Ledger');\r\n    const wbout = XLSX.write(wb, { bookType:'xlsx', type:'array' });\r\n    saveAs(\r\n      new Blob([wbout], { type:'application/octet-stream' }),\r\n      `ledger-${accountName || accountId}.xlsx`\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex flex-col h-screen\">\r\n        <Navbar />\r\n        <div className=\"flex flex-grow\">\r\n          <Sidebar />\r\n          <main className=\"flex-grow p-4\">Loading…</main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Navbar />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar />\r\n        <main className=\"flex-grow p-4 overflow-x-auto bg-gray-50\">\r\n          <nav className=\"flex items-center text-gray-500 text-sm mb-4\">\r\n            <Link to=\"/account-list\" className=\"flex items-center\">\r\n              <FaTachometerAlt className=\"mr-1\" /> Accounts\r\n            </Link>\r\n            <BiChevronRight className=\"mx-2\" />\r\n            <span>Ledger</span>\r\n          </nav>\r\n\r\n          <h2 className=\"text-xl font-bold mb-4\">\r\n            Ledger for <span className=\"text-indigo-600\">{accountName}</span>\r\n          </h2>\r\n\r\n          <div className=\"mb-4 space-x-2\">\r\n            <button\r\n              onClick={exportCSV}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded\"\r\n            >\r\n              Export CSV\r\n            </button>\r\n            <button\r\n              onClick={exportExcel}\r\n              className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n            >\r\n              Export Excel\r\n            </button>\r\n          </div>\r\n\r\n          {rows.length > 0 ? (\r\n            <div className=\"overflow-x-auto bg-white rounded shadow\">\r\n              <table className=\"min-w-full text-sm\">\r\n                <thead className=\"bg-gray-200\">\r\n                  <tr>\r\n                    {columns.map(col => (\r\n                      <th key={col} className=\"border p-2\">{col}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.map((r, i) => (\r\n                    <tr key={i} className=\"hover:bg-gray-50\">\r\n                      {columns.map((k, j) => (\r\n                        <td key={j} className=\"border p-2\">\r\n                          {r[k]?.toString() ?? ''}\r\n                        </td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n                <tfoot className=\"bg-gray-100 font-semibold\">\r\n                  <tr>\r\n                    {columns.map((col, idx) => (\r\n                      <td key={col} className=\"border p-2\">\r\n                        {idx === 0\r\n                          ? 'Total'\r\n                          : (totals[col] !== 0 ? totals[col] : '')\r\n                        }\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-center py-8\">No ledger summary found.</p>\r\n          )}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["b","a","autoBom","console","warn","test","type","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","API_BASE","AccountLedger","accountId","useParams","search","useLocation","from","to","on","p","URLSearchParams","get","Date","toISOString","slice","parseQs","accountName","setAccountName","useState","rows","setRows","loading","setLoading","useEffect","mounted","axios","then","res","acct","data","res2","warehouseId","dates","start","end","out","cur","last","push","setDate","getDate","dateRange","Promise","all","map","params","date","r","results","catch","err","finally","columns","useMemo","length","Object","keys","totals","t","forEach","col","sum","reduce","acc","val","isNaN","num","Number","_jsxs","className","children","_jsx","Navbar","Sidebar","Link","FaTachometerAlt","BiChevronRight","onClick","exportCSV","header","csv","join","_r$k","toString","idx","exportExcel","dataWithTotal","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","wbout","bookType","_r$k$toString","_r$k2"],"sourceRoot":""}