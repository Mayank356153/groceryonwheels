{"version":3,"file":"static/js/3366.2a48b768.chunk.js","mappings":"sKAGe,SAASA,IACpB,MAAMC,EAAcC,IAAgBC,EAAAA,EAAAA,WAAS,GAC7C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAEvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,OAI1BM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mFAAkFC,UACjGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uFACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2CAA0CC,SAAC,yBAOlE,C,uJChBF,MACMI,EAAY,IAAIC,MAAM,wBACtBC,EAAY,IAAID,MAAM,2BAC5B,SAASE,EAASC,GAChB,IACEA,EAAIC,QACJD,EAAIE,YAAc,EAClBF,EAAIG,MACN,CAAE,MACF,CACF,CA+eA,QA3eA,WACE,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,IAAgBC,EAAAA,EAAAA,MACjBC,EAAKF,EAAaG,IAAI,OAErBtB,EAAeC,IAAkBC,EAAAA,EAAAA,WAAS,IAC1CqB,EAASC,IAA2BtB,EAAAA,EAAAA,WAAS,IAGpDuB,EAAAA,EAAAA,YAAU,KAAYC,OAAOC,WAAa,KAAK1B,GAAe,EAAM,GAAK,IAEzE,MAAO2B,EAAYC,IAAqC3B,EAAAA,EAAAA,UAAS,KAC1D4B,EAAYC,IAAqC7B,EAAAA,EAAAA,UAAS,KAC1D8B,EAA0BC,IAAuB/B,EAAAA,EAAAA,UAAS,KAC1DgC,EAAaC,IAAoCjC,EAAAA,EAAAA,UAAS,KAC1DkC,EAAeC,IAAkCnC,EAAAA,EAAAA,UAAS,KAE1DoC,EAAUC,IAAerC,EAAAA,EAAAA,UAAS,CACvCsC,cAAe,IAAIC,MAAOC,mBAAmB,SAC7CC,cAAe,GACfC,YAAe,GACfC,QAAe,GACfC,KAAe,KA0BXC,EAAaC,iBAAiD,IAA1CC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGZ,EAASK,cAC/C,IACEnB,GAAW,GACX,MAAM6B,EAASC,aAAaC,QAAQ,SAC9BC,EAASP,EAAc,CAAEQ,UAAWR,GAAgB,CAAC,GACrD,KAAES,SAAeC,EAAAA,EAAMrC,IAAI,aAAoB,CACnDsC,QAAS,CAAEC,cAAe,UAAUR,KACpCG,WAIIM,GAFQJ,EAAKA,MAAQ,IAGxBK,KAAIC,IAAS,IAADC,EACX,MAAMC,EAAQC,QAAQH,EAAKI,cAC3B,MAAO,IACFJ,EACHK,SAAeH,EAAQF,EAAKI,aAAeJ,EAAKM,IAChDC,UAAeL,EAAQF,EAAKM,IAAe,KAC3CE,YAAeN,EACE,GAAGF,EAAKS,cAAcT,EAAKU,aAAe,YAC1CV,EAAKS,SACtBE,SAAeX,EAAKW,UAAa,GACjCC,SAA4B,QAAbX,EAAAD,EAAKa,gBAAQ,IAAAZ,OAAA,EAAbA,EAAgB,KAAM,GACrCY,SAAeb,EAAKa,UAAY,GAChCC,UAAeZ,EACfa,aAAef,EAAKe,cAAgB,EACpCtB,UAAeO,EAAKP,UACrB,IAEFuB,QAAOC,GAAMA,EAAGF,aAAe,IAIlC,OAFAhD,EAAY+B,GACZ7B,EAAY6B,GACLA,CACT,CAAE,MAAOoB,GACPC,QAAQC,MAAM,SAAUF,EAAIG,SAC5BtD,EAAY,IAAKE,EAAY,GAC/B,CAAC,QAAWT,GAAW,EAAQ,CACjC,GAgDAC,EAAAA,EAAAA,YAAU,KA5GcuB,WACtB,IACExB,GAAW,GACX,MAAM6B,EAAQC,aAAaC,QAAQ,UAC7B,KAAEG,SAAeC,EAAAA,EAAMrC,IAAI,kBAAyB,CACxDsC,QAAS,CAAEC,cAAe,UAAUR,OAEhCiC,EAAO5B,EAAKA,MAAQ,GAG1B,GAFA7B,EAAcyD,IAETjE,GAAMiE,EAAKnC,OAAQ,CAAC,IAADoC,EACtB,MAAMC,EAAaF,EAAKG,MAAKC,GAAKA,EAAEC,cAA6B,WAAbD,EAAEE,SAChDC,EAAaL,EACfA,EAAWlB,KAC0B,QAArCiB,EAAAD,EAAKG,MAAKC,GAAkB,WAAbA,EAAEE,gBAAoB,IAAAL,OAAA,EAArCA,EAAuCjB,MAAO,GAClD/B,GAAYuD,IAAI,IAAUA,EAAMnD,cAAekD,KACjD,CACF,CAAE,MAAOX,GAAOC,QAAQC,MAAM,cAAeF,EAAIG,QAAU,CAAC,QAClD7D,GAAW,EAAQ,GA2F9BuE,EAAiB,GAChB,KACFtE,EAAAA,EAAAA,YAAU,KACJa,EAASK,cAAeI,EAAWT,EAASK,gBACzCZ,EAAY,IAAKE,EAAY,IAAK,GACxC,CAACK,EAASK,iBAEblB,EAAAA,EAAAA,YAAU,KACNJ,GAtDsB2B,WACxB,IAAK,IAADgD,EAAAC,EAAAC,EAAAC,EACF3E,GAAW,GACX,MAAM6B,EAAQC,aAAaC,QAAQ,UAC7B,KAAEG,SAAeC,EAAAA,EAAMrC,IAAI,wBAA8B8E,IAAc,CAC3ExC,QAAS,CAAEC,cAAe,UAAUR,OAEhCgD,EAAK3C,EAAKA,KAEhBnB,EAAY,CACVC,cAA8B,QAAfwD,EAAAK,EAAG7D,oBAAY,IAAAwD,OAAA,EAAfA,EAAiBM,MAAM,KAAK,KAAM,GACjD3D,eAA+B,QAAhBsD,EAAAI,EAAG1D,qBAAa,IAAAsD,OAAA,EAAhBA,EAAkB3B,MAAO,GACxC1B,aAA6B,QAAdsD,EAAAG,EAAGzD,mBAAW,IAAAsD,OAAA,EAAdA,EAAgB5B,MAAS,GACxCzB,QAAewD,EAAGxD,SAAW,GAC7BC,KAAeuD,EAAGvD,MAAW,KAG/B,IAAIyD,EAAO,GACI,QAApBJ,EAAIE,EAAG1D,qBAAa,IAAAwD,GAAhBA,EAAkB7B,MACpBiC,QAAaxD,EAAWsD,EAAG1D,cAAc2B,MAG3C,MAAMkC,GAAUH,EAAGI,OAAS,IAAI1C,KAAIkB,IAAO,IAADyB,EAAAC,EACxC,MAAMC,EAAML,EAAKd,MAAKoB,IAAC,IAAAC,EAAA,OAAID,EAAEvC,QAAgB,QAAPwC,EAAA7B,EAAGjB,YAAI,IAAA8C,OAAA,EAAPA,EAASxC,MAAOW,EAAGjB,KAAK,KAAK,CAAC,EACzD+C,EAAU9B,EAAG+B,UAAY,EAC7BC,EAAYL,EAAI7B,cAAgB,EACtC,MAAO,CACLmC,QAAoB,QAAPR,EAAAzB,EAAGjB,YAAI,IAAA0C,OAAA,EAAPA,EAASpC,MAAOW,EAAGjB,KAChCS,SAAamC,EAAIpC,cAAsB,QAAXmC,EAAI1B,EAAGjB,YAAI,IAAA2C,OAAA,EAAPA,EAASlC,WAAY,eACrDuC,SAAaD,EACbA,QAAaA,EAEbI,OAAaF,EAAYF,EACzBjC,UAAa8B,EAAI9B,YAAa,EAC9BJ,YAAakC,EAAIlC,aAAe,GACjC,IAECrC,EAAiBmE,EACnB,CAAE,MAAOtB,GACPC,QAAQC,MAAM,iBAAkBF,EAAIG,SACpC+B,MAAM,+BACR,CAAC,QAAW5F,GAAW,EAAQ,GAazB6F,CAAkBhG,EAAG,GAC5B,CAACA,KAGFI,EAAAA,EAAAA,YAAU,KACR,GAAIa,EAASK,cAAe,CAC1B,MAAM2E,EAAIxF,EAASkD,QAAOC,IAAE,IAAAsC,EAAA,OAAgB,QAAZA,EAAAtC,EAAGxB,iBAAS,IAAA8D,OAAA,EAAZA,EAAcjD,OAAQhC,EAASK,aAAa,IAC5EV,EAAYqF,GACPjG,GAAIgB,EAAiB,GAC5B,MACEJ,EAAY,IACPZ,GAAIgB,EAAiB,GAC5B,GACC,CAACC,EAASK,cAAeb,EAAUT,IAGtC,MAAMmG,EAAWtF,EACbF,EAAyBgD,QAAOC,IAC9B,MAAMwC,EAAIvF,EAAYwF,cACtB,OACEzC,EAAGT,YAAYkD,cAAcC,SAASF,IACtCxC,EAAGN,SAAY+C,cAAcC,SAASF,IACrCxC,EAAGL,SAAWK,EAAGL,QAAQ8C,cAAcC,SAASF,EAAG,IAGxD,GAGEG,EAAiB5D,IACrB,IAAKA,EAAM,OAGX,IAAKA,EAAKe,cAAgB,IAAM,EAK9B,YAJAqC,MACE,GAAGpD,EAAKQ,wBAAwBR,EAAKe,cAAgB,yDAMzD,MAAM8C,EAASzF,EAAcqD,MAAKR,GAAMA,EAAGiC,SAAWlD,EAAKM,MAE3D,GAAIuD,EAAQ,CAEV,GAAIA,EAAOb,UAAYa,EAAOV,OAE5B,YADAC,MAAM,2BAA2BS,EAAOV,WAG1C9E,EACED,EAAc2B,KAAIkB,GAChBA,EAAGiC,SAAWlD,EAAKM,IAAM,IAAKW,EAAI+B,SAAU/B,EAAG+B,SAAW,GAAM/B,KAGpErE,EAASD,EACX,MACE0B,EAAiB,IACZD,EACH,CACE8E,OAAYlD,EAAKM,IACjBG,SAAYT,EAAKQ,YACjBwC,SAAY,EACZG,OAAYnD,EAAKe,aACjBD,UAAYd,EAAKc,UACjBJ,YAAaV,EAAKU,eAGtB9D,EAASH,GAEX0B,EAAe,GAAG,EAwEpB,OAAIZ,GAAgBjB,EAAAA,EAAAA,KAACP,EAAAA,EAAa,KAGhCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACjDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACP,cAAeA,EAAeC,eAAgBA,KACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACR,cAAeA,KAExBG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAE5BF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,0FAAyFC,SAAA,EACzGF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAClCgB,EAAK,sBAAwB,wBAEhCf,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SACpCgB,EAAK,2BAA6B,4BAGvClB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCC,SAAA,EACtDF,EAAAA,EAAAA,MAAA,KAAG2H,KAAK,aAAa1H,UAAU,wCAAuCC,SAAA,EACpEC,EAAAA,EAAAA,KAACyH,EAAAA,IAAe,CAAC3H,UAAU,SAAS,YAEtCE,EAAAA,EAAAA,KAAC0H,EAAAA,IAAc,CAAC5H,UAAU,UAC1BE,EAAAA,EAAAA,KAAA,KAAGwH,KAAK,iBAAiB1H,UAAU,sBAAqBC,SAAC,+BAO7DF,EAAAA,EAAAA,MAAA,QACE8H,SAjFWjF,UAEnB,GADAkF,EAAEC,kBACG7F,EAASE,eAAiBF,EAASK,gBAAkBL,EAASM,YACjE,OAAOwE,MAAM,mCACf,GAAI9E,EAASK,gBAAkBL,EAASM,YACtC,OAAOwE,MAAM,0CACf,GAA6B,IAAzBhF,EAAce,OAChB,OAAOiE,MAAM,0BAEf,IAAK,MAAMgB,KAAOhG,EAAe,CAAC,IAADiG,EACnC,MAEMC,GAFUF,EAAIrB,SAAW,KACyB,QAAxCsB,EAAAvG,EAAS2D,MAAKoB,GAAKA,EAAEvC,MAAQ8D,EAAIlB,gBAAO,IAAAmB,OAAA,EAAxCA,EAA0CtD,eAAgB,GAG1E,GAAIqD,EAAIpB,SAAWsB,EACjB,OAAOlB,MACL,mBAAmBgB,EAAIpB,qBAAgBoB,EAAI3D,wBACnC6D,qCAGd,CAEI9G,GAAW,GACX,IACE,MAAM+G,EAAU,IACXjG,EACHmE,MAAOrE,EAAc2B,KAAIkB,IAAE,CACzBjB,KAAUiB,EAAGiC,OACbF,SAAU/B,EAAG+B,cAGX3D,EAAQC,aAAaC,QAAQ,SAC/BlC,SACIsC,EAAAA,EAAM6E,IAAI,wBAA8BnH,IAAMkH,EAClD,CAAE3E,QAAS,CAAEC,cAAe,UAAUR,OACxC+D,MAAM,mCAEAzD,EAAAA,EAAM8E,KAAK,uBAAkCF,EACjD,CAAE3E,QAAS,CAAEC,cAAe,UAAUR,OACxC+D,MAAM,4BAERnG,EAAS,iBACX,CAAE,MAAOiE,GAAM,IAADwD,EAAAC,EACZxD,QAAQC,MAAM,UAAWF,GACzBkC,OAAkB,QAAZsB,EAAAxD,EAAI0D,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAchF,YAAI,IAAAiF,OAAN,EAAZA,EAAoBtD,UAAW,iBACvC,CAAC,QAAW7D,GAAW,EAAQ,GAqCvBpB,UAAU,yDAAwDC,SAAA,EAIlEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,mBAC5CC,EAAAA,EAAAA,KAAA,SACEuI,KAAK,OACLC,MAAOxG,EAASE,aAChBuG,SAAUb,GAAK3F,EAAY,IAAKD,EAAUE,aAAc0F,EAAEc,OAAOF,QACjE1I,UAAU,kCACV6I,UAAQ,QAIZ9I,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,oBAC5CF,EAAAA,EAAAA,MAAA,UACE2I,MAAOxG,EAASK,cAChBoG,SAAUb,GAAK3F,EAAY,IAAKD,EAAUK,cAAeuF,EAAEc,OAAOF,QAClE1I,UAAU,kCACV6I,UAAQ,EAAA5I,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQwI,MAAM,GAAEzI,SAAC,qBAChBuB,EAAWmC,KAAI2B,IACdpF,EAAAA,EAAAA,KAAA,UAAoBwI,MAAOpD,EAAEpB,IAAIjE,SAAEqF,EAAEwD,eAAxBxD,EAAEpB,cAKrBnE,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,kBAC5CF,EAAAA,EAAAA,MAAA,UACE2I,MAAOxG,EAASM,YAChBmG,SAAUb,GAAK3F,EAAY,IAAKD,EAAUM,YAAasF,EAAEc,OAAOF,QAChE1I,UAAU,kCACV6I,UAAQ,EAAA5I,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQwI,MAAM,GAAEzI,SAAC,qBAChBuB,EAAWmC,KAAI2B,IACdpF,EAAAA,EAAAA,KAAA,UAAoBwI,MAAOpD,EAAEpB,IAAIjE,SAAEqF,EAAEwD,eAAxBxD,EAAEpB,iBAOvBnE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,aAC5CC,EAAAA,EAAAA,KAAA,SACEuI,KAAK,OACLC,MAAOxG,EAASO,QAChBkG,SAAUb,GAAK3F,EAAY,IAAKD,EAAUO,QAASqF,EAAEc,OAAOF,QAC5D1I,UAAU,wCAGdD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,UAC5CC,EAAAA,EAAAA,KAAA,SACEuI,KAAK,OACLC,MAAOxG,EAASQ,KAChBiG,SAAUb,GAAK3F,EAAY,IAAKD,EAAUQ,KAAMoF,EAAEc,OAAOF,QACzD1I,UAAU,2CAMhBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,iBAC5CC,EAAAA,EAAAA,KAAA,SACEuI,KAAK,OACLM,YAAY,wBACZL,MAAO5G,EACP6G,SAAUb,IACR,MAAMkB,EAAMlB,EAAEc,OAAOF,MAAMO,OAC3BlH,EAAeiH,GAEf,MAAME,EAAMxH,EAAS2D,MACnBoB,IAAC,IAAA0C,EAAA,OAAc,QAAVA,EAAA1C,EAAEhC,gBAAQ,IAAA0E,OAAA,EAAVA,EAAY5B,SAASyB,KAAQvC,EAAElC,WAAayE,CAAG,IAElDE,GAAK1B,EAAc0B,EAAI,EAE7BE,UAAWtB,IACV,UAAVA,EAAEuB,KACJvB,EAAEC,gBAEJ,EAEa/H,UAAU,kCACVsJ,UAAWpH,EAASK,gBAErBT,GAAesF,EAASrE,OAAS,IAChC7C,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oFAAmFC,SAC9FmH,EAASzD,KAAIkB,IACZ9E,EAAAA,EAAAA,MAAA,MAEEC,UAAU,uCACVuJ,QAASA,IAAM/B,EAAc3C,GAAI5E,SAAA,EAEjCC,EAAAA,EAAAA,KAAA,UAAAD,SAAS4E,EAAGN,WAAkB,WAAIM,EAAGT,YACpCS,EAAGH,UAAY,KAAKG,EAAGP,eAAiB,GACxCO,EAAGL,UAAWzE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,CAAC,WAAI4E,EAAGL,aANjDK,EAAGX,aAclBnE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,EAC/DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DC,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,eACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAC,SACnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAC,cAGX,IAAzB+B,EAAce,SACb7C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gCAA+BC,SAAC,oBAGhD+B,EAAc2B,KAAIqE,IACjBjI,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,uCAAsCC,SAAA,EACpEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAE+H,EAAI3D,YAE5BtE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEuI,KAAK,SACLe,IAAI,IACJC,IAAKzB,EAAIjB,OACT2B,MAAOV,EAAIpB,SACX+B,SAAUb,GA1OL4B,EAACzI,EAAI+H,KAC5B/G,EAAiBD,EAAc2B,KAAIkB,IACjC,GAAIA,EAAGiC,SAAW7F,EAAI,OAAO4D,EAE7B,MAAM8E,EAASC,SAASZ,EAAK,KAAO,EAC9Ba,EAAShF,EAAGkC,OAClB,OAAI4C,EAAOE,GACT7C,MAAM,6CAA6C6C,MAC5C,IAAKhF,EAAI+B,SAAUiD,IAErB,IAAKhF,EAAI+B,SAAU+C,EAAM,IAC/B,EA+N8BD,CAAiB1B,EAAIlB,OAAQgB,EAAEc,OAAOF,OACrD1I,UAAU,qCAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,CAAC,OAAK+H,EAAIjB,cAGlD7G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,UACEuI,KAAK,SACLc,QAASA,IApOJtI,IACvBgB,EAAiBD,EAAc4C,QAAOC,GAAMA,EAAGiC,SAAW7F,KAmOzB6I,CAAiB9B,EAAIlB,QACpC9G,UAAU,0CAAyCC,SACpD,eApBK+H,EAAIlB,cA6BlB/G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UACEuI,KAAK,SACLzI,UAAU,oEAAmEC,SAE5EgB,EAAK,SAAW,UAEnBf,EAAAA,EAAAA,KAAA,UACEuI,KAAK,SACLc,QAASA,IAAM1I,EAAS,kBACxBb,UAAU,oEAAmEC,SAC9E,yBASf,C","sources":["Loading.jsx","components/Stock/AddStockTransfer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Navbar.jsx\";\r\nimport Sidebar from \"../Sidebar.jsx\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\n\r\n/* Change this if your base URL differs */\r\nconst API = \"\";\r\nconst sndNew    = new Audio(\"/sounds/beep-new.mp3\");\r\nconst sndRepeat = new Audio(\"/sounds/beep-repeat.mp3\");\r\nfunction playBeep(snd) {\r\n  try {\r\n    snd.pause();\r\n    snd.currentTime = 0;\r\n    snd.play();\r\n  } catch {\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction AddStockTransfer() {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const id = searchParams.get(\"id\");          // editing?\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [loading, setLoading]              = useState(false);\r\n\r\n  /* ───────── sidebar collapse on mobile ───────── */\r\n  useEffect(() => { if (window.innerWidth < 768) setSidebarOpen(false); }, []);\r\n\r\n  const [warehouses, setWarehouses]                     = useState([]);\r\n  const [allItems,   setAllItems]                       = useState([]);\r\n  const [filteredItemsByWarehouse, setFiltered]         = useState([]);\r\n  const [searchQuery, setSearchQuery]                   = useState(\"\");\r\n  const [selectedItems, setSelectedItems]               = useState([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    transferDate : new Date().toLocaleDateString(\"en-CA\"),   // YYYY-MM-DD (IST)\r\n    fromWarehouse: \"\",\r\n    toWarehouse  : \"\",\r\n    details      : \"\",\r\n    note         : \"\",\r\n  });\r\n\r\n  /* ───────────────── WAREHOUSES ───────────────── */\r\n  const fetchWarehouses = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const { data } = await axios.get(`${API}/api/warehouses`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const list = data.data || [];\r\n      setWarehouses(list);\r\n\r\n      if (!id && list.length) {\r\n        const restricted = list.find(w => w.isRestricted && w.status === \"Active\");\r\n        const defFrom    = restricted\r\n          ? restricted._id\r\n          : list.find(w => w.status === \"Active\")?._id || \"\";\r\n        setFormData(prev => ({ ...prev, fromWarehouse: defFrom }));\r\n      }\r\n    } catch (err) { console.error(\"warehouses:\", err.message); }\r\n    finally { setLoading(false); }\r\n  };\r\n\r\n  /* ───────────────── ITEMS FOR A SOURCE WAREHOUSE ───────────────── */\r\n  const fetchItems = async (warehouseId = formData.fromWarehouse) => {\r\n    try {\r\n      setLoading(true);\r\n      const token  = localStorage.getItem(\"token\");\r\n      const params = warehouseId ? { warehouse: warehouseId } : {};\r\n      const { data } = await axios.get(`${API}/api/items`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params,\r\n      });\r\n      const items = data.data || [];\r\n\r\n      const flat = items\r\n        .map(item => {\r\n          const isVar = Boolean(item.parentItemId);\r\n          return {\r\n            ...item,\r\n            parentId     : isVar ? item.parentItemId : item._id,\r\n            variantId    : isVar ? item._id          : null,\r\n            displayName  : isVar\r\n                           ? `${item.itemName} / ${item.variantName || \"Variant\"}`\r\n                           : item.itemName,\r\n            itemCode     : item.itemCode  || \"\",\r\n            barcode      : item.barcodes?.[0] || \"\",\r\n            barcodes     : item.barcodes || [],\r\n            isVariant    : isVar,\r\n            currentStock : item.currentStock || 0,\r\n            warehouse    : item.warehouse,\r\n          };\r\n        })\r\n        .filter(it => it.currentStock > 0);  // only positive stock\r\n\r\n      setAllItems(flat);\r\n      setFiltered(flat);\r\n      return flat; \r\n    } catch (err) {\r\n      console.error(\"items:\", err.message);\r\n      setAllItems([]); setFiltered([]);\r\n    } finally { setLoading(false); }\r\n  };\r\n\r\n  /* ───────────────── EXISTING TRANSFER (edit mode) ───────────────── */\r\n  const loadStockTransfer = async (transferId) => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem(\"token\");\r\n      const { data } = await axios.get(`${API}/api/stock-transfers/${transferId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const tr = data.data;\r\n\r\n      setFormData({\r\n        transferDate : tr.transferDate?.split(\"T\")[0] || \"\",\r\n        fromWarehouse: tr.fromWarehouse?._id || \"\",\r\n        toWarehouse  : tr.toWarehouse?._id   || \"\",\r\n        details      : tr.details || \"\",\r\n        note         : tr.note    || \"\",\r\n      });\r\n\r\n      let live = [];\r\n if (tr.fromWarehouse?._id) {\r\n   live = await fetchItems(tr.fromWarehouse._id);   // ← get the list back\r\n }\r\n\r\n const mapped = (tr.items || []).map(it => {\r\n   const doc = live.find(i => i._id === (it.item?._id || it.item)) || {};\r\n        const origQty = it.quantity || 1;\r\n    const liveStock = doc.currentStock || 0;\r\n    return {\r\n      itemId     : it.item?._id || it.item,\r\n      itemName   : doc.displayName || it.item?.itemName || \"Unknown Item\",\r\n      quantity   : origQty,\r\n      origQty    : origQty,\r\n      // allow up to “original + whatever’s back in stock” minus one\r\n      maxQty     : liveStock + origQty,\r\n      isVariant  : doc.isVariant || false,\r\n      variantName: doc.variantName || \"\",\r\n    };\r\n      });\r\n      setSelectedItems(mapped);\r\n    } catch (err) {\r\n      console.error(\"load transfer:\", err.message);\r\n      alert(\"Error loading stock transfer\");\r\n    } finally { setLoading(false); }\r\n  };\r\n\r\n  /* ───────────────── EFFECTS ───────────────── */\r\n  useEffect(() => {                     // ✅ React sees a plain function\r\n   fetchWarehouses();                  //    we still call the async helper\r\n }, []);\r\n  useEffect(() => {\r\n    if (formData.fromWarehouse) fetchItems(formData.fromWarehouse);\r\n    else { setAllItems([]); setFiltered([]); }\r\n  }, [formData.fromWarehouse]);\r\n\r\n  useEffect(() => {\r\n  if (id) loadStockTransfer(id);\r\n}, [id]); \r\n\r\n  /* filter list strictly to the chosen warehouse (safety) */\r\n  useEffect(() => {\r\n    if (formData.fromWarehouse) {\r\n      const f = allItems.filter(it => it.warehouse?._id === formData.fromWarehouse);\r\n      setFiltered(f);\r\n      if (!id) setSelectedItems([]);   // reset when user switches warehouse\r\n    } else {\r\n      setFiltered([]);\r\n      if (!id) setSelectedItems([]);\r\n    }\r\n  }, [formData.fromWarehouse, allItems, id]);\r\n\r\n  /* ───────────────── SEARCH (autocomplete) ───────────────── */\r\n  const dropdown = searchQuery\r\n    ? filteredItemsByWarehouse.filter(it => {\r\n        const q = searchQuery.toLowerCase();\r\n        return (\r\n          it.displayName.toLowerCase().includes(q) ||\r\n          it.itemCode   .toLowerCase().includes(q) ||\r\n          (it.barcode && it.barcode.toLowerCase().includes(q))\r\n        );\r\n      })\r\n    : [];\r\n\r\n  /* ───────────────── ADD ITEM (with stock check) ───────────────── */\r\n  const handleAddItem = (item) => {\r\n    if (!item) return;\r\n\r\n    // 🆕 deny if stock ≤ 1\r\n    if ((item.currentStock || 0) <= 0) {\r\n      alert(\r\n        `${item.displayName} has only ${item.currentStock || 0} in stock.\\n` +\r\n        \"You must leave at least one unit behind.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const exists = selectedItems.find(it => it.itemId === item._id);\r\n\r\n    if (exists) {\r\n      // increment but respect max\r\n      if (exists.quantity >= exists.maxQty) {\r\n        alert(`Max transferable qty is ${exists.maxQty}.`);\r\n        return;\r\n      }\r\n      setSelectedItems(\r\n        selectedItems.map(it =>\r\n          it.itemId === item._id ? { ...it, quantity: it.quantity + 1 } : it\r\n        )\r\n      );\r\n      playBeep(sndRepeat); \r\n    } else {\r\n      setSelectedItems([\r\n        ...selectedItems,\r\n        {\r\n          itemId    : item._id,\r\n          itemName  : item.displayName,\r\n          quantity  : 1,\r\n          maxQty    : item.currentStock ,   // 🆕 must leave 1\r\n          isVariant : item.isVariant,\r\n          variantName: item.variantName,\r\n        },\r\n      ]);\r\n      playBeep(sndNew);  \r\n    }\r\n    setSearchQuery(\"\");\r\n  };\r\n\r\n  /* ───────────────── UPDATE QTY ───────────────── */\r\n  const handleItemChange = (id, val) => {\r\n    setSelectedItems(selectedItems.map(it => {\r\n      if (it.itemId !== id) return it;\r\n\r\n      const want   = parseInt(val, 10) || 1;\r\n      const allow  = it.maxQty;\r\n      if (want > allow) {\r\n        alert(`Stock limit exceeded. Max transferable is ${allow}.`);\r\n        return { ...it, quantity: allow };\r\n      }\r\n      return { ...it, quantity: want };\r\n    }));\r\n  };\r\n\r\n  /* ───────────────── REMOVE ITEM ───────────────── */\r\n  const handleRemoveItem = id =>\r\n    setSelectedItems(selectedItems.filter(it => it.itemId !== id));\r\n\r\n  /* ───────────────── SUBMIT ───────────────── */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.transferDate || !formData.fromWarehouse || !formData.toWarehouse)\r\n      return alert(\"Fill date, From & To warehouse.\");\r\n    if (formData.fromWarehouse === formData.toWarehouse)\r\n      return alert(\"Cannot transfer to the same warehouse.\");\r\n    if (selectedItems.length === 0)\r\n      return alert(\"Add at least one item.\");\r\n\r\n    for (const sel of selectedItems) {\r\n  const orig    = sel.origQty || 0\r\n  const live    = allItems.find(i => i._id === sel.itemId)?.currentStock || 0\r\n  const avail   = orig + live\r\n\r\n  if (sel.quantity > avail) {\r\n    return alert(\r\n      `Cannot transfer ${sel.quantity} of “${sel.itemName}”. ` +\r\n      `Only ${avail} available to transfer right now.`\r\n    )\r\n  }\r\n}\r\n\r\n    setLoading(true);\r\n    try {\r\n      const payload = {\r\n        ...formData,\r\n        items: selectedItems.map(it => ({\r\n          item    : it.itemId,\r\n          quantity: it.quantity,\r\n        })),\r\n      };\r\n      const token = localStorage.getItem(\"token\");\r\n      if (id) {\r\n        await axios.put(`${API}/api/stock-transfers/${id}`, payload,\r\n          { headers: { Authorization: `Bearer ${token}` } });\r\n        alert(\"Stock transfer updated!\");\r\n      } else {\r\n        await axios.post(`${API}/api/stock-transfers`,     payload,\r\n          { headers: { Authorization: `Bearer ${token}` } });\r\n        alert(\"Stock transfer created!\");\r\n      }\r\n      navigate(\"/transfer-list\");\r\n    } catch (err) {\r\n      console.error(\"submit:\", err);\r\n      alert(err.response?.data?.message || \"Submit failed.\");\r\n    } finally { setLoading(false); }\r\n  };\r\n\r\n  /* ───────────────── RENDER ───────────────── */\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n\r\n        <div className=\"flex-grow p-4\">\r\n          {/* Header */}\r\n          <header className=\"flex flex-col items-center justify-between p-4 mb-2 bg-white rounded shadow md:flex-row\">\r\n            <div className=\"flex items-baseline gap-2\">\r\n              <h1 className=\"text-xl font-semibold\">\r\n                {id ? \"Edit Stock Transfer\" : \"Add Stock Transfer\"}\r\n              </h1>\r\n              <span className=\"text-sm text-gray-600\">\r\n                {id ? \"Update existing transfer\" : \"Create new transfer\"}\r\n              </span>\r\n            </div>\r\n            <nav className=\"flex items-center text-sm text-gray-500\">\r\n              <a href=\"/dashboard\" className=\"flex items-center hover:text-cyan-600\">\r\n                <FaTachometerAlt className=\"mr-2\" /> Home\r\n              </a>\r\n              <BiChevronRight className=\"mx-2\" />\r\n              <a href=\"/transfer-list\" className=\"hover:text-cyan-600\">\r\n                Stock Transfer List\r\n              </a>\r\n            </nav>\r\n          </header>\r\n\r\n          {/* Form */}\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            className=\"p-4 bg-white border-t-4 rounded shadow border-cyan-500\"\r\n          >\r\n\r\n            {/* ─── Row 1: Date / From / To ─── */}\r\n            <div className=\"grid gap-4 mb-4 md:grid-cols-3\">\r\n              <div>\r\n                <label className=\"block mb-1 font-semibold\">Transfer Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={formData.transferDate}\r\n                  onChange={e => setFormData({ ...formData, transferDate: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block mb-1 font-semibold\">From Warehouse</label>\r\n                <select\r\n                  value={formData.fromWarehouse}\r\n                  onChange={e => setFormData({ ...formData, fromWarehouse: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Warehouse</option>\r\n                  {warehouses.map(w => (\r\n                    <option key={w._id} value={w._id}>{w.warehouseName}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block mb-1 font-semibold\">To Warehouse</label>\r\n                <select\r\n                  value={formData.toWarehouse}\r\n                  onChange={e => setFormData({ ...formData, toWarehouse: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Warehouse</option>\r\n                  {warehouses.map(w => (\r\n                    <option key={w._id} value={w._id}>{w.warehouseName}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* ─── Row 2: Details / Note ─── */}\r\n            <div className=\"grid gap-4 mb-4 md:grid-cols-2\">\r\n              <div>\r\n                <label className=\"block mb-1 font-semibold\">Details</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.details}\r\n                  onChange={e => setFormData({ ...formData, details: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block mb-1 font-semibold\">Note</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.note}\r\n                  onChange={e => setFormData({ ...formData, note: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border rounded\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* ─── Search & autocomplete ─── */}\r\n            <div className=\"relative mb-4\">\r\n              <label className=\"block mb-1 font-semibold\">Search Item</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name / Code / Barcode\"\r\n                value={searchQuery}\r\n                onChange={e => {\r\n                  const val = e.target.value.trim();\r\n                  setSearchQuery(val);\r\n\r\n                  const hit = allItems.find(\r\n                    i => i.barcodes?.includes(val) || i.itemCode === val\r\n                  );\r\n                  if (hit) handleAddItem(hit);\r\n                }}\r\n                onKeyDown={e => {\r\n   if (e.key === \"Enter\") {\r\n     e.preventDefault();   // ⏹︎ stop form submit\r\n\r\n   }\r\n }}\r\n                className=\"w-full px-4 py-2 border rounded\"\r\n                disabled={!formData.fromWarehouse}\r\n              />\r\n              {searchQuery && dropdown.length > 0 && (\r\n                <ul className=\"absolute z-50 w-full max-h-60 overflow-y-auto bg-white border rounded shadow mt-1\">\r\n                  {dropdown.map(it => (\r\n                    <li\r\n                      key={it._id}\r\n                      className=\"p-2 cursor-pointer hover:bg-gray-100\"\r\n                      onClick={() => handleAddItem(it)}\r\n                    >\r\n                      <strong>{it.itemCode}</strong> – {it.displayName}\r\n                      {it.isVariant ? ` (${it.variantName})` : \"\"}\r\n                      {it.barcode && <span className=\"text-gray-500\"> – {it.barcode}</span>}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n\r\n            {/* ─── Selected list ─── */}\r\n            <div className=\"p-4 mb-4 bg-white rounded shadow overflow-x-auto\">\r\n              <div className=\"flex px-2 py-2 text-sm font-semibold text-white bg-cyan-600\">\r\n                <div className=\"w-2/3\">Item Name</div>\r\n                <div className=\"w-1/3 text-center\">Qty</div>\r\n                <div className=\"w-1/3 text-center\">Action</div>\r\n              </div>\r\n\r\n              {selectedItems.length === 0 && (\r\n                <div className=\"p-4 text-center text-gray-500\">No items added.</div>\r\n              )}\r\n\r\n              {selectedItems.map(sel => (\r\n                <div key={sel.itemId} className=\"flex items-center px-2 py-2 border-t\">\r\n                  <div className=\"w-2/3\">{sel.itemName}</div>\r\n\r\n                  <div className=\"w-1/3 text-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={sel.maxQty}                        \r\n                      value={sel.quantity}\r\n                      onChange={e => handleItemChange(sel.itemId, e.target.value)}\r\n                      className=\"w-16 text-center border rounded\"\r\n                    />\r\n                    <div className=\"text-xs text-gray-400\">max {sel.maxQty}</div>\r\n                  </div>\r\n\r\n                  <div className=\"w-1/3 text-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveItem(sel.itemId)}\r\n                      className=\"px-2 py-1 text-white bg-red-500 rounded\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* ─── Buttons ─── */}\r\n            <div className=\"flex justify-end gap-2\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"px-6 py-2 text-white rounded shadow bg-cyan-500 hover:bg-cyan-600\"\r\n              >\r\n                {id ? \"Update\" : \"Save\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => navigate(\"/transfer-list\")}\r\n                className=\"px-6 py-2 text-white bg-gray-400 rounded shadow hover:bg-gray-500\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddStockTransfer;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","sndNew","Audio","sndRepeat","playBeep","snd","pause","currentTime","play","navigate","useNavigate","searchParams","useSearchParams","id","get","loading","setLoading","useEffect","window","innerWidth","warehouses","setWarehouses","allItems","setAllItems","filteredItemsByWarehouse","setFiltered","searchQuery","setSearchQuery","selectedItems","setSelectedItems","formData","setFormData","transferDate","Date","toLocaleDateString","fromWarehouse","toWarehouse","details","note","fetchItems","async","warehouseId","arguments","length","undefined","token","localStorage","getItem","params","warehouse","data","axios","headers","Authorization","flat","map","item","_item$barcodes","isVar","Boolean","parentItemId","parentId","_id","variantId","displayName","itemName","variantName","itemCode","barcode","barcodes","isVariant","currentStock","filter","it","err","console","error","message","list","_list$find","restricted","find","w","isRestricted","status","defFrom","prev","fetchWarehouses","_tr$transferDate","_tr$fromWarehouse","_tr$toWarehouse","_tr$fromWarehouse2","transferId","tr","split","live","mapped","items","_it$item2","_it$item3","doc","i","_it$item","origQty","quantity","liveStock","itemId","maxQty","alert","loadStockTransfer","f","_it$warehouse","dropdown","q","toLowerCase","includes","handleAddItem","exists","href","FaTachometerAlt","BiChevronRight","onSubmit","e","preventDefault","sel","_allItems$find","avail","payload","put","post","_err$response","_err$response$data","response","type","value","onChange","target","required","warehouseName","placeholder","val","trim","hit","_i$barcodes","onKeyDown","key","disabled","onClick","min","max","handleItemChange","want","parseInt","allow","handleRemoveItem"],"sourceRoot":""}