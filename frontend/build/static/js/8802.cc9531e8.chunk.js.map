{"version":3,"file":"static/js/8802.cc9531e8.chunk.js","mappings":"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","sources":["pages/CustomerOrders.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; // Import Axios\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Bootstrap for styling\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\nconst CustomerOrders = () => {\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [tillDate, setTillDate] = useState(\"\");\r\n  const [orders, setOrders] = useState([]); // Store fetched orders\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n  // Function to fetch orders from backend\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      // Make API request to backend\r\n      const response = await axios.get(\"api/orders\", {\r\n        params: {\r\n          customerName: customerName || undefined,\r\n          tillDate: tillDate || undefined,\r\n        },\r\n      });\r\n\r\n      setOrders(response.data); // Update orders state with API response\r\n    } catch (err) {\r\n      setError(\"Failed to fetch orders. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Call fetchOrders when component loads\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []); // Runs once when the component mounts\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar with sidebar state passed */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex flex-grow\">\r\n        {/* Sidebar */}\r\n        <div className=\"w-64\">\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n    <div className=\"p-3 container-fluid\">\r\n      {/* Page Title */}\r\n      <h4 className=\"fw-bold\">Customer Orders</h4>\r\n\r\n      {/* Filter Box */}\r\n      <div className=\"shadow-sm card\">\r\n        <div className=\"text-white card-header bg-primary\">\r\n          <b>Please Enter Valid Information</b>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            {/* Customer Name Input */}\r\n            <div className=\"col-md-6\">\r\n              <label className=\"fw-bold\">Customer Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search Name/Mobile\"\r\n                value={customerName}\r\n                onChange={(e) => setCustomerName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            {/* Till Date Input */}\r\n            <div className=\"col-md-6\">\r\n              <label className=\"fw-bold\">Till Date</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={tillDate}\r\n                onChange={(e) => setTillDate(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Buttons */}\r\n          <div className=\"gap-3 mt-3 d-flex\">\r\n            <button className=\"px-4 btn btn-success\" onClick={fetchOrders}>\r\n              Show\r\n            </button>\r\n            <button className=\"px-4 btn btn-warning\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"mt-3 alert alert-danger\">{error}</div>}\r\n\r\n      {/* Orders Table */}\r\n      <div className=\"mt-3 card\">\r\n        <div className=\"p-0 card-body\">\r\n          <table className=\"table text-center table-bordered\">\r\n            <thead className=\"text-white bg-primary\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Customer Name</th>\r\n                <th>Last Order Date</th>\r\n                <th>Order ID</th>\r\n                <th>Last Order (in Days)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loading ? (\r\n                <tr>\r\n                  <td colSpan=\"5\" className=\"text-center text-muted\">\r\n                    Loading...\r\n                  </td>\r\n                </tr>\r\n              ) : orders.length > 0 ? (\r\n                orders.map((order, index) => (\r\n                  <tr key={order.orderId}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{order.customerName}</td>\r\n                    <td>{order.lastOrderDate}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.lastOrderInDays}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"5\" className=\"text-center text-muted\">\r\n                    No orders found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Export Button */}\r\n      <div className=\"mt-2 text-end\">\r\n        <button className=\"btn btn-primary\">Export</button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOrders;\r\n"],"names":["CustomerOrders","customerName","setCustomerName","useState","tillDate","setTillDate","orders","setOrders","loading","setLoading","error","setError","isSidebarOpen","setSidebarOpen","useEffect","window","innerWidth","fetchOrders","async","response","axios","get","params","undefined","data","err","_jsxs","className","children","_jsx","Navbar","Sidebar","type","placeholder","value","onChange","e","target","onClick","colSpan","length","map","order","index","lastOrderDate","orderId","lastOrderInDays"],"sourceRoot":""}