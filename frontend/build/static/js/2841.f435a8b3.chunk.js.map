{"version":3,"file":"static/js/2841.f435a8b3.chunk.js","mappings":"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","sources":["Loading.jsx","components/Items/CategoriesListform.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState,useEffect } from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Navbar from \"../Navbar\";\r\nimport { BiChevronRight } from \"react-icons/bi\";\r\nimport { FaTachometerAlt } from \"react-icons/fa\";\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"../../Loading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst BrandForm = () => {\r\n  const[loading,setLoading]=useState(false)\r\n  const Navigate=useNavigate()\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n    const [searchParams] = useSearchParams();\r\n   const id=searchParams.get(\"id\")\r\n const[formData,setFormData]=useState({\r\n  name:\"\",\r\n  description:\"\",\r\n  subCategories:[]\r\n })\r\n useEffect(()=>{\r\n    if(window.innerWidth < 768){\r\n      setSidebarOpen(false)\r\n    }\r\n  },[])\r\n const fetchCategory = async () => {\r\n  setLoading(true)\r\n  try {\r\n    const response = await axios.get('api/categories', {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      }\r\n    });\r\n\r\n  console.log(response.data)\r\n   const updateCategory=response.data.find((item)=>item._id===id)\r\n   setFormData(updateCategory)\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\nuseEffect(()=>{\r\n  if(id)\r\n  fetchCategory()\r\n},[id])\r\n\r\n\r\nconst handleChange=(e)=>{\r\n  const {name,value}=e.target\r\n  setFormData((prev)=>({...prev,[name]:value}))\r\n}\r\n    //send data to api\r\n    const postData = async () => {\r\n      try {\r\n        console.log(\"Sending FormData:\", formData);\r\n        const response = await axios.post(\r\n          \"api/categories\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\", // Change Content-Type\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n    \r\n        console.log(\"Response:\", response.data);\r\n        alert(\"Category Added Successfully\");\r\n      } catch (err) {\r\n        console.error(\"Error:\", err.response?.data || err.message);\r\n        alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n      }\r\n    };\r\n          \r\nconst updateData = async () => {\r\n  setLoading(true)\r\n      try {\r\n        const response = await axios.put(\r\n          `api/categories/${id}`,\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\", \r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"Response:\", response.data);\r\n        alert(\" Update Successfully\");\r\n      } catch (err) {\r\n        console.error(\"Error:\", err.response?.data || err.message);\r\n        alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n      }\r\n      finally{\r\n          setLoading(false)\r\n          Navigate('/categories-list')\r\n      }\r\n      \r\n    };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(id) updateData()\r\n     else postData();\r\n    setFormData({\r\n      name:\"\",\r\n      description:\"\",\r\n      status:\"Active\",\r\n      subCategories:[]\r\n    }) \r\n    \r\n  };\r\nif(loading) return(<LoadingScreen/>)\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Navbar */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-col \">\r\n        {/* Sidebar */}\r\n        <div className=\"w-auto\">\r\n        <Sidebar isSidebarOpen={isSidebarOpen} />\r\n          \r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className={`w-full overflow-x-auto p-4  transition-all duration-300 bg-gray-100`}>\r\n          <div className=\"w-full \">\r\n            <div className=\"w-full\">\r\n                 {/* Header Section */}\r\n                       <header className=\"flex flex-col items-center justify-between mb-6 md:flex-row\">\r\n                       \r\n                            <div className=\"flex items-baseline gap-1 text-center sm:flex-row sm:text-left\">\r\n                                <h1 className=\"text-lg font-semibold truncate sm:text-xl\">Category</h1>\r\n                                <span className=\"text-xs text-gray-600 sm:text-sm\">Add/Update Category</span>\r\n                              </div>\r\n                         <nav className=\"flex flex-wrap mt-2 text-sm text-gray-600\">\r\n                         <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\"><FaTachometerAlt /> Home </NavLink>\r\n                         <NavLink to=\"/categories-list\" className=\"items-center text-gray-700 no-underline tflex\">&gt;Category List</NavLink>\r\n                           \r\n                          \r\n                         </nav>\r\n                       </header>\r\n              <form onSubmit={handleSubmit} className=\"p-2 border-t-4 rounded shadow border-cyan-500\" >\r\n                <p className=\"mb-3 text-lg font-medium text-gray-700\">Please Enter Valid Data</p>\r\n\r\n                <div className=\"flex gap-2 mb-4\">\r\n                  <label className=\"block font-semibold text-gray-700\">\r\n                    Category Name<span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-2 py-1 mt-1 border border-gray-300 rounded md:w-1/2 focus:ring-2 focus:ring-blue-400 focus:outline-none\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex gap-3 mb-2\">\r\n                  <label className=\"block font-semibold text-gray-700\">Description</label>\r\n                  <textarea\r\n                    value={formData.description}\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-2 py-1 mt-1 border border-gray-300 rounded md:w-1/2 focus:ring-2 focus:ring-blue-400 focus:outline-none h-14\"\r\n                    rows=\"3\"\r\n                  ></textarea>\r\n                </div>\r\n\r\n                <div className=\"flex justify-center gap-2 mt-6\">\r\n                  <button type=\"submit\" className=\"px-12 py-2 text-white bg-green-500 hover:bg-green-600\">\r\n                    {id?\"Update\":\"Save\"}\r\n                  </button>\r\n                  <button type=\"button\" className=\"px-12 py-2 text-white bg-orange-500 hover:bg-orange-600\">\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","BrandForm","loading","setLoading","Navigate","useNavigate","searchParams","useSearchParams","id","get","formData","setFormData","name","description","subCategories","useEffect","window","innerWidth","async","response","axios","headers","Authorization","localStorage","getItem","console","log","data","updateCategory","find","item","_id","err","message","fetchCategory","handleChange","e","value","target","prev","NavLink","to","FaTachometerAlt","onSubmit","preventDefault","put","alert","_err$response3","_err$response4","_err$response4$data","error","updateData","post","_err$response","_err$response2","_err$response2$data","postData","status","type","onChange","required","rows"],"sourceRoot":""}