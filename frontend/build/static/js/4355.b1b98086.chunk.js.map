{"version":3,"file":"static/js/4355.b1b98086.chunk.js","mappings":"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","sources":["components/Booking/MyJobsPanel.jsx"],"sourcesContent":["// src/components/MyJobsPanel.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaMapMarkerAlt } from 'react-icons/fa';\nimport Navbar from '../Navbar';\nimport Sidebar from '../Sidebar';\nimport { useNavigate } from \"react-router-dom\";\n\nconst api = axios.create({ baseURL: '/vps/api' });\napi.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\nexport default function MyJobsPanel() {\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const [view, setView]       = useState('active');        // ← new view state\n  const [jobs, setJobs]       = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError]     = useState(null);\n  const [statusSelections, setStatusSelections] = useState({});\n  const navigate = useNavigate();\n\n  // Fetch on mount and whenever `view` changes\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    const endpoint = view === 'completed'\n      ? '/bookings/my-completed-jobs'\n      : '/bookings/my-jobs';\n\n    api.get(endpoint)\n      .then(res => setJobs(res.data.data))\n      .catch(() => setError('Failed to load jobs'))\n      .finally(() => setLoading(false));\n  }, [view]);\n\n  const handleStatusChange = (jobId, newStatus) => {\n    setStatusSelections(prev => ({ ...prev, [jobId]: newStatus }));\n  };\n\n  const handleUpdateStatus = async (jobId) => {\n    const status = statusSelections[jobId];\n    if (!status) return alert('Please select a status first.');\n    try {\n      await api.patch(`/bookings/${jobId}/status`, { status });\n      setJobs(jobs.map(j => j._id === jobId ? { ...j, status } : j));\n      alert('Status updated!');\n    } catch (err) {\n      alert('Update failed: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n      <div className=\"flex flex-1\">\n        <Sidebar isSidebarOpen={isSidebarOpen} />\n\n        <main className=\"flex-1 p-6 bg-gray-100 overflow-auto\">\n          {/* Toggle Buttons */}\n          <div className=\"mb-4 space-x-2\">\n            <button\n              onClick={() => setView('active')}\n              className={`px-4 py-2 rounded ${\n                view === 'active'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              In-Progress\n            </button>\n            <button\n              onClick={() => setView('completed')}\n              className={`px-4 py-2 rounded ${\n                view === 'completed'\n                  ? 'bg-green-600 text-white'\n                  : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              Completed\n            </button>\n          </div>\n\n          <h1 className=\"text-2xl font-semibold mb-4\">\n            {view === 'completed' ? 'My Completed Jobs' : 'My Claimed Jobs'}\n          </h1>\n\n          {error && (\n            <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>\n          )}\n\n          {loading ? (\n            <div>Loading…</div>\n          ) : jobs.length === 0 ? (\n            <div className=\"text-gray-600\">\n              {view === 'completed'\n                ? 'You have no completed jobs yet.'\n                : 'You have no claimed jobs.'}\n            </div>\n          ) : (\n            <div className=\"space-y-6\">\n              {jobs.map(j => {\n                // build address string\n                const addr = [\n                  j.pickupAddress.street,\n                  j.pickupAddress.area,\n                  j.pickupAddress.city,\n                  j.pickupAddress.state,\n                  j.pickupAddress.postalCode\n                ].filter(Boolean).join(', ');\n                const mapSrc = `https://maps.google.com/maps?q=${encodeURIComponent(addr)}&t=&z=15&ie=UTF8&iwloc=&output=embed`;\n\n                return (\n                  <div\n                    key={j._id}\n                    className=\"bg-white p-4 rounded shadow flex flex-col md:flex-row gap-4\"\n                  >\n                    {/* Job details */}\n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"text-gray-800\">\n                        <strong>Customer:</strong> {j.customer.name} ({j.customer.phone})\n                      </div>\n                      <div className=\"text-gray-700 flex items-center\">\n                        <FaMapMarkerAlt className=\"mr-1 text-red-500\" />\n                        <span>{addr}</span>\n                      </div>\n                      <div className=\"text-gray-700\">\n                        <strong>When:</strong>{' '}\n                        {j.type === 'scheduled'\n                          ? new Date(j.scheduledFor).toLocaleString()\n                          : 'ASAP'}\n                      </div>\n                      <div className=\"text-gray-700\">\n                        <strong>Remark:</strong> {j.remark || <em>none</em>}\n                      </div>\n\n                      {view === 'active' ? (\n                        <>\n                          <div className=\"text-sm text-green-600 mb-2\">\n                            <strong>Current Status:</strong> {j.status}\n                          </div>\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <select\n                              className=\"p-1 border border-gray-300 rounded flex-1\"\n                              value={statusSelections[j._id] || ''}\n                              onChange={e => handleStatusChange(j._id, e.target.value)}\n                            >\n                              <option value=\"\" disabled>Change status…</option>\n                              <option value=\"in_transit\">In Transit</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"cancelled\">Cancelled</option>\n                            </select>\n                            <button\n                              onClick={() => handleUpdateStatus(j._id)}\n                              className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                            >\n                              Update\n                            </button>\n                          </div>\n                          <button\n                            onClick={() =>\n                              navigate(\n                                `/pos?customer=${j.customer._id}` +\n                                `&bookingId=${j._id}` +\n                                `&customerModel=Customer`\n                              )\n                            }\n                            className=\"inline-block px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n                          >\n                            Start Sale\n                          </button>\n                        </>\n                      ) : (\n                        // Completed view: show order details\n                        j.order ? (\n                          <div className=\"mt-4 border-t pt-4\">\n                            <strong>Items Sold:</strong>\n                            <ul className=\"list-disc ml-6\">\n                              {j.order.items.map((i, idx) => (\n                                <li key={idx}>\n                                  {i.quantity}× {i.item.itemName} @ ₹{i.price.toFixed(2)} = ₹{i.subtotal.toFixed(2)}\n                                </li>\n                              ))}\n                            </ul>\n                            <div className=\"mt-2\">\n                              <strong>Total Paid:</strong>{' '}\n                              ₹{j.order.payments\n                                .reduce((sum, p) => sum + p.amount, 0)\n                                .toFixed(2)}\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"text-gray-500 mt-2\">\n                            No sale information available.\n                          </div>\n                        )\n                      )}\n                    </div>\n\n                    {/* Map */}\n                    <div className=\"w-full md:w-64 h-48 rounded overflow-hidden border\">\n                      <iframe\n                        title={`map-${j._id}`}\n                        src={mapSrc}\n                        className=\"w-full h-full\"\n                        frameBorder=\"0\"\n                        loading=\"lazy\"\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":["api","axios","create","baseURL","MyJobsPanel","isSidebarOpen","setSidebarOpen","useState","view","setView","jobs","setJobs","loading","setLoading","error","setError","statusSelections","setStatusSelections","navigate","useNavigate","useEffect","endpoint","get","then","res","data","catch","finally","_jsxs","className","children","_jsx","Navbar","Sidebar","onClick","length","map","j","addr","pickupAddress","street","area","city","state","postalCode","filter","Boolean","join","mapSrc","encodeURIComponent","customer","name","phone","FaMapMarkerAlt","type","Date","scheduledFor","toLocaleString","remark","_Fragment","status","value","_id","onChange","e","handleStatusChange","jobId","newStatus","target","prev","disabled","async","alert","patch","err","_err$response","_err$response$data","response","message","handleUpdateStatus","order","items","i","idx","quantity","item","itemName","price","toFixed","subtotal","payments","reduce","sum","p","amount","title","src","frameBorder","interceptors","request","use","cfg","t","localStorage","getItem","headers","Authorization"],"sourceRoot":""}