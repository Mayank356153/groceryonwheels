{"version":3,"file":"static/js/8600.25c3d606.chunk.js","mappings":"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","sources":["Loading.jsx","components/contact/Input.jsx","components/contact/Button.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","components/contact/AddCustomer/Edit.jsx","components/contact/AddCustomer/Advanced.jsx","components/contact/AddCustomer/Addcustomer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nexport default function LoadingScreen() {\n    const[isSidebarOpen,setSidebarOpen]=useState(false)\n    return (\n        <div className='flex flex-col h-screen'>\n        {/* Navbar component with sidebar open state */}\n        <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\n        <div className='flex flex-grow mt-20'>\n          <div>\n            {/* Sidebar component with open state */}\n            <Sidebar isSidebarOpen={isSidebarOpen} />\n          </div>\n  \n          {/* Container for the entire component */}\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm\">\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 border-4 rounded-full border-cyan-500 border-t-transparent animate-spin\"></div>\n            <p className=\"mt-3 text-lg font-semibold text-gray-700\">Loading...</p>\n          </div>\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n  ","import React from \"react\";\r\nimport { useId } from 'react'; // Importing useId hook for generating unique IDs\r\n\r\nexport default function Input({\r\n  id=\" \",\r\n  type = \"text\", // Default input type is \"text\"\r\n  label_class = \"\", // Class for the label, default is an empty string\r\n  label, // Label text for the input\r\n  className = \"\", // Class for the input element, default is an empty string\r\n  placeholder = \"\", // Placeholder text for the input\r\n  div_class = \"\", // Class for the div container, default is an empty string\r\n  ...props // Spread operator to capture any additional props\r\n}) {\r\n  const ID = useId(); // Generate a unique ID for the input element\r\n\r\n  return (\r\n    <div className={div_class}> {/* Container div for the input and label */}\r\n      {label ? <label className={label_class} htmlFor={id===\" \"?ID:id}>{label}</label> : null} {/* Render label if provided */}\r\n      <input \r\n        type={type} // Set the input type\r\n        id={id===\" \"?ID:id} // Set the unique ID for the input\r\n        placeholder={placeholder} // Set the placeholder text\r\n        className={className} // Set the input class\r\n        {...props} // Spread any additional props onto the input element\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Button({\r\n    text,\r\n    type=\"button\",\r\n    className,\r\n    ...props\r\n}) {\r\n  return (\r\n    <button  className={`${className}`} {...props}>{text}</button>\r\n  )\r\n}\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import React, { useEffect, useState } from 'react';\r\nimport Button from '../Button';\r\nimport Input from '../Input';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoadingScreen from '../../../Loading';\r\nexport default function Edit({formData,setFormData,setActiveTab ,id}) {\r\n        \r\n     \r\nconst navigate=useNavigate()\r\n   const[copy,setCopy]=useState(false)\r\n    const[loaidng,setLoading]=useState(false)\r\n   \r\n     \r\n        useEffect(() => {\r\n         if (navigator.geolocation) {\r\n           navigator.geolocation.getCurrentPosition(async (pos) => {\r\n             const { latitude, longitude } = pos.coords;\r\n             setFormData((prev)=>({\r\n                 ...prev,\r\n                  locationLink: `https://www.google.com/maps?q=${latitude},${longitude}`\r\n               }))\r\n     \r\n     \r\n           }, (err) => {\r\n             console.error(\"Geolocation denied or failed:\", err);\r\n           });\r\n         } else {\r\n           alert(\"Geolocation is not supported by this browser.\");\r\n         }\r\n       }, []);\r\n\r\n       const fetchLocation=()=>{\r\n         if (navigator.geolocation) {\r\n           navigator.geolocation.getCurrentPosition(async (pos) => {\r\n             const { latitude, longitude } = pos.coords;\r\n             setFormData((prev)=>({\r\n                 ...prev,\r\n                  locationLink: `https://www.google.com/maps?q=${latitude},${longitude}`\r\n               }))\r\n     \r\n     \r\n           }, (err) => {\r\n             console.error(\"Geolocation denied or failed:\", err);\r\n           });\r\n         } else {\r\n           alert(\"Geolocation is not supported by this browser.\");\r\n         }\r\n       }\r\n        \r\n      \r\n    \r\n     \r\n      const postData = async () => {\r\n        setLoading(true)\r\n            try {\r\n              console.log(\"Sending FormData:\", formData);\r\n              const response = await axios.post(\r\n                \"/api/customer-data/create\",\r\n                formData,\r\n                {\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\", \r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                  },\r\n                }\r\n              );\r\n              console.log(\"Response:\", response.data);\r\n              alert(\" Added Successfully\");\r\n              setFormData({\r\n                 customerName: '',\r\n      mobile: '',\r\n    type:\"Online\",\r\n\r\n      \r\n      // address\r\n      city:\"\",\r\n        state:\"\",\r\n        postcode:\"\",\r\n        locationLink:\"\",\r\n        country:\"\",\r\n        area:\"\",\r\n\r\n        //country\r\n        \r\n      shippingcountry:\"\",\r\n      shippingCity:\"\",\r\n      shippingArea:\"\",\r\n      shippingState:\"\",\r\n      shippingPostcode:\"\",\r\n      shippingLocationLink:\"\",\r\n\r\n\r\n        \r\n        attachmentPath: \"\",\r\n        creditLimit: 0,\r\n        customerImage:\"\",\r\n        customerId:'',\r\n        email: '',\r\n        gstNumber: '',\r\n        openingBalancePayments:[],\r\n         panNumber:\"\",\r\n         phone:\"\",\r\n         previousDue:0,\r\n         priceLevel:0,\r\n         priceLevelType:\"\",\r\n         salesReturnDue:0,\r\n         taxNumber:\"\"\r\n              })\r\n            } catch (err) {\r\n              console.error(\"Error:\", err.response?.data || err.message);\r\n              alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n            }\r\n            finally{\r\n                setLoading(false)\r\n            }\r\n            \r\n          };\r\n\r\n           const updateData = async (id) => {\r\n                  setLoading(true)\r\n                      try {\r\n                        console.log(\"Updating FormData:\", formData);\r\n                        const response = await axios.put(\r\n                          `/api/customer-data/${id}`,\r\n                          formData,\r\n                          {\r\n                            headers: {\r\n                              \"Content-Type\": \"application/json\", \r\n                              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                            },\r\n                          }\r\n                        );\r\n                        console.log(\"Response:\", response.data);\r\n                        alert(\" Update Successfully\");\r\n                        \r\n                      } catch (err) {\r\n                        console.error(\"Error:\", err.response?.data || err.message);\r\n                        alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n                      }\r\n                      finally{\r\n                          setLoading(false)\r\n                      }\r\n                      \r\n                    };\r\n\r\n\r\n                      // Function to handle form submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Prevent the default form submission behavior\r\n       \r\n        if(id){\r\n            updateData(id);\r\n        }\r\n        else{\r\n            \r\n            postData();\r\n        }\r\n        // Handle form submission logic here (e.g., send data to an API)\r\n    };\r\n\r\n    \r\n//Function to handle input changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]:(e.target.type==\"Number\")? Number(value):value });\r\n    };\r\n//Function to handle change in select inputs\r\n    const handleSelectChange = (name,category) => (selectedOption) => {\r\n        setFormData((prev)=>({ ...prev, [category]:{...prev[category],[name]:selectedOption.value,} }));\r\n    };\r\n    const handleAddress = (e,category) =>  {\r\n        const{name,value}=e.target\r\n        // console.log(category)\r\n        setFormData((prev)=>({ ...prev, [category]:{...prev[category],[name]:value,} }));\r\n    };\r\n    \r\n//Function to handle file input changes\r\n    const handleFileChange = (e) => {\r\n        setFormData({ ...formData, attachmentPath: e.target.files[0].name });\r\n    };\r\n//Function to handle chackbox changes\r\nconst handleCheckboxChange = () => {\r\n    setCopy((prevCopy) => {\r\n      const newCopy = !prevCopy;\r\n  \r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        shippingcountry: newCopy ? prevData.country : '',\r\n        shippingCity: newCopy ? prevData.city : '',\r\n        shippingArea: newCopy ? prevData.area : '',\r\n        shippingState: newCopy ? prevData.state : '',\r\n        shippingPostcode: newCopy ? prevData.postcode : '',\r\n        shippingLocationLink: newCopy ? prevData.locationLink : ''\r\n      }));\r\n  \r\n      return newCopy;\r\n    });\r\n  };\r\n  \r\n\r\n\r\n   \r\n\r\n    const handleReset=()=>{\r\n        setFormData({\r\n           \r\n              attachmentPath: \"\",\r\n              creditLimit: 0,\r\n              customerImage:\"\",\r\n              customerName: '',\r\n              customerId:'',\r\n              email: '',\r\n              gstNumber: '',\r\n              mobile: '',\r\n              openingBalancePayments:[],\r\n               panNumber:\"\",\r\n               phone:\"\",\r\n               previousDue:0,\r\n               priceLevel:0,\r\n               priceLevelType:\"\",\r\n               salesReturnDue:0,\r\n              \r\n               taxNumber:\"\",\r\n\r\n\r\n                // address\r\n      city:\"\",\r\n      state:\"\",\r\n      postcode:\"\",\r\n      locationLink:\"\",\r\n      country:\"\",\r\n      area:\"\",\r\n\r\n      //country\r\n      \r\n    shippingcountry:\"\",\r\n    shippingCity:\"\",\r\n    shippingArea:\"\",\r\n    shippingState:\"\",\r\n    shippingPostcode:\"\",\r\n    shippingLocationLink:\"\",\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-6 mx-auto bg-white b\">\r\n            <form onSubmit={handleSubmit} onReset={handleReset}>\r\n                <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                    <Input\r\n                        label=\"Customer Name\"\r\n                        name=\"customerName\"\r\n                        value={formData.customerName}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                    />\r\n                    <Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={formData.mobile}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                    />\r\n                    <Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                    />\r\n                    <Input\r\n                        label=\"Phone\"\r\n                        name=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                    />\r\n                    <Input\r\n                        label=\"GST Number\"\r\n                        name=\"gstNumber\"\r\n                        value={formData.gstNumber}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                    />\r\n                    <Input\r\n                        label=\"TAX Number\"\r\n                        name=\"taxNumber\"\r\n                        value={formData.taxNumber}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                    />\r\n                    <Input\r\n                        label=\"Credit Limit\"\r\n                        name=\"creditLimit\"\r\n                        value={formData.creditLimit}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                        type='Number'\r\n                        min='0'\r\n                    />\r\n                    <Input\r\n                    type=\"number\"\r\n                        label=\"Previous Due\"\r\n                        name=\"previousDue\"\r\n                        value={formData.previousDue}\r\n                        onChange={handleChange}\r\n                        className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                        label_class='block text-sm font-medium text-gray-700'\r\n                        div_class='flex flex-col'\r\n                        \r\n                        min='0'\r\n                    />\r\n                    <div>\r\n                        <Input\r\n                            type=\"file\"\r\n                            label=\"Attachment\"\r\n                            onChange={handleFileChange}\r\n                            className='w-full p-2 mt-1 text-gray-700 bg-gray-200 border rounded-md shadow-sm cursor-pointer hover:bg-gray-300'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                        />\r\n                        <p className=\"text-xs text-red-500\">Size: 2MB</p>\r\n                        {/* <Button className=\"mt-2 bg-green-500 text-white px-2 py-2 font-bold text-[10px]  cursor-pointer hover:bg-green-600 rounded-md\" text=\"Click to view\" /> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <div className=\"flex items-center mb-2\">\r\n                        <i className=\"mr-2 text-green-500 fas fa-map-marker-alt\"></i>\r\n                        <span className=\"font-semibold text-green-500\">ADDRESS DETAILS</span>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                    <Input\r\n                            label=\"Country\"\r\n                            name=\"country\"\r\n                            onChange={handleChange}\r\n                            value={formData.country || formData.address?.country ||\"\"}\r\n                            className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                            div_class='flex flex-col'\r\n                        />\r\n                        <Input\r\n                            label=\"State\"\r\n                            name=\"state\"\r\n                            onChange={handleChange}\r\n                            value={formData.address?.state || formData.state ||\"\"}\r\n                            className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                            div_class='flex flex-col'\r\n                        />\r\n                        <Input\r\n                            label=\"City\"\r\n                            name=\"city\"\r\n                            onChange={handleChange}\r\n                            value={formData.address?.city || formData.city ||\"\"}\r\n                            className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                            div_class='flex flex-col'\r\n                        />\r\n                        <Input\r\n                            label=\"Postcode\"\r\n                            name=\"postcode\"\r\n                            value={formData.address?.postcode || formData.postcode ||\"\"}\r\n                            onChange={handleChange}\r\n                            className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                            div_class='flex flex-col'\r\n                        />\r\n\r\n                       <div className=\"flex items-end gap-2\">\r\n  <div className=\"flex-1\">\r\n    <Input\r\n      label=\"Location Link\"\r\n      name=\"locationLink\"\r\n      value={formData.address?.locationLink || formData.locationLink || \"\"}\r\n      onChange={handleChange}\r\n      className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n      label_class='block text-sm font-medium text-gray-700'\r\n      div_class='flex flex-col'\r\n    />\r\n  </div>\r\n  <button \r\n    type=\"button\" onClick={()=>fetchLocation()}\r\n    className=\"h-10 px-3 py-2 text-sm font-medium bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n  >\r\n    Refresh\r\n  </button>\r\n</div>\r\n                       \r\n                        <div className='flex flex-col'>\r\n                            <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">Address</label>\r\n                            <textarea\r\n                                id=\"address\"\r\n                                name=\"area\"\r\n                                value={formData.address?.area|| formData.area ||\"\"}\r\n                                onChange={handleChange}\r\n                                className=\"block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600\"\r\n                            ></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"py-4 mx-auto bg-white\">\r\n                    <div className='flex items-center gap-2 mb-4'>\r\n                        <i className=\"text-green-500 fas fa-truck\"></i>\r\n                        <h2 className=\"text-lg font-semibold text-green-500\">SHIPPING ADDRESS</h2>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"inline-flex items-center\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                className=\"w-5 h-5 text-green-500 form-checkbox\"\r\n                                \r\n                                onChange={()=>handleCheckboxChange(copy)}\r\n                            />\r\n                            <span className=\"ml-2 text-gray-700\">Copy Address?</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                       \r\n                    <Input\r\n                            label=\"Country\"\r\n                            name=\" shippingcountry\"\r\n                            onChange={handleChange}\r\n                            value={formData.shippingAddress?.country || formData.shippingcountry ||\"\"}\r\n                            className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                            div_class='flex flex-col'\r\n                        />\r\n                        <Input\r\n                            label=\"State\"\r\n                            name=\"shippingState\"\r\n                            onChange={handleChange}\r\n                            value={formData.shippingAddress?.state || formData.shippingState ||\"\"}\r\n                            className='block w-full p-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-sm font-medium text-gray-700'\r\n                            div_class='flex flex-col'\r\n                        />\r\n                        <Input\r\n                            label=\"Postcode\"\r\n                            name=\"shippingPostcode\"\r\n                            value={formData.shippingAddress?.postcode|| formData.shippingPostcode ||\"\"}\r\n                            onChange={handleChange}\r\n                            className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-gray-700'\r\n                        />\r\n                        <Input\r\n                            label=\"City\"\r\n                            name=\"shippingCity\"\r\n                            value={formData.shippingAddress?.city || formData.shippingCity ||\"\"}\r\n                            onChange={handleChange}\r\n                            className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-gray-700'\r\n                        />\r\n                        <Input\r\n                            label=\"Location Link\"\r\n                            name=\"shippingLocationLink\"\r\n                            value={formData.shippingAddress?.locationLink || formData.shippingLocationLink ||\"\"}\r\n                            onChange={handleChange}\r\n                            className='block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600'\r\n                            label_class='block text-gray-700'\r\n                        />\r\n                        <div>\r\n                            <label className=\"block text-gray-700\">Address</label>\r\n                            <textarea\r\n                                name=\"shippingArea\"\r\n                                value={formData.shippingAddress?.area || formData.shippingArea||\"\"}\r\n                                onChange={handleChange}\r\n                                className=\"block w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:border-2 focus:border-blue-600\"\r\n                            ></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-col justify-center gap-2 mt-6 mb-2 md:flex-row md:gap-5\">\r\n                         <Button className=\"px-20 py-2 text-white bg-green-500 rounded hover:bg-green-600\" type='submit' text={id?\"Update\":\"Save\"} />\r\n                         <Button className=\"px-20 py-2 text-white bg-orange-500 rounded hover:bg-orange-600\" text=\"Close\" type='reset' />\r\n                </div>\r\n            </form>\r\n            <div className=\"w-full overflow-hidden bg-white border-t-4 rounded-lg shadow-md border-t-blue-600\">\r\n                <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                    <h2 className=\"text-xl font-semibold text-blue-600\">Opening Balance Payments</h2>\r\n                </div>\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full bg-white border-separate\">\r\n                        <thead>\r\n                            <tr className=\"w-full text-sm leading-normal text-gray-600 uppercase bg-gray-200\">\r\n                                <th className=\"px-6 py-3 text-left\">#</th>\r\n                                <th className=\"px-6 py-3 text-left\">Payment Date</th>\r\n                                <th className=\"px-6 py-3 text-left\">Payment</th>\r\n                                <th className=\"px-6 py-3 text-left\">Payment Type</th>\r\n                                <th className=\"px-6 py-3 text-left\">Payment Note</th>\r\n                                <th className=\"px-6 py-3 text-left\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-sm font-light text-gray-600\">\r\n                            <tr>\r\n                                <td colSpan=\"6\" className=\"px-6 py-3 text-center\">No Previous Stock Entry Found!!</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Button from '../Button'; // Importing a custom Button component\r\nimport Select from 'react-select'; // Importing the Select component from react-select\r\nimport axios from 'axios';\r\nimport LoadingScreen from '../../../Loading';\r\nexport default function Advanced({formData,setFormData,id,p,l}) {\r\n    // Options for the price type select dropdown\r\n    const price_options = [\r\n        {\r\n            label: \"Increase\",\r\n            value: \"Increase\"\r\n        },\r\n        {\r\n            label: \"Decrease\",\r\n            value: \"Decrease\"\r\n        }\r\n    ];\r\n    const[loading,setLoading]=useState(false)\r\n    // State to manage the price level and price type\r\n    const [price_level, setPrice_level] = useState(0); // Initial price level set to 0\r\n    const [price_type, setPrice_type] = useState(\"\"); // Initial price type set to null\r\n       useEffect(()=>{\r\n        \r\n        if(id){\r\n            setFormData((prev)=>({\r\n                ...prev,\r\n                priceLevel:p,\r\n                priceLevelType:l\r\n            }))\r\n        }\r\n       },[id])\r\n    \r\n\r\n    const postData = async () => {\r\n    setLoading(true)\r\n        try {\r\n          console.log(\"Sending FormData:\", formData);\r\n          const response = await axios.post(\r\n            \"api/customer-data/create\",\r\n            formData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\", \r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          console.log(\"Response:\", response.data);\r\n          alert(\" Added Successfully\");\r\n        } catch (err) {\r\n          console.error(\"Error:\", err.response?.data || err.message);\r\n          alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n        }\r\n        finally{\r\n            setLoading(false)\r\n        }\r\n        \r\n      };\r\n useEffect(()=>console.log(formData),[formData])\r\n      \r\n    const updateData = async (id) => {\r\n        setLoading(true)\r\n            try {\r\n              console.log(\"Updating FormData:\", formData);\r\n              const response = await axios.put(\r\n                `api/customer-data/${id}`,\r\n                formData,\r\n                {\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\", \r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                  },\r\n                }\r\n              );\r\n              console.log(\"Response:\", response.data);\r\n              alert(\" Update Successfully\");\r\n            } catch (err) {\r\n              console.error(\"Error:\", err.response?.data || err.message);\r\n              alert(\"Unsuccessful: \" + (err.response?.data?.message || err.message));\r\n            }\r\n            finally{\r\n                setLoading(false)\r\n            }\r\n            \r\n          };\r\n\r\n      \r\n    // Function to handle form submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Prevent the default form submission behavior\r\n        console.log(price_type)\r\n        setFormData({...formData,priceLevel:price_level,priceLevelType:price_type})\r\n        if(id){\r\n            updateData(id);\r\n        }\r\n        else{\r\n            \r\n            postData();\r\n        }\r\n        // Handle form submission logic here (e.g., send data to an API)\r\n    };\r\n\r\n    // Function to handle closing/resetting the form\r\n    const handleClose = () => {\r\n        setPrice_level(0); // Reset price level to 0\r\n        setPrice_type(null); // Reset price type to null\r\n    };\r\n    if(loading) return(<LoadingScreen />)\r\n    return (\r\n        <div className='container w-full pt-20 mx-auto'>\r\n            <div className=\"max-w-4xl p-4 mx-auto\">\r\n                <form onSubmit={handleSubmit} onReset={handleClose}>\r\n                    <div className=\"p-6 bg-white rounded shadow-md\">\r\n                        {/* Price Level Type Selection */}\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"price-level-type\" className=\"block text-gray-700\">Price Level Type</label>\r\n                            {/* Select component for choosing price type */}\r\n                            <Select \r\n  options={price_options} \r\n  value={price_options.find(option => option.value === formData.priceLevelType) || null}\r\n  placeholder=\"Select Price Type\" \r\n  className=\"w-full text-sm\"\r\n  onChange={(selected) => setFormData((prev)=>({...prev,priceLevelType:selected.value}))}\r\n/>\r\n\r\n                        </div>\r\n                        {/* Price Level Input */}\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"price-level\" className=\"block text-gray-700\">Price Level</label>\r\n                            <div className=\"flex items-center mt-1\">\r\n                                <input \r\n                                    type='Number' min='0' \r\n                                    id=\"price-level\" \r\n                                    className=\"block w-full px-3 py-2 border border-gray-300 rounded\" \r\n                                    value={formData.priceLevel} \r\n                                    onChange={(e) => setFormData((prev)=>({...prev,priceLevel:Number(e.target.value)}))} // Update state on input change\r\n                                />\r\n                                <span className=\"ml-2 text-blue-500\">\r\n                                    <i className=\"fas fa-percentage\"></i> {/* Icon for percentage */}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Buttons for Save and Close */}\r\n                    <div className=\"flex flex-col justify-center gap-2 mt-6\">\r\n                        <Button \r\n                            text={id?\"Update\":\"Save\"} \r\n                            type='submit' \r\n                            className='px-20 py-2 mr-4 font-semibold text-center text-white bg-green-500 rounded cursor-pointer hover:bg-green-600'\r\n                        />\r\n                        <Button \r\n                            text='Close' \r\n                            type='reset' \r\n                            className='px-20 py-2 mr-4 font-semibold text-center text-white bg-orange-500 rounded cursor-pointer hover:bg-orange-600'\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport React,{useState,useEffect} from 'react';\r\nimport Edit from './Edit'; // Importing the Edit component\r\nimport Advanced from './Advanced'; // Importing the Advanced component\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Importing Font Awesome for icons\r\nimport Navbar from '../../Navbar'; // Importing the Navbar component\r\nimport Sidebar from '../../Sidebar'; // Importing the Sidebar component\r\nimport { NavLink } from 'react-router-dom'; // Importing NavLink for navigation\r\nimport {FaTachometerAlt} from \"react-icons/fa\";\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport LoadingScreen from '../../../Loading';\r\nimport axios from 'axios';\r\nexport default function Addcustomer() {\r\n  // State to manage the active tab (Edit or Advanced)\r\n  const[activeTab,setActiveTab]=useState(\"Edit\");\r\n  // State to manage the sidebar open/close status\r\n  const[isSidebarOpen,setSidebarOpen]=useState(true);\r\n   useEffect(()=>{\r\n      if(window.innerWidth < 768){\r\n        setSidebarOpen(false)\r\n      }\r\n    },[])\r\n      const [searchParams] = useSearchParams();\r\n      const id=searchParams.get(\"id\")\r\n      const[loading,setLoading]=useState(false)\r\n    const [formData, setFormData] = useState({\r\n      customerName: '',\r\n      mobile: '',\r\n    type:\"Online\",\r\n\r\n      \r\n      // address\r\n      city:\"\",\r\n        state:\"\",\r\n        postcode:\"\",\r\n        locationLink:\"\",\r\n        country:\"\",\r\n        area:\"\",\r\n\r\n        //country\r\n        \r\n      shippingcountry:\"\",\r\n      shippingCity:\"\",\r\n      shippingArea:\"\",\r\n      shippingState:\"\",\r\n      shippingPostcode:\"\",\r\n      shippingLocationLink:\"\",\r\n\r\n\r\n        \r\n        attachmentPath: \"\",\r\n        creditLimit: 0,\r\n        customerImage:\"\",\r\n        customerId:'',\r\n        email: '',\r\n        gstNumber: '',\r\n        openingBalancePayments:[],\r\n         panNumber:\"\",\r\n         phone:\"\",\r\n         previousDue:0,\r\n         priceLevel:0,\r\n         priceLevelType:\"\",\r\n         salesReturnDue:0,\r\n         taxNumber:\"\"\r\n    });\r\n    const [p,setP]=useState(0)\r\n    const [l,setL]=useState(\"\")\r\n      const fetchData = async () => {\r\n        setLoading(true)\r\n        try {\r\n          const response = await  axios.get(`/api/customer-data/all`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Get token from localStorage\r\n            }\r\n          }) // Replace with actual API URL\r\n          \r\n          console.log(response.data)\r\n          const data=response.data.find((item)=>item._id===id)\r\n          console.log(data)\r\n          setFormData(data)\r\n          setP(data.priceLevel)\r\n          setL(data.priceLevelType)\r\n        } catch (err) {\r\n          console.log(err.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n    useEffect(()=>{\r\n        if(id){\r\n            fetchData();\r\n        }\r\n    },[id])\r\n        \r\n    if(loading) return(<LoadingScreen/>)\r\n  return (\r\n    <div className='flex flex-col h-screen'>\r\n      {/* Navbar component with sidebar open state */}\r\n      <Navbar isSidebarOpen={isSidebarOpen} setSidebarOpen={setSidebarOpen} />\r\n      <div className='box-border flex'>\r\n        <div className='w-auto'>\r\n          {/* Sidebar component with open state */}\r\n          <Sidebar isSidebarOpen={isSidebarOpen} />\r\n        </div>\r\n\r\n        {/* Container for the entire component */}\r\n        <div className='w-full h-full px-6 py-4 overflow-x-auto bg-gray-300'>\r\n\r\n          <div className='flex flex-col items-end justify-between md:flex-row'>\r\n            <div className='flex items-end w-full gap-2 md:w-1/2'> \r\n              <span className='text-3xl '>Customers</span>\r\n              <span className='text-sm text-gray-700'>Enter User Information</span>               \r\n            </div>  \r\n            <div className='flex w-full gap-2 pl-2 mb-2 text-sm font-semibold text-black bg-gray-500 bg-opacity-50 rounded-md md:text-gray-500 md:justify-end md:w-1/2 md:bg-transparent'>\r\n              {/* Navigation links for breadcrumb navigation */}\r\n              <NavLink to=\"/dashboard\" className=\"flex items-center text-gray-700 no-underline\"><FaTachometerAlt />Home </NavLink>\r\n              <span>&gt;</span>\r\n              <NavLink to=\"/customer/view\" className=\"text-gray-700 no-underline\">View Users</NavLink>\r\n              <span>&gt;</span>\r\n              <NavLink to=\"/customer/add\" className=\"text-gray-700 no-underline\">Customers</NavLink>                   \r\n            </div>\r\n          </div>            \r\n\r\n          {/* Inner container with padding and styling */}\r\n          <div className=\"p-6 mx-auto bg-white rounded-lg shadow-md \"> \r\n            <div className=\"flex items-center gap-2 mb-4 border-b-2 border-gray-200\"> \r\n              {/* Header section with navigation links for tabs */}\r\n              <div className=\"flex items-center\">\r\n                {/* Navigation link for the Edit component */}\r\n                <button\r\n                  onClick={()=>setActiveTab(\"Edit\")} // Set active tab to Edit\r\n                  className={`py-2 px-4 font-semibold ${\r\n                    activeTab === \"Edit\"\r\n                      ? \"border-b-2 border-blue-500 text-blue-500\" // Active tab styling\r\n                      : \"text-gray-500\" // Inactive tab styling\r\n                  }`}\r\n                > \r\n                  <i className=\"mr-2 fas fa-edit\"></i> {/* Font Awesome icon for edit */}\r\n                  Add/Edit \r\n                </button>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                {/* Navigation link for the Advanced component */}\r\n                <button \r\n                  onClick={()=>setActiveTab(\"Advanced\")} // Set active tab to Advanced\r\n                  className={`py-2 px-4 font-semibold ${\r\n                    activeTab === \"Advanced\"\r\n                      ? \"border-b-2 border-blue-500 text-blue-500\" // Active tab styling\r\n                      : \"text-gray-500\" // Inactive tab styling\r\n                  }`}\r\n                >\r\n                  <i className=\"mr-2 fas fa-cog\"></i> {/* Font Awesome icon for advanced settings */}\r\n                  Advanced\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* Conditionally render the Edit or Advanced component based on the active tab */}\r\n            {activeTab === \"Edit\" && <Edit formData={formData} setFormData={setFormData} setActiveTab={setActiveTab} id={id}/>} \r\n            {activeTab === \"Advanced\" && <Advanced formData={formData} setFormData={setFormData} setActiveTab={setActiveTab} id={id} p={p} l={l} />}\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["LoadingScreen","isSidebarOpen","setSidebarOpen","useState","_jsxs","className","children","_jsx","Navbar","Sidebar","Input","_ref","id","type","label_class","label","placeholder","div_class","props","ID","useId","htmlFor","Button","text","_typeof","o","Symbol","iterator","constructor","prototype","Edit","_formData$address","_formData$address2","_formData$address3","_formData$address4","_formData$address5","_formData$address6","_formData$shippingAdd","_formData$shippingAdd2","_formData$shippingAdd3","_formData$shippingAdd4","_formData$shippingAdd5","_formData$shippingAdd6","formData","setFormData","setActiveTab","useNavigate","copy","setCopy","loaidng","setLoading","useEffect","navigator","geolocation","getCurrentPosition","async","latitude","longitude","pos","coords","prev","locationLink","err","console","error","alert","handleChange","e","name","value","target","Number","onSubmit","preventDefault","log","response","axios","put","headers","Authorization","localStorage","getItem","data","_err$response3","_err$response4","_err$response4$data","message","updateData","post","customerName","mobile","city","state","postcode","country","area","shippingcountry","shippingCity","shippingArea","shippingState","shippingPostcode","shippingLocationLink","attachmentPath","creditLimit","customerImage","customerId","email","gstNumber","openingBalancePayments","panNumber","phone","previousDue","priceLevel","priceLevelType","salesReturnDue","taxNumber","_err$response","_err$response2","_err$response2$data","postData","onReset","handleReset","onChange","min","files","address","onClick","prevCopy","newCopy","prevData","shippingAddress","colSpan","Advanced","p","l","price_options","loading","price_level","setPrice_level","price_type","setPrice_type","handleClose","Select","options","find","option","selected","Addcustomer","activeTab","window","innerWidth","searchParams","useSearchParams","get","setP","setL","item","_id","fetchData","NavLink","to","FaTachometerAlt"],"sourceRoot":""}